{"version":3,"file":"WearableHubPage-BvJffMC0.js","sources":["../../node_modules/lucide-react/dist/esm/icons/watch.js","../../node_modules/lucide-react/dist/esm/icons/wifi-off.js","../../src/features/analytics/components/WearableStats.tsx","../../src/features/wearables/components/WearableNotificationCenter.tsx","../../src/features/wearables/pages/WearableHubPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 10v2.2l1.6 1\", key: \"n3r21l\" }],\n  [\n    \"path\",\n    { d: \"m16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05\", key: \"18k57s\" }\n  ],\n  [\"path\", { d: \"m7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05\", key: \"16ny36\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"6\", key: \"1vlfrh\" }]\n];\nconst Watch = createLucideIcon(\"watch\", __iconNode);\n\nexport { __iconNode, Watch as default };\n//# sourceMappingURL=watch.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 20h.01\", key: \"zekei9\" }],\n  [\"path\", { d: \"M8.5 16.429a5 5 0 0 1 7 0\", key: \"1bycff\" }],\n  [\"path\", { d: \"M5 12.859a10 10 0 0 1 5.17-2.69\", key: \"1dl1wf\" }],\n  [\"path\", { d: \"M19 12.859a10 10 0 0 0-2.007-1.523\", key: \"4k23kn\" }],\n  [\"path\", { d: \"M2 8.82a15 15 0 0 1 4.177-2.643\", key: \"1grhjp\" }],\n  [\"path\", { d: \"M22 8.82a15 15 0 0 0-11.288-3.764\", key: \"z3jwby\" }],\n  [\"path\", { d: \"m2 2 20 20\", key: \"1ooewy\" }]\n];\nconst WifiOff = createLucideIcon(\"wifi-off\", __iconNode);\n\nexport { __iconNode, WifiOff as default };\n//# sourceMappingURL=wifi-off.js.map\n","import React, { useState, useEffect } from 'react';\nimport { Activity, Heart, Moon, TrendingUp, Clock, Zap } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { useWearableSync, WearableData } from '@/features/wearables/hooks/useWearableSync';\nimport { AnalyticsService } from '@/lib/analytics';\n\ninterface WearableStatsProps {\n  userId?: string;\n  className?: string;\n}\n\nconst WearableStats: React.FC<WearableStatsProps> = ({ userId = 'current-user-id', className }) => {\n  const { getCachedData } = useWearableSync();\n  const [wearableData, setWearableData] = useState<WearableData | null>(null);\n  const [stats, setStats] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedPeriod, setSelectedPeriod] = useState<7 | 30 | 90>(7);\n\n  useEffect(() => {\n    loadWearableData();\n  }, [selectedPeriod]);\n\n  const loadWearableData = async () => {\n    try {\n      setIsLoading(true);\n\n      // Charger les données mises en cache\n      const cachedData = getCachedData();\n      if (cachedData) {\n        setWearableData(cachedData);\n      }\n\n      // Charger les statistiques depuis Supabase\n      const wearableStats = await AnalyticsService.getWearableStats(userId, selectedPeriod);\n      setStats(wearableStats);\n    } catch {\n      console.error('Erreur lors du chargement des données wearables:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const formatSleepQuality = (quality: number) => {\n    if (quality >= 3.5) return { text: 'Excellente', color: 'text-green-600' };\n    if (quality >= 2.5) return { text: 'Bonne', color: 'text-blue-600' };\n    if (quality >= 1.5) return { text: 'Correcte', color: 'text-yellow-600' };\n    return { text: 'Mauvaise', color: 'text-red-600' };\n  };\n\n  const formatDuration = (minutes: number) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    return `${hours}h ${mins}min`;\n  };\n\n  const getStepsProgress = (steps: number) => {\n    const target = 10000;\n    return Math.min((steps / target) * 100, 100);\n  };\n\n  const getHeartRateZone = (avgHeartRate: number) => {\n    if (avgHeartRate >= 150) return { zone: 'Intense', color: 'bg-red-500' };\n    if (avgHeartRate >= 120) return { zone: 'Modérée', color: 'bg-orange-500' };\n    if (avgHeartRate >= 90) return { zone: 'Légère', color: 'bg-yellow-500' };\n    return { zone: 'Repos', color: 'bg-green-500' };\n  };\n\n  if (isLoading) {\n    return (\n      <div className={`flex items-center justify-center p-8 ${className}`}>\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-2\"></div>\n          <p className=\"text-sm text-gray-600\">Chargement des données...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!wearableData && !stats) {\n    return (\n      <div className={`text-center p-8 ${className}`}>\n        <Activity className=\"mx-auto mb-4 text-gray-400\" size={48} />\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Aucune donnée disponible</h3>\n        <p className=\"text-sm text-gray-600 mb-4\">\n          Synchronisez vos appareils connectés pour voir vos statistiques\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Sélecteur de période */}\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-xl font-bold text-gray-900\">Données Wearables</h2>\n        <div className=\"flex space-x-2\">\n          {[7, 30, 90].map(period => (\n            <Button\n              key={period}\n              onClick={() => setSelectedPeriod(period as 7 | 30 | 90)}\n              variant={selectedPeriod === period ? 'default' : 'outline'}\n              size=\"sm\"\n            >\n              {period}j\n            </Button>\n          ))}\n        </div>\n      </div>\n\n      {/* Métriques principales */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {/* Pas quotidiens */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pas aujourd'hui</CardTitle>\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {wearableData?.steps?.toLocaleString() || stats?.totalSteps?.toLocaleString() || 0}\n            </div>\n            <div className=\"mt-2\">\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div\n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                  style={{\n                    width: `${getStepsProgress(wearableData?.steps || stats?.totalSteps || 0)}%`,\n                  }}\n                />\n              </div>\n              <p className=\"text-xs text-muted-foreground mt-1\">Objectif: 10,000 pas</p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Fréquence cardiaque */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Rythme cardiaque</CardTitle>\n            <Heart className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{Math.round(stats?.avgHeartRate || 0)} BPM</div>\n            <div className=\"mt-2\">\n              {stats?.avgHeartRate && (\n                <Badge\n                  variant=\"secondary\"\n                  className={`${getHeartRateZone(stats.avgHeartRate).color} text-white`}\n                >\n                  {getHeartRateZone(stats.avgHeartRate).zone}\n                </Badge>\n              )}\n              <p className=\"text-xs text-muted-foreground mt-1\">\n                Moyenne sur {selectedPeriod} jours\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Sommeil */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Sommeil</CardTitle>\n            <Moon className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatDuration(stats?.avgSleepDuration || 0)}</div>\n            <div className=\"mt-2\">\n              {stats?.avgSleepQuality && (\n                <Badge\n                  variant=\"secondary\"\n                  className={formatSleepQuality(stats.avgSleepQuality).color}\n                >\n                  {formatSleepQuality(stats.avgSleepQuality).text}\n                </Badge>\n              )}\n              <p className=\"text-xs text-muted-foreground mt-1\">Qualité moyenne</p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Calories */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Calories</CardTitle>\n            <Zap className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{wearableData?.caloriesBurned || 0}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              <span className=\"text-green-600\">+12%</span> vs hier\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Détails du sommeil */}\n      {wearableData?.sleepSessions && wearableData.sleepSessions.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Moon className=\"mr-2\" size={20} />\n              Dernière nuit de sommeil\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {wearableData.sleepSessions.map((session, index) => (\n              <div key={index} className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium\">\n                      {session.startTime.toLocaleTimeString()} -{' '}\n                      {session.endTime.toLocaleTimeString()}\n                    </p>\n                    <p className=\"text-xs text-gray-500\">{formatDuration(session.duration)}</p>\n                  </div>\n                  <Badge\n                    variant=\"secondary\"\n                    className={\n                      formatSleepQuality(\n                        session.quality === 'excellent'\n                          ? 4\n                          : session.quality === 'good'\n                            ? 3\n                            : session.quality === 'fair'\n                              ? 2\n                              : 1\n                      ).color\n                    }\n                  >\n                    {session.quality}\n                  </Badge>\n                </div>\n\n                <div className=\"grid grid-cols-3 gap-4\">\n                  <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                    <div className=\"text-lg font-semibold text-blue-600\">\n                      {formatDuration(session.deepSleepDuration || 0)}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">Sommeil profond</div>\n                  </div>\n                  <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\n                    <div className=\"text-lg font-semibold text-purple-600\">\n                      {formatDuration(session.remSleepDuration || 0)}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">Sommeil REM</div>\n                  </div>\n                  <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\n                    <div className=\"text-lg font-semibold text-orange-600\">\n                      {session.awakenings || 0}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">Réveils</div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Activité de la journée */}\n      {wearableData && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <TrendingUp className=\"mr-2\" size={20} />\n              Résumé d'activité\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold text-blue-600\">\n                  {((wearableData.distance || 0) / 1000).toFixed(1)} km\n                </div>\n                <div className=\"text-xs text-gray-500\">Distance</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold text-green-600\">\n                  {wearableData.activeMinutes || 0} min\n                </div>\n                <div className=\"text-xs text-gray-500\">Activité</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold text-orange-600\">\n                  {Math.max(...(wearableData.heartRate || [0]))} BPM\n                </div>\n                <div className=\"text-xs text-gray-500\">FC max</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold text-purple-600\">\n                  {Math.min(...(wearableData.heartRate || [100]))} BPM\n                </div>\n                <div className=\"text-xs text-gray-500\">FC repos</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Dernière synchronisation */}\n      {wearableData?.lastSync && (\n        <Card>\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Clock className=\"text-gray-500\" size={16} />\n                <span className=\"text-sm text-gray-600\">\n                  Dernière synchronisation: {wearableData.lastSync.toLocaleString()}\n                </span>\n              </div>\n              <Badge variant=\"outline\">Synchronisé</Badge>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default WearableStats;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Activity,\n  Heart,\n  Bell,\n  Zap,\n  Target,\n  TrendingUp,\n  Clock,\n  Award,\n  Calendar,\n  User,\n  AlertTriangle,\n  CheckCircle,\n} from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { useWearableSync } from '@/features/wearables/hooks/useWearableSync';\nimport { useToast } from '@/shared/hooks/use-toast';\n\ninterface WearableNotification {\n  id: string;\n  type: 'goal' | 'achievement' | 'reminder' | 'health';\n  title: string;\n  message: string;\n  timestamp: Date;\n  icon: React.ElementType;\n  priority: 'low' | 'medium' | 'high';\n  read: boolean;\n}\n\nconst WearableNotificationCenter: React.FC = () => {\n  const { getCachedData, syncAll, isLoading } = useWearableSync();\n  const { toast } = useToast();\n  const [notifications, setNotifications] = useState<WearableNotification[]>([]);\n  const [dailyGoals] = useState({\n    steps: 10000,\n    calories: 500,\n    activeMinutes: 30,\n    heartRateZone: 120, // BPM minimum pour zone active\n  });\n\n  useEffect(() => {\n    checkForNotifications();\n    const interval = setInterval(checkForNotifications, 60000); // Vérifier toutes les minutes\n    return () => clearInterval(interval);\n  }, []);\n\n  const checkForNotifications = () => {\n    const wearableData = getCachedData();\n    if (!wearableData) return;\n\n    const newNotifications: WearableNotification[] = [];\n\n    // Vérifier les objectifs quotidiens\n    if (wearableData.steps >= dailyGoals.steps) {\n      newNotifications.push({\n        id: 'steps-goal-' + Date.now(),\n        type: 'goal',\n        title: '🎯 Objectif pas atteint !',\n        message: `Bravo ! Vous avez fait ${wearableData.steps.toLocaleString()} pas aujourd'hui`,\n        timestamp: new Date(),\n        icon: Target,\n        priority: 'medium',\n        read: false,\n      });\n    }\n\n    if ((wearableData.caloriesBurned || 0) >= dailyGoals.calories) {\n      newNotifications.push({\n        id: 'calories-goal-' + Date.now(),\n        type: 'goal',\n        title: '🔥 Objectif calories atteint !',\n        message: `Excellente journée ! ${wearableData.caloriesBurned || 0} calories brûlées`,\n        timestamp: new Date(),\n        icon: Zap,\n        priority: 'medium',\n        read: false,\n      });\n    }\n\n    // Vérifier les zones de fréquence cardiaque\n    if (wearableData.heartRate && wearableData.heartRate.length > 0) {\n      const maxHeartRate = Math.max(...wearableData.heartRate);\n\n      if (maxHeartRate > 180) {\n        newNotifications.push({\n          id: 'heart-rate-high-' + Date.now(),\n          type: 'health',\n          title: '⚠️ Fréquence cardiaque élevée',\n          message: `Pic à ${maxHeartRate} BPM détecté. Pensez à vous reposer.`,\n          timestamp: new Date(),\n          icon: AlertTriangle,\n          priority: 'high',\n          read: false,\n        });\n      }\n    }\n\n    // Vérifier les réalisations\n    if (wearableData.steps > 15000) {\n      newNotifications.push({\n        id: 'achievement-super-walker-' + Date.now(),\n        type: 'achievement',\n        title: '🏆 Super Marcheur !',\n        message: `Incroyable ! Plus de 15,000 pas aujourd'hui !`,\n        timestamp: new Date(),\n        icon: Award,\n        priority: 'low',\n        read: false,\n      });\n    }\n\n    // Rappels dd'activitéapos;activité\n    const now = new Date();\n    const lastActivity = wearableData.lastSync || new Date();\n    const hoursSinceLastActivity = (now.getTime() - lastActivity.getTime()) / (1000 * 60 * 60);\n\n    if (hoursSinceLastActivity > 2) {\n      newNotifications.push({\n        id: 'activity-reminder-' + Date.now(),\n        type: 'reminder',\n        title: '💪 Temps de bouger !',\n        message:\n          \"Cela fait un moment que vous n'avez pas été actif. Que diriez-vous d'une petite marche ?\",\n        timestamp: new Date(),\n        icon: Activity,\n        priority: 'low',\n        read: false,\n      });\n    }\n\n    // Ajouter les nouvelles notifications\n    setNotifications(prev => {\n      const existingIds = prev.map(n => n.id);\n      const uniqueNew = newNotifications.filter(n => !existingIds.includes(n.id));\n      return [...prev, ...uniqueNew];\n    });\n\n    // Afficher les notifications toast pour les priorités élevées\n    newNotifications.forEach(notification => {\n      if (notification.priority === 'high') {\n        toast({\n          title: notification.title,\n          description: notification.message,\n          variant: 'destructive',\n        });\n      }\n    });\n  };\n\n  const markAsRead = (id: string) => {\n    setNotifications(prev => prev.map(n => (n.id === id ? { ...n, read: true } : n)));\n  };\n\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  const getNotificationColor = (type: WearableNotification['type']) => {\n    switch (type) {\n      case 'goal':\n        return 'bg-green-50 border-green-200';\n      case 'achievement':\n        return 'bg-yellow-50 border-yellow-200';\n      case 'reminder':\n        return 'bg-blue-50 border-blue-200';\n      case 'health':\n        return 'bg-red-50 border-red-200';\n      default:\n        return 'bg-gray-50 border-gray-200';\n    }\n  };\n\n  const getNotificationIcon = (type: WearableNotification['type']) => {\n    switch (type) {\n      case 'goal':\n        return Target;\n      case 'achievement':\n        return Award;\n      case 'reminder':\n        return Bell;\n      case 'health':\n        return Heart;\n      default:\n        return Activity;\n    }\n  };\n\n  const unreadCount = notifications.filter(n => !n.read).length;\n  const wearableData = getCachedData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* En-tête avec statut */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"relative\">\n            <Bell className=\"text-gray-600\" size={24} />\n            {unreadCount > 0 && (\n              <Badge\n                variant=\"destructive\"\n                className=\"absolute -top-2 -right-2 h-5 w-5 flex items-center justify-center text-xs\"\n              >\n                {unreadCount}\n              </Badge>\n            )}\n          </div>\n          <div>\n            <h2 className=\"text-xl font-bold text-gray-900\">Centre de notifications</h2>\n            <p className=\"text-sm text-gray-600\">\n              {unreadCount > 0\n                ? `${unreadCount} nouvelle(s) notification(s)`\n                : 'Aucune nouvelle notification'}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-2\">\n          <Button onClick={() => syncAll()} disabled={isLoading} size=\"sm\" variant=\"outline\">\n            <Activity className=\"mr-2\" size={16} />\n            Synchroniser\n          </Button>\n          {notifications.length > 0 && (\n            <Button onClick={clearAllNotifications} size=\"sm\" variant=\"ghost\">\n              Tout effacer\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {/* Objectifs quotidiens */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Target className=\"mr-2\" size={20} />\n            Objectifs quotidiens\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {/* Pas */}\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {Math.round(((wearableData?.steps || 0) / dailyGoals.steps) * 100)}%\n              </div>\n              <div className=\"text-sm text-gray-600\">Pas</div>\n              <div className=\"text-xs text-gray-500\">\n                {(wearableData?.steps || 0).toLocaleString()} / {dailyGoals.steps.toLocaleString()}\n              </div>\n              <div className=\"w-full bg-blue-200 rounded-full h-2 mt-2\">\n                <div\n                  className=\"bg-blue-600 h-2 rounded-full\"\n                  style={{\n                    width: `${Math.min(((wearableData?.steps || 0) / dailyGoals.steps) * 100, 100)}%`,\n                  }}\n                />\n              </div>\n            </div>\n\n            {/* Calories */}\n            <div className=\"text-center p-4 bg-red-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {Math.round(((wearableData?.caloriesBurned || 0) / dailyGoals.calories) * 100)}%\n              </div>\n              <div className=\"text-sm text-gray-600\">Calories</div>\n              <div className=\"text-xs text-gray-500\">\n                {wearableData?.caloriesBurned || 0} / {dailyGoals.calories}\n              </div>\n              <div className=\"w-full bg-red-200 rounded-full h-2 mt-2\">\n                <div\n                  className=\"bg-red-600 h-2 rounded-full\"\n                  style={{\n                    width: `${Math.min(((wearableData?.caloriesBurned || 0) / dailyGoals.calories) * 100, 100)}%`,\n                  }}\n                />\n              </div>\n            </div>\n\n            {/* Minutes actives */}\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {Math.round(((wearableData?.activeMinutes || 0) / dailyGoals.activeMinutes) * 100)}%\n              </div>\n              <div className=\"text-sm text-gray-600\">Minutes actives</div>\n              <div className=\"text-xs text-gray-500\">\n                {wearableData?.activeMinutes || 0} / {dailyGoals.activeMinutes}\n              </div>\n              <div className=\"w-full bg-green-200 rounded-full h-2 mt-2\">\n                <div\n                  className=\"bg-green-600 h-2 rounded-full\"\n                  style={{\n                    width: `${Math.min(((wearableData?.activeMinutes || 0) / dailyGoals.activeMinutes) * 100, 100)}%`,\n                  }}\n                />\n              </div>\n            </div>\n\n            {/* Fréquence cardiaque */}\n            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {wearableData?.heartRate\n                  ? Math.round(\n                      wearableData.heartRate.reduce((a, b) => a + b, 0) /\n                        wearableData.heartRate.length\n                    )\n                  : 0}\n              </div>\n              <div className=\"text-sm text-gray-600\">BPM moyen</div>\n              <div className=\"text-xs text-gray-500\">\n                Zone:{' '}\n                {wearableData?.heartRate &&\n                wearableData.heartRate.some(hr => hr > dailyGoals.heartRateZone)\n                  ? 'Active'\n                  : 'Repos'}\n              </div>\n              <div className=\"w-full bg-purple-200 rounded-full h-2 mt-2\">\n                <div\n                  className=\"bg-purple-600 h-2 rounded-full\"\n                  style={{\n                    width: `${Math.min(((wearableData?.heartRate ? Math.max(...wearableData.heartRate) : 0) / 200) * 100, 100)}%`,\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Liste des notifications */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Bell className=\"mr-2\" size={20} />\n            Notifications récentes\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {notifications.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <CheckCircle className=\"mx-auto mb-4 text-gray-400\" size={48} />\n              <p className=\"text-gray-600\">Aucune notification pour le moment</p>\n              <p className=\"text-sm text-gray-500 mt-2\">\n                Vos notifications d&apos;activité et de santé apparaîtront ici\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {notifications.slice(0, 10).map(notification => {\n                const IconComponent = getNotificationIcon(notification.type);\n                return (\n                  <div\n                    key={notification.id}\n                    className={`p-4 rounded-lg border transition-all cursor-pointer ${\n                      notification.read ? 'opacity-60' : ''\n                    } ${getNotificationColor(notification.type)}`}\n                    onClick={() => markAsRead(notification.id)}\n                  >\n                    <div className=\"flex items-start space-x-3\">\n                      <div\n                        className={`p-2 rounded-full ${\n                          notification.priority === 'high'\n                            ? 'bg-red-100'\n                            : notification.priority === 'medium'\n                              ? 'bg-yellow-100'\n                              : 'bg-blue-100'\n                        }`}\n                      >\n                        <IconComponent\n                          size={16}\n                          className={\n                            notification.priority === 'high'\n                              ? 'text-red-600'\n                              : notification.priority === 'medium'\n                                ? 'text-yellow-600'\n                                : 'text-blue-600'\n                          }\n                        />\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center justify-between\">\n                          <h4 className=\"font-medium text-gray-900\">{notification.title}</h4>\n                          <div className=\"flex items-center space-x-2\">\n                            <Badge variant=\"outline\" className=\"text-xs\">\n                              {notification.type}\n                            </Badge>\n                            {!notification.read && (\n                              <div className=\"w-2 h-2 bg-blue-600 rounded-full\" />\n                            )}\n                          </div>\n                        </div>\n                        <p className=\"text-sm text-gray-600 mt-1\">{notification.message}</p>\n                        <div className=\"flex items-center space-x-2 mt-2\">\n                          <Clock size={12} className=\"text-gray-400\" />\n                          <span className=\"text-xs text-gray-500\">\n                            {notification.timestamp.toLocaleTimeString()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Tendances et insights */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <TrendingUp className=\"mr-2\" size={20} />\n            Insights et tendances\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Calendar className=\"text-blue-600\" size={16} />\n                <span className=\"text-sm font-medium\">Cette semaine</span>\n              </div>\n              <p className=\"text-xs text-gray-600\">\n                Votre activité est en hausse de 15% par rapport à la semaine dernière !\n              </p>\n            </div>\n\n            <div className=\"p-4 bg-gradient-to-r from-green-50 to-blue-50 rounded-lg\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <User className=\"text-green-600\" size={16} />\n                <span className=\"text-sm font-medium\">Comparaison</span>\n              </div>\n              <p className=\"text-xs text-gray-600\">\n                Vous êtes plus actif que 78% des utilisateurs de votre âge !\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default WearableNotificationCenter;\n","// pages/WearableHub.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\n\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport {\n  Activity,\n  Heart,\n  Settings as SettingsIcon,\n  Bell,\n  TrendingUp,\n  Watch,\n  Smartphone,\n  BarChart3,\n  RefreshCw,\n  AlertCircle,\n  Wifi,\n  WifiOff,\n} from 'lucide-react';\nimport WearableStats from '@/features/analytics/components/WearableStats';\nimport WearableNotificationCenter from '@/features/wearables/components/WearableNotificationCenter';\nimport Settings from '@/features/profile/pages/SettingsPage';\n\ninterface WearableDevice {\n  id: string;\n  name: string;\n  type: 'watch' | 'fitness_tracker' | 'heart_monitor' | 'smart_scale';\n  brand: string;\n  model: string;\n  connected: boolean;\n  battery_level?: number;\n  last_sync: string;\n  sync_status: 'synced' | 'syncing' | 'error' | 'pending';\n}\n\ninterface WearableError {\n  device_id: string;\n  message: string;\n  timestamp: string;\n  resolved: boolean;\n}\n\nconst WearableHub: React.FC = () => {\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState('overview');\n  const [devices, setDevices] = useState<WearableDevice[]>([]);\n  const [errors, setErrors] = useState<WearableError[]>([]);\n  const [syncLoading, setSyncLoading] = useState(false);\n\n  // Chargement des appareils connectés\n  const loadDevices = useCallback(async () => {\n    try {\n      // Simulation des appareils connectés\n      const mockDevices: WearableDevice[] = [\n        {\n          id: '1',\n          name: 'Apple Watch Series 9',\n          type: 'watch',\n          brand: 'Apple',\n          model: 'Series 9',\n          connected: true,\n          battery_level: 78,\n          last_sync: new Date(Date.now() - 15 * 60 * 1000).toISOString(),\n          sync_status: 'synced',\n        },\n        {\n          id: '2',\n          name: 'Google Fit',\n          type: 'fitness_tracker',\n          brand: 'Google',\n          model: 'Fit App',\n          connected: true,\n          last_sync: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\n          sync_status: 'synced',\n        },\n        {\n          id: '3',\n          name: 'Polar H10',\n          type: 'heart_monitor',\n          brand: 'Polar',\n          model: 'H10',\n          connected: false,\n          last_sync: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n          sync_status: 'error',\n        },\n      ];\n\n      setDevices(mockDevices);\n\n      // Simulation d'erreurs\n      const mockErrors: WearableError[] = [\n        {\n          device_id: '3',\n          message: 'Connexion Bluetooth perdue avec Polar H10',\n          timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\n          resolved: false,\n        },\n      ];\n\n      setErrors(mockErrors);\n    } catch {\n      console.error('Erreur chargement appareils:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de charger vos appareils connectés',\n        variant: 'destructive',\n      });\n    }\n  }, [toast]);\n\n  // Synchronisation manuelle\n  const handleManualSync = useCallback(async () => {\n    setSyncLoading(true);\n\n    try {\n      // Simulation de la synchronisation\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Mise à jour des statuts\n      setDevices(prev =>\n        prev.map(device => ({\n          ...device,\n          last_sync: new Date().toISOString(),\n          sync_status: device.connected ? 'synced' : 'error',\n        }))\n      );\n\n      toast({\n        title: 'Synchronisation réussie',\n        description: 'Toutes vos données wearables sont à jour.',\n      });\n\n      // Analytics\n      if (typeof window !== 'undefined' && window.gtag) {\n        window.gtag('event', 'wearable_manual_sync', {\n          event_category: 'engagement',\n          event_label: 'manual_sync',\n          value: devices.filter(d => d.connected).length,\n        });\n      }\n    } catch {\n      console.error('Erreur synchronisation:', error);\n      toast({\n        title: 'Erreur de synchronisation',\n        description: 'Impossible de synchroniser vos appareils.',\n        variant: 'destructive',\n      });\n    } finally {\n      setSyncLoading(false);\n    }\n  }, [devices, toast]);\n\n  // Reconnexion d'un appareil\n  const handleReconnectDevice = useCallback(\n    async (deviceId: string) => {\n      try {\n        setDevices(prev =>\n          prev.map(device =>\n            device.id === deviceId ? { ...device, sync_status: 'syncing' } : device\n          )\n        );\n\n        // Simulation reconnexion\n        await new Promise(resolve => setTimeout(resolve, 3000));\n\n        setDevices(prev =>\n          prev.map(device =>\n            device.id === deviceId\n              ? {\n                  ...device,\n                  connected: true,\n                  sync_status: 'synced',\n                  last_sync: new Date().toISOString(),\n                }\n              : device\n          )\n        );\n\n        // Résoudre les erreurs liées à cet appareil\n        setErrors(prev =>\n          prev.map(error => (error.device_id === deviceId ? { ...error, resolved: true } : error))\n        );\n\n        const device = devices.find(d => d.id === deviceId);\n        toast({\n          title: 'Appareil reconnecté',\n          description: `${device?.name} est maintenant connecté et synchronisé.`,\n        });\n      } catch {\n        console.error('Erreur reconnexion:', error);\n        setDevices(prev =>\n          prev.map(device =>\n            device.id === deviceId ? { ...device, sync_status: 'error' } : device\n          )\n        );\n      }\n    },\n    [devices, toast]\n  );\n\n  // Résoudre une erreur\n  const handleResolveError = useCallback((errorIndex: number) => {\n    setErrors(prev =>\n      prev.map((error, index) => (index === errorIndex ? { ...error, resolved: true } : error))\n    );\n  }, []);\n\n  // Chargement initial\n  useEffect(() => {\n    loadDevices();\n  }, [loadDevices]);\n\n  // Auto-refresh toutes les 5 minutes\n  useEffect(() => {\n    const interval = setInterval(\n      () => {\n        if (!syncLoading) {\n          loadDevices();\n        }\n      },\n      5 * 60 * 1000\n    );\n\n    return () => clearInterval(interval);\n  }, [loadDevices, syncLoading]);\n\n  const connectedDevices = devices.filter(d => d.connected);\n  const hasErrors = errors.some(e => !e.resolved);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center\">\n                <Watch className=\"text-white\" size={24} />\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">MyFitHero Wearables</h1>\n                <p className=\"text-gray-600\">Centre de contrôle pour vos appareils connectés</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center space-x-4\">\n              <Button\n                onClick={handleManualSync}\n                disabled={syncLoading}\n                variant=\"outline\"\n                size=\"sm\"\n                aria-label=\"Synchroniser manuellement tous les appareils\"\n              >\n                <RefreshCw className={`h-4 w-4 mr-2 ${syncLoading ? 'animate-spin' : ''}`} />\n                {syncLoading ? 'Sync...' : 'Synchroniser'}\n              </Button>\n\n              <Badge\n                variant={connectedDevices.length > 0 ? 'default' : 'destructive'}\n                className={connectedDevices.length > 0 ? 'text-green-600 border-green-600' : ''}\n              >\n                <div\n                  className={`w-2 h-2 rounded-full mr-2 ${\n                    connectedDevices.length > 0 ? 'bg-green-500 animate-pulse' : 'bg-red-500'\n                  }`}\n                />\n                {connectedDevices.length > 0 ? 'En ligne' : 'Hors ligne'}\n              </Badge>\n\n              <Badge variant=\"secondary\">\n                <Activity size={12} className=\"mr-1\" />\n                {connectedDevices.length}/{devices.length} appareils\n              </Badge>\n            </div>\n          </div>\n\n          {/* Alertes d'erreur */}\n          {hasErrors && (\n            <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-center space-x-2\">\n                <AlertCircle className=\"h-4 w-4 text-red-600\" />\n                <span className=\"text-sm font-medium text-red-800\">\n                  {errors.filter(e => !e.resolved).length} problème(s) détecté(s)\n                </span>\n              </div>\n              <div className=\"mt-2 space-y-1\">\n                {errors\n                  .filter(e => !e.resolved)\n                  .map((error, index) => (\n                    <div\n                      key={index}\n                      className=\"flex items-center justify-between text-sm text-red-700\"\n                    >\n                      <span>{error.message}</span>\n                      <Button\n                        onClick={() => handleResolveError(index)}\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"text-red-600 hover:text-red-800\"\n                      >\n                        Résoudre\n                      </Button>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Navigation par onglets */}\n      <div className=\"max-w-7xl mx-auto px-4 py-6\">\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-4\">\n            <TabsTrigger value=\"overview\" className=\"flex items-center space-x-2\">\n              <BarChart3 size={16} />\n              <span>Vue d&apos;ensemble</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"notifications\" className=\"flex items-center space-x-2\">\n              <Bell size={16} />\n              <span>Notifications</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"analytics\" className=\"flex items-center space-x-2\">\n              <TrendingUp size={16} />\n              <span>Analytics</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"settings\" className=\"flex items-center space-x-2\">\n              <SettingsIcon size={16} />\n              <span>Paramètres</span>\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Vue d'ensemble */}\n          <TabsContent value=\"overview\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {/* Statistiques principales */}\n              <div className=\"lg:col-span-2\">\n                <WearableStats />\n              </div>\n\n              {/* Résumé rapide */}\n              <div className=\"space-y-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Activity className=\"mr-2\" size={20} />\n                      Résumé rapide\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">État de santé</span>\n                      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n                        Excellent\n                      </Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">Niveau d&apos;activité</span>\n                      <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-800\">\n                        Très actif\n                      </Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600\">Tendance</span>\n                      <Badge variant=\"secondary\" className=\"bg-purple-100 text-purple-800\">\n                        ↗️ En hausse\n                      </Badge>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <Smartphone className=\"mr-2\" size={20} />\n                      Appareils connectés\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3\">\n                    {devices.map(device => (\n                      <div key={device.id} className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-2\">\n                          {device.type === 'watch' && <Watch className=\"text-blue-500\" size={16} />}\n                          {device.type === 'fitness_tracker' && (\n                            <Activity className=\"text-green-500\" size={16} />\n                          )}\n                          {device.type === 'heart_monitor' && (\n                            <Heart className=\"text-red-500\" size={16} />\n                          )}\n                          <div>\n                            <span className=\"text-sm font-medium\">{device.name}</span>\n                            {device.battery_level && (\n                              <div className=\"text-xs text-gray-500\">\n                                Batterie: {device.battery_level}%\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          {device.connected ? (\n                            <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n                              <Wifi className=\"h-3 w-3 mr-1\" />\n                              Connecté\n                            </Badge>\n                          ) : (\n                            <div className=\"flex items-center space-x-2\">\n                              <Badge variant=\"secondary\" className=\"bg-red-100 text-red-800\">\n                                <WifiOff className=\"h-3 w-3 mr-1\" />\n                                Déconnecté\n                              </Badge>\n                              <Button\n                                onClick={() => handleReconnectDevice(device.id)}\n                                size=\"sm\"\n                                variant=\"outline\"\n                                disabled={device.sync_status === 'syncing'}\n                              >\n                                {device.sync_status === 'syncing' ? 'Connexion...' : 'Reconnecter'}\n                              </Button>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </TabsContent>\n\n          {/* Notifications */}\n          <TabsContent value=\"notifications\">\n            <WearableNotificationCenter />\n          </TabsContent>\n\n          {/* Analytics */}\n          <TabsContent value=\"analytics\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <TrendingUp className=\"mr-2\" size={20} />\n                  Analytics avancés\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                  <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-blue-600\">87%</div>\n                    <div className=\"text-sm text-gray-600\">Objectifs atteints</div>\n                    <div className=\"text-xs text-gray-500\">Ce mois</div>\n                  </div>\n                  <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-green-600\">+12%</div>\n                    <div className=\"text-sm text-gray-600\">Amélioration</div>\n                    <div className=\"text-xs text-gray-500\">vs mois dernier</div>\n                  </div>\n                  <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-purple-600\">15</div>\n                    <div className=\"text-sm text-gray-600\">Jours actifs</div>\n                    <div className=\"text-xs text-gray-500\">Série actuelle</div>\n                  </div>\n                  <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n                    <div className=\"text-2xl font-bold text-orange-600\">4.2</div>\n                    <div className=\"text-sm text-gray-600\">Score santé</div>\n                    <div className=\"text-xs text-gray-500\">/ 5.0</div>\n                  </div>\n                </div>\n\n                <div className=\"mt-8 p-6 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg\">\n                  <h3 className=\"font-medium text-gray-900 mb-2\">Insights personnalisés</h3>\n                  <ul className=\"space-y-2 text-sm text-gray-600\">\n                    <li>• Votre activité est optimale entre 10h et 16h</li>\n                    <li>\n                      • Les jours avec plus de sommeil REM correspondent à de meilleures\n                      performances\n                    </li>\n                    <li>• Votre fréquence cardiaque de repos s&apos;améliore constamment</li>\n                    <li>• Les entraînements matinaux donnent les meilleurs résultats</li>\n                  </ul>\n                </div>\n\n                {/* Graphiques de tendances */}\n                <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"p-4 border rounded-lg\">\n                    <h4 className=\"font-medium mb-2\">Fréquence cardiaque (7 derniers jours)</h4>\n                    <div className=\"h-32 bg-gray-100 rounded flex items-center justify-center text-gray-500\">\n                      Graphique FC - Intégration Chart.js à venir\n                    </div>\n                  </div>\n                  <div className=\"p-4 border rounded-lg\">\n                    <h4 className=\"font-medium mb-2\">Pas quotidiens</h4>\n                    <div className=\"h-32 bg-gray-100 rounded flex items-center justify-center text-gray-500\">\n                      Graphique Pas - Intégration Chart.js à venir\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Paramètres */}\n          <TabsContent value=\"settings\">\n            <Settings />\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\n\nexport default WearableHub;\n"],"names":["__iconNode","Watch","createLucideIcon","WifiOff","WearableStats","userId","className","getCachedData","useWearableSync","wearableData","setWearableData","useState","stats","setStats","isLoading","setIsLoading","selectedPeriod","setSelectedPeriod","useEffect","loadWearableData","cachedData","wearableStats","AnalyticsService","formatSleepQuality","quality","formatDuration","minutes","hours","mins","getStepsProgress","steps","getHeartRateZone","avgHeartRate","jsx","jsxs","Activity","period","Button","Card","CardHeader","CardTitle","CardContent","_a","_b","Heart","Badge","Moon","Zap","session","index","TrendingUp","Clock","WearableNotificationCenter","syncAll","toast","useToast","notifications","setNotifications","dailyGoals","checkForNotifications","interval","newNotifications","Target","maxHeartRate","AlertTriangle","Award","now","lastActivity","prev","existingIds","n","uniqueNew","notification","markAsRead","id","clearAllNotifications","getNotificationColor","type","getNotificationIcon","Bell","unreadCount","a","b","hr","CheckCircle","IconComponent","Calendar","User","WearableHub","activeTab","setActiveTab","devices","setDevices","errors","setErrors","syncLoading","setSyncLoading","loadDevices","useCallback","mockDevices","mockErrors","handleManualSync","resolve","device","d","handleReconnectDevice","deviceId","error","handleResolveError","errorIndex","connectedDevices","hasErrors","e","RefreshCw","AlertCircle","Tabs","TabsList","TabsTrigger","BarChart3","SettingsIcon","TabsContent","Smartphone","Wifi","Settings"],"mappings":"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","x_google_ignoreList":[0,1]}