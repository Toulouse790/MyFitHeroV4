{"version":3,"mappings":"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","names":["__iconNode","CircleCheck","createLucideIcon","SquarePen","IndexPage","lazy","AuthPage","__vitePreload","LandingPage","authRoutes","Analytics","ProfilePage","ProfileComplete","ProfileComplete$1","Settings","n","dashboardRoutes","WorkoutPage","WorkoutDetailPage","ExercisesPage","ExerciseDetailPage","ChallengesPage","RecoveryPage","AICoachPage","fitnessRoutes","Nutrition","Hydration","Sleep","WearableHub","wellnessRoutes","Social","socialRoutes","Admin","SupportPage","PrivacyPage","TermsPage","NotFound","adminRoutes","legalRoutes","specialRoutes","allRoutes","_a","route","findRouteByPath","path","routePattern","useCurrentRoute","location","useLocation","currentRoute","useMemo","useAppNavigation","setLocation","navigateTo","options","appStoreUser","appStore","profileCompletion","fields","completedFields","field","percentage","bmi","category","color","profileSections","User","Dumbbell","Trophy","Target","_b","getPersonalizedMessage","userName","isComplete","jsxs","jsx","UniformHeader","Button","Edit","Card","CardContent","Fragment","CheckCircle2","AlertCircle","Badge","Progress","Zap","Heart","section","index","SectionIcon","incompletedFields","sectionComplete","CardHeader","CardTitle","fieldIndex","isEmpty","isRequired"],"ignoreList":[0,1],"sources":["../../node_modules/lucide-react/dist/esm/icons/circle-check.js","../../node_modules/lucide-react/dist/esm/icons/square-pen.js","../../src/routes/auth.ts","../../src/routes/dashboard.ts","../../src/routes/fitness.ts","../../src/routes/wellness.ts","../../src/routes/social.ts","../../src/routes/admin.ts","../../src/routes/index.ts","../../src/routes/hooks.ts","../../src/features/auth/pages/ProfileComplete.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m9 12 2 2 4-4\", key: \"dzmm74\" }]\n];\nconst CircleCheck = createLucideIcon(\"circle-check\", __iconNode);\n\nexport { __iconNode, CircleCheck as default };\n//# sourceMappingURL=circle-check.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\", key: \"1m0v6g\" }],\n  [\n    \"path\",\n    {\n      d: \"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z\",\n      key: \"ohrbg2\"\n    }\n  ]\n];\nconst SquarePen = createLucideIcon(\"square-pen\", __iconNode);\n\nexport { __iconNode, SquarePen as default };\n//# sourceMappingURL=square-pen.js.map\n","// routes/auth.ts\nimport { lazy } from 'react';\nimport { RouteConfig } from './types';\n\n// Lazy loading des composants d'authentification\nconst IndexPage = lazy(() => import('@/pages/index'));\nconst AuthPage = lazy(() => import('@/features/auth/pages/AuthPage'));\nconst LandingPage = lazy(() => import('@/features/landing/pages/LandingPage'));\n\nexport const authRoutes: RouteConfig[] = [\n  {\n    path: '/',\n    component: IndexPage,\n    isProtected: false,\n    metadata: {\n      title: 'Accueil',\n      description: \"Page d'accueil MyFitHero\",\n      category: 'auth',\n    },\n  },\n  {\n    path: '/login',\n    component: IndexPage,\n    isProtected: false,\n    metadata: {\n      title: 'Connexion',\n      description: 'Se connecter à MyFitHero',\n      category: 'auth',\n    },\n  },\n  {\n    path: '/register',\n    component: IndexPage,\n    isProtected: false,\n    metadata: {\n      title: 'Inscription',\n      description: 'Créer un compte MyFitHero',\n      category: 'auth',\n    },\n  },\n  {\n    path: '/auth',\n    component: AuthPage,\n    isProtected: false,\n    metadata: {\n      title: 'Authentification',\n      description: \"Page d'authentification\",\n      category: 'auth',\n    },\n  },\n  {\n    path: '/landing',\n    component: LandingPage,\n    isProtected: false,\n    metadata: {\n      title: 'Bienvenue',\n      description: 'Page de présentation',\n      category: 'auth',\n    },\n  },\n];\n","// routes/dashboard.ts\nimport { lazy } from 'react';\nimport { RouteConfig } from './types';\n\n// Lazy loading des composants dashboard\nconst Analytics = lazy(() => import('@/features/analytics/pages/AnalyticsPage'));\nconst ProfilePage = lazy(() => import('@/features/profile/pages/ProfilePage'));\nconst ProfileComplete = lazy(() => import('@/features/auth/pages/ProfileComplete'));\nconst Settings = lazy(() => import('@/features/profile/pages/SettingsPage'));\n\nexport const dashboardRoutes: RouteConfig[] = [\n  {\n    path: '/dashboard',\n    component: Analytics,\n    isProtected: true,\n    metadata: {\n      title: 'Tableau de bord',\n      description: \"Vue d'ensemble de vos statistiques\",\n      icon: 'BarChart3',\n      category: 'dashboard',\n    },\n  },\n  {\n    path: '/analytics',\n    component: Analytics,\n    isProtected: true,\n    metadata: {\n      title: 'Analytiques',\n      description: 'Analyses détaillées de vos performances',\n      icon: 'TrendingUp',\n      category: 'dashboard',\n    },\n  },\n  {\n    path: '/profile',\n    component: ProfilePage,\n    isProtected: true,\n    metadata: {\n      title: 'Profil',\n      description: 'Gérer votre profil utilisateur',\n      icon: 'User',\n      category: 'dashboard',\n    },\n  },\n  {\n    path: '/profile/complete',\n    component: ProfileComplete,\n    isProtected: true,\n    metadata: {\n      title: 'Compléter le profil',\n      description: 'Finaliser la configuration de votre profil',\n      icon: 'UserCheck',\n      category: 'dashboard',\n    },\n  },\n  {\n    path: '/settings',\n    component: Settings,\n    isProtected: true,\n    metadata: {\n      title: 'Paramètres',\n      description: \"Configuration de l'application\",\n      icon: 'Settings',\n      category: 'settings',\n    },\n  },\n];\n","// routes/fitness.ts\nimport { lazy } from 'react';\nimport { RouteConfig } from './types';\n\n// Lazy loading des composants fitness\nconst WorkoutPage = lazy(() => import('@/features/workout/pages/WorkoutPage'));\nconst WorkoutDetailPage = lazy(() => import('@/features/workout/pages/WorkoutDetailPage'));\nconst ExercisesPage = lazy(() => import('@/features/workout/pages/ExercisesPage'));\nconst ExerciseDetailPage = lazy(() => import('@/features/workout/pages/ExerciseDetailPage'));\nconst ChallengesPage = lazy(() => import('@/features/social/pages/ChallengesPage'));\nconst RecoveryPage = lazy(() => import('@/features/recovery/pages/RecoveryPage'));\nconst AICoachPage = lazy(() => import('@/features/ai-coach/pages/AICoachPage'));\n\nexport const fitnessRoutes: RouteConfig[] = [\n  {\n    path: '/workout',\n    component: WorkoutPage,\n    isProtected: true,\n    metadata: {\n      title: 'Entraînement',\n      description: \"Sessions d'entraînement\",\n      icon: 'Dumbbell',\n      category: 'fitness',\n    },\n  },\n  {\n    path: '/workout/:id',\n    component: WorkoutDetailPage,\n    isProtected: true,\n    metadata: {\n      title: 'Détail entraînement',\n      description: \"Détails d'une session d'entraînement\",\n      icon: 'Eye',\n      category: 'fitness',\n    },\n  },\n  {\n    path: '/exercises',\n    component: ExercisesPage,\n    isProtected: true,\n    metadata: {\n      title: 'Exercices',\n      description: \"Bibliothèque d'exercices\",\n      icon: 'Activity',\n      category: 'fitness',\n    },\n  },\n  {\n    path: '/exercises/:id',\n    component: ExerciseDetailPage,\n    isProtected: true,\n    metadata: {\n      title: 'Détail exercice',\n      description: \"Instructions détaillées de l'exercice\",\n      icon: 'Info',\n      category: 'fitness',\n    },\n  },\n  {\n    path: '/challenges',\n    component: ChallengesPage,\n    isProtected: true,\n    metadata: {\n      title: 'Défis',\n      description: 'Relevez des défis fitness',\n      icon: 'Trophy',\n      category: 'fitness',\n    },\n  },\n  {\n    path: '/recovery',\n    component: RecoveryPage,\n    isProtected: true,\n    metadata: {\n      title: 'Récupération',\n      description: 'Suivi de votre récupération musculaire',\n      icon: 'Heart',\n      category: 'fitness',\n    },\n  },\n  {\n    path: '/ai-coach',\n    component: AICoachPage,\n    isProtected: true,\n    metadata: {\n      title: 'Coach IA',\n      description: 'Coaching personnalisé par intelligence artificielle',\n      icon: 'Brain',\n      category: 'fitness',\n    },\n  },\n];\n","// routes/wellness.ts\nimport { lazy } from 'react';\nimport { RouteConfig } from './types';\n\n// Lazy loading des composants bien-être\nconst Nutrition = lazy(() => import('@/features/nutrition/pages/NutritionPage'));\nconst Hydration = lazy(() => import('@/features/hydration/pages/HydrationPage'));\nconst Sleep = lazy(() => import('@/features/sleep/pages/SleepPage'));\nconst WearableHub = lazy(() => import('@/features/wearables/pages/WearableHubPage'));\n\nexport const wellnessRoutes: RouteConfig[] = [\n  {\n    path: '/nutrition',\n    component: Nutrition,\n    isProtected: true,\n    metadata: {\n      title: 'Nutrition',\n      description: 'Suivi nutritionnel et calories',\n      icon: 'Apple',\n      category: 'wellness',\n    },\n  },\n  {\n    path: '/hydration',\n    component: Hydration,\n    isProtected: true,\n    metadata: {\n      title: 'Hydratation',\n      description: \"Suivi de votre consommation d'eau\",\n      icon: 'Droplets',\n      category: 'wellness',\n    },\n  },\n  {\n    path: '/hydration/history',\n    component: Hydration, // Vous pourriez créer une page dédiée à l'historique\n    isProtected: true,\n    metadata: {\n      title: 'Historique hydratation',\n      description: \"Historique de votre consommation d'eau\",\n      icon: 'Calendar',\n      category: 'wellness',\n    },\n  },\n  {\n    path: '/sleep',\n    component: Sleep,\n    isProtected: true,\n    metadata: {\n      title: 'Sommeil',\n      description: 'Suivi de votre qualité de sommeil',\n      icon: 'Moon',\n      category: 'wellness',\n    },\n  },\n  {\n    path: '/wearables',\n    component: WearableHub,\n    isProtected: true,\n    metadata: {\n      title: 'Objets connectés',\n      description: 'Connexion avec vos appareils wearables',\n      icon: 'Watch',\n      category: 'wellness',\n    },\n  },\n];\n","// routes/social.ts\nimport { lazy } from 'react';\nimport { RouteConfig } from './types';\n\n// Lazy loading des composants sociaux\nconst Social = lazy(() => import('@/features/social/pages/SocialPage'));\n\nexport const socialRoutes: RouteConfig[] = [\n  {\n    path: '/social',\n    component: Social,\n    isProtected: true,\n    metadata: {\n      title: 'Social',\n      description: 'Communauté et partage',\n      icon: 'Users',\n      category: 'social',\n    },\n  },\n  {\n    path: '/social/feed',\n    component: Social, // Vous pourriez créer des sous-composants\n    isProtected: true,\n    metadata: {\n      title: \"Fil d'actualité\",\n      description: 'Actualités de la communauté',\n      icon: 'MessageSquare',\n      category: 'social',\n    },\n  },\n  {\n    path: '/social/challenges',\n    component: Social,\n    isProtected: true,\n    metadata: {\n      title: 'Défis communautaires',\n      description: 'Défis entre amis',\n      icon: 'Zap',\n      category: 'social',\n    },\n  },\n  {\n    path: '/social/friends',\n    component: Social,\n    isProtected: true,\n    metadata: {\n      title: 'Amis',\n      description: 'Gérer vos connexions',\n      icon: 'UserPlus',\n      category: 'social',\n    },\n  },\n];\n","// routes/admin.ts\nimport { lazy } from 'react';\nimport { RouteConfig } from './types';\n\n// Lazy loading des composants admin et légaux\nconst Admin = lazy(() => import('@/features/admin/pages/AdminPage'));\nconst SupportPage = lazy(() => import('@/pages/SupportPage'));\nconst PrivacyPage = lazy(() => import('@/pages/PrivacyPage'));\nconst TermsPage = lazy(() => import('@/pages/TermsPage'));\nconst NotFound = lazy(() => import('@/pages/NotFound'));\n\nexport const adminRoutes: RouteConfig[] = [\n  {\n    path: '/admin',\n    component: Admin,\n    isProtected: true,\n    requiredRoles: ['admin', 'moderator'],\n    metadata: {\n      title: 'Administration',\n      description: \"Panneau d'administration\",\n      icon: 'Shield',\n      category: 'admin',\n    },\n  },\n  {\n    path: '/support',\n    component: SupportPage,\n    isProtected: true,\n    metadata: {\n      title: 'Support',\n      description: \"Centre d'aide et support\",\n      icon: 'HelpCircle',\n      category: 'settings',\n    },\n  },\n];\n\nexport const legalRoutes: RouteConfig[] = [\n  {\n    path: '/privacy',\n    component: PrivacyPage,\n    isProtected: false,\n    metadata: {\n      title: 'Confidentialité',\n      description: 'Politique de confidentialité',\n      icon: 'Lock',\n      category: 'legal',\n    },\n  },\n  {\n    path: '/terms',\n    component: TermsPage,\n    isProtected: false,\n    metadata: {\n      title: \"Conditions d'utilisation\",\n      description: 'Termes et conditions',\n      icon: 'FileText',\n      category: 'legal',\n    },\n  },\n];\n\nexport const specialRoutes: RouteConfig[] = [\n  {\n    path: '/404',\n    component: NotFound,\n    isProtected: false,\n    metadata: {\n      title: 'Page non trouvée',\n      description: \"La page demandée n'existe pas\",\n      category: 'auth',\n    },\n  },\n];\n","// routes/index.ts\nimport { RouteConfig, RouteGroup } from './types';\nimport { authRoutes } from './auth';\nimport { dashboardRoutes } from './dashboard';\nimport { fitnessRoutes } from './fitness';\nimport { wellnessRoutes } from './wellness';\nimport { socialRoutes } from './social';\nimport { adminRoutes, legalRoutes, specialRoutes } from './admin';\n\n// Compilation de toutes les routes\nexport const allRoutes: RouteConfig[] = [\n  ...authRoutes,\n  ...dashboardRoutes,\n  ...fitnessRoutes,\n  ...wellnessRoutes,\n  ...socialRoutes,\n  ...adminRoutes,\n  ...legalRoutes,\n  ...specialRoutes,\n];\n\n// Routes organisées par catégorie\nexport const routeGroups: RouteGroup[] = [\n  { category: 'auth', routes: authRoutes },\n  { category: 'dashboard', routes: dashboardRoutes },\n  { category: 'fitness', routes: fitnessRoutes },\n  { category: 'wellness', routes: wellnessRoutes },\n  { category: 'social', routes: socialRoutes },\n  { category: 'admin', routes: adminRoutes },\n  {\n    category: 'settings',\n    routes: dashboardRoutes.filter(r => r.metadata?.category === 'settings'),\n  },\n  { category: 'legal', routes: legalRoutes },\n];\n\n// Routes protégées\nexport const protectedRoutes = allRoutes.filter(route => route.isProtected);\n\n// Routes publiques\nexport const publicRoutes = allRoutes.filter(route => !route.isProtected);\n\n// Fonction utilitaire pour trouver une route par path\nexport const findRouteByPath = (path: string): RouteConfig | undefined => {\n  return allRoutes.find(route => {\n    // Support des paramètres dynamiques (:id, etc.)\n    const routePattern = route.path.replace(/:[^/]+/g, '[^/]+');\n    const regex = new RegExp(`^${routePattern}$`);\n    return regex.test(path);\n  });\n};\n\n// Fonction utilitaire pour obtenir les routes par catégorie\nexport const getRoutesByCategory = (category: string): RouteConfig[] => {\n  return allRoutes.filter(route => route.metadata?.category === category);\n};\n\n// Export des routes individuelles pour l'usage direct\nexport {\n  authRoutes,\n  dashboardRoutes,\n  fitnessRoutes,\n  wellnessRoutes,\n  socialRoutes,\n  adminRoutes,\n  legalRoutes,\n  specialRoutes,\n};\n\n// Export des types\nexport type { RouteConfig, RouteGroup, RouteCategory } from './types';\n","// routes/hooks.ts\nimport { useLocation, useRouter } from 'wouter';\nimport { useMemo } from 'react';\nimport { findRouteByPath, getRoutesByCategory, type RouteConfig } from './index';\n\n/**\n * Hook pour obtenir les informations de la route actuelle\n */\nexport const useCurrentRoute = (): {\n  currentRoute: RouteConfig | undefined;\n  currentPath: string;\n  isProtectedRoute: boolean;\n} => {\n  const [location] = useLocation();\n\n  const currentRoute = useMemo(() => {\n    return findRouteByPath(location);\n  }, [location]);\n\n  return {\n    currentRoute,\n    currentPath: location,\n    isProtectedRoute: currentRoute?.isProtected ?? false,\n  };\n};\n\n/**\n * Hook pour la navigation avec métadonnées\n */\nexport const useAppNavigation = () => {\n  const [location, setLocation] = useLocation();\n  const { currentRoute } = useCurrentRoute();\n\n  const navigateTo = (path: string, options?: { replace?: boolean }) => {\n    if (options?.replace) {\n      setLocation(path, { replace: true });\n    } else {\n      setLocation(path);\n    }\n  };\n\n  const goBack = () => {\n    window.history.back();\n  };\n\n  const goHome = () => {\n    navigateTo('/dashboard');\n  };\n\n  return {\n    navigateTo,\n    goBack,\n    goHome,\n    currentRoute,\n    location,\n  };\n};\n\n/**\n * Hook pour obtenir les routes de navigation par catégorie\n */\nexport const useNavigationRoutes = (category?: string) => {\n  const routes = useMemo(() => {\n    if (category) {\n      return getRoutesByCategory(category);\n    }\n    // Retourne les routes principales pour la navigation\n    return getRoutesByCategory('dashboard')\n      .concat(getRoutesByCategory('fitness'))\n      .concat(getRoutesByCategory('wellness'))\n      .concat(getRoutesByCategory('social'));\n  }, [category]);\n\n  return routes;\n};\n\n/**\n * Hook pour vérifier les permissions de route\n */\nexport const useRoutePermissions = (routePath?: string) => {\n  const route = useMemo(() => {\n    if (!routePath) return null;\n    return findRouteByPath(routePath);\n  }, [routePath]);\n\n  const hasAccess = (userRoles: string[] = []): boolean => {\n    if (!route) return false;\n    if (!route.isProtected) return true;\n    if (!route.requiredRoles || route.requiredRoles.length === 0) return true;\n\n    return route.requiredRoles.some(role => userRoles.includes(role));\n  };\n\n  return {\n    route,\n    hasAccess,\n    isProtected: route?.isProtected ?? false,\n    requiredRoles: route?.requiredRoles ?? [],\n  };\n};\n","// pages/profile-complete.tsx\nimport React, { useMemo } from 'react';\nimport { useLocation, useRoute } from 'wouter';\nimport { useAppNavigation } from '@/routes/hooks';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport UniformHeader from '@/features/profile/components/UniformHeader';\nimport {\n  User,\n  Trophy,\n  Target,\n  Dumbbell,\n  Calendar,\n  MapPin,\n  Mail,\n  Phone,\n  Edit,\n  CheckCircle2,\n  AlertCircle,\n  Zap,\n  Heart,\n} from 'lucide-react';\nimport { appStore } from '@/store/appStore';\n\nconst ProfileComplete: React.FC = () => {\n  const { navigateTo } = useAppNavigation();\n  const { appStoreUser } = appStore();\n\n  // Calcul de complétude du profil optimisé\n  const profileCompletion = useMemo(() => {\n    if (!appStoreUser) return { percentage: 0, completedFields: 0, totalFields: 0 };\n\n    const fields = [\n      { key: 'full_name', value: appStoreUser.full_name, required: true },\n      { key: 'email', value: appStoreUser.email, required: true },\n      { key: 'age', value: appStoreUser.age, required: true },\n      { key: 'gender', value: appStoreUser.gender, required: true },\n      { key: 'sport', value: appStoreUser.sport, required: true },\n      { key: 'height', value: appStoreUser.height, required: true },\n      { key: 'weight', value: appStoreUser.weight, required: true },\n      { key: 'phone', value: appStoreUser.phone, required: false },\n      { key: 'city', value: appStoreUser.city, required: false },\n      { key: 'bio', value: appStoreUser.bio, required: false },\n      { key: 'fitness_experience', value: appStoreUser.fitness_experience, required: true },\n      { key: 'primary_goals', value: appStoreUser.primary_goals, required: true },\n      { key: 'training_frequency', value: appStoreUser.training_frequency, required: false },\n    ];\n\n    const completedFields = fields.filter(\n      field =>\n        field.value !== null &&\n        field.value !== undefined &&\n        field.value !== '' &&\n        (Array.isArray(field.value) ? field.value.length > 0 : true)\n    ).length;\n\n    const percentage = Math.round((completedFields / fields.length) * 100);\n\n    return {\n      percentage,\n      completedFields,\n      totalFields: fields.length,\n      isComplete: percentage >= 85, // 85% pour considérer comme complet\n    };\n  }, [appStoreUser]);\n\n  // Calcul du BMI\n  const bmi = useMemo(() => {\n    if (!appStoreUser?.height || !appStoreUser?.weight) return null;\n\n    const bmi = appStoreUser.weight / Math.pow(appStoreUser.height / 100, 2);\n    let category = '';\n    let color = '';\n\n    if (bmi < 18.5) {\n      category = 'Sous-poids';\n      color = 'text-blue-600';\n    } else if (bmi < 25) {\n      category = 'Normal';\n      color = 'text-green-600';\n    } else if (bmi < 30) {\n      category = 'Surpoids';\n      color = 'text-yellow-600';\n    } else {\n      category = 'Obésité';\n      color = 'text-red-600';\n    }\n\n    return { value: bmi.toFixed(1), category, color };\n  }, [appStoreUser]);\n\n  const profileSections = [\n    {\n      title: 'Informations personnelles',\n      icon: User,\n      color: 'bg-blue-50 border-blue-200',\n      fields: [\n        {\n          label: 'Nom complet',\n          value:\n            appStoreUser?.full_name || (appStoreUser?.first_name && appStoreUser?.last_name)\n              ? `${appStoreUser.first_name} ${appStoreUser.last_name}`\n              : '-',\n          key: 'full_name',\n          required: true,\n        },\n        { label: 'Email', value: appStoreUser?.email || '-', key: 'email', required: true },\n        { label: 'Téléphone', value: appStoreUser?.phone || '-', key: 'phone', required: false },\n        {\n          label: 'Âge',\n          value: appStoreUser?.age ? `${appStoreUser.age} ans` : '-',\n          key: 'age',\n          required: true,\n        },\n        {\n          label: 'Genre',\n          value:\n            appStoreUser?.gender === 'male'\n              ? 'Homme'\n              : appStoreUser?.gender === 'female'\n                ? 'Femme'\n                : '-',\n          key: 'gender',\n          required: true,\n        },\n      ],\n    },\n    {\n      title: 'Profil physique',\n      icon: Dumbbell,\n      color: 'bg-green-50 border-green-200',\n      fields: [\n        {\n          label: 'Taille',\n          value: appStoreUser?.height ? `${appStoreUser.height} cm` : '-',\n          key: 'height',\n          required: true,\n        },\n        {\n          label: 'Poids',\n          value: appStoreUser?.weight ? `${appStoreUser.weight} kg` : '-',\n          key: 'weight',\n          required: true,\n        },\n        {\n          label: 'IMC',\n          value: bmi ? `${bmi.value} (${bmi.category})` : '-',\n          key: 'bmi',\n          required: false,\n          color: bmi?.color,\n        },\n        { label: 'Ville', value: appStoreUser?.city || '-', key: 'city', required: false },\n      ],\n    },\n    {\n      title: 'Profil sportif',\n      icon: Trophy,\n      color: 'bg-purple-50 border-purple-200',\n      fields: [\n        {\n          label: 'Sport principal',\n          value: appStoreUser?.sport || '-',\n          key: 'sport',\n          required: true,\n        },\n        {\n          label: 'Position',\n          value: appStoreUser?.sport_position || '-',\n          key: 'sport_position',\n          required: false,\n        },\n        {\n          label: 'Niveau',\n          value: appStoreUser?.sport_level || '-',\n          key: 'sport_level',\n          required: false,\n        },\n        {\n          label: 'Expérience fitness',\n          value: appStoreUser?.fitness_experience\n            ? appStoreUser.fitness_experience.charAt(0).toUpperCase() +\n              appStoreUser.fitness_experience.slice(1)\n            : '-',\n          key: 'fitness_experience',\n          required: true,\n        },\n      ],\n    },\n    {\n      title: 'Objectifs et préférences',\n      icon: Target,\n      color: 'bg-orange-50 border-orange-200',\n      fields: [\n        {\n          label: 'Objectifs principaux',\n          value: appStoreUser?.primary_goals?.join(', ') || '-',\n          key: 'primary_goals',\n          required: true,\n        },\n        {\n          label: \"Fréquence d'entraînement\",\n          value: appStoreUser?.training_frequency\n            ? `${appStoreUser.training_frequency} jours/semaine`\n            : '-',\n          key: 'training_frequency',\n          required: false,\n        },\n        {\n          label: 'Modules actifs',\n          value: appStoreUser?.active_modules?.join(', ') || '-',\n          key: 'active_modules',\n          required: false,\n        },\n        { label: 'Bio', value: appStoreUser?.bio || '-', key: 'bio', required: false },\n      ],\n    },\n  ];\n\n  const getPersonalizedMessage = () => {\n    const userName = appStoreUser?.first_name || appStoreUser?.username || 'Champion';\n    const { percentage, isComplete } = profileCompletion;\n\n    if (isComplete) {\n      return `🎉 Parfait ${userName} ! Votre profil est complet et optimisé pour ${appStoreUser?.sport}`;\n    } else if (percentage >= 70) {\n      return `💪 Excellent ${userName}, encore quelques détails pour finaliser`;\n    } else if (percentage >= 50) {\n      return `⚡ Bien joué ${userName}, vous êtes sur la bonne voie`;\n    } else {\n      return `🚀 ${userName}, complétez votre profil pour une expérience optimale`;\n    }\n  };\n\n  if (!appStoreUser) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <UniformHeader title=\"Profil\" showBackButton={true} gradient={true} />\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <UniformHeader\n        title=\"Compléter le profil\"\n        subtitle={getPersonalizedMessage()}\n        showBackButton={true}\n        gradient={true}\n        rightContent={\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => navigateTo('/profile')}\n            className=\"text-white hover:bg-white/20\"\n          >\n            <Edit className=\"w-4 h-4 mr-2\" />\n            Modifier\n          </Button>\n        }\n      />\n\n      <div className=\"max-w-4xl mx-auto px-4 py-6 space-y-6\">\n        {/* Statut de complétude */}\n        <Card\n          className={`${profileCompletion.isComplete ? 'bg-green-50 border-green-200' : 'bg-amber-50 border-amber-200'}`}\n        >\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                {profileCompletion.isComplete ? (\n                  <>\n                    <CheckCircle2 className=\"h-6 w-6 text-green-600\" />\n                    <span className=\"font-semibold text-green-900\">Profil complet !</span>\n                  </>\n                ) : (\n                  <>\n                    <AlertCircle className=\"h-6 w-6 text-amber-600\" />\n                    <span className=\"font-semibold text-amber-900\">\n                      Profil {profileCompletion.percentage}% complet\n                    </span>\n                  </>\n                )}\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Badge variant={profileCompletion.isComplete ? 'default' : 'secondary'}>\n                  {profileCompletion.completedFields}/{profileCompletion.totalFields} champs\n                </Badge>\n                <Badge variant=\"outline\">{profileCompletion.percentage}%</Badge>\n              </div>\n            </div>\n\n            <Progress value={profileCompletion.percentage} className=\"h-3 mb-4\" />\n\n            {!profileCompletion.isComplete && (\n              <div className=\"bg-white/50 p-3 rounded-lg\">\n                <p className=\"text-sm text-gray-700 mb-2\">\n                  <strong>Pourquoi compléter votre profil ?</strong>\n                </p>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 text-xs text-gray-600\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Zap className=\"h-3 w-3 text-yellow-500\" />\n                    <span>Recommandations IA personnalisées</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Heart className=\"h-3 w-3 text-red-500\" />\n                    <span>Calculs nutritionnels précis</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Trophy className=\"h-3 w-3 text-purple-500\" />\n                    <span>Objectifs adaptés à votre sport</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Target className=\"h-3 w-3 text-blue-500\" />\n                    <span>Coaching intelligent</span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Sections du profil */}\n        <div className=\"space-y-6\">\n          {profileSections.map((section, index) => {\n            const SectionIcon = section.icon;\n            const incompletedFields = section.fields.filter(\n              field => field.required && (field.value === '-' || !field.value)\n            );\n            const sectionComplete = incompletedFields.length === 0;\n\n            return (\n              <Card key={index} className={sectionComplete ? 'border-green-200' : section.color}>\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle className=\"flex items-center space-x-2\">\n                      <SectionIcon className=\"h-5 w-5 text-gray-600\" />\n                      <span>{section.title}</span>\n                    </CardTitle>\n                    <div className=\"flex items-center space-x-2\">\n                      {sectionComplete ? (\n                        <Badge\n                          variant=\"outline\"\n                          className=\"bg-green-50 text-green-700 border-green-200\"\n                        >\n                          <CheckCircle2 className=\"h-3 w-3 mr-1\" />\n                          Complet\n                        </Badge>\n                      ) : (\n                        <Badge\n                          variant=\"outline\"\n                          className=\"bg-amber-50 text-amber-700 border-amber-200\"\n                        >\n                          <AlertCircle className=\"h-3 w-3 mr-1\" />\n                          {incompletedFields.length} manquant\n                          {incompletedFields.length > 1 ? 's' : ''}\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {section.fields.map((field, fieldIndex) => {\n                      const isEmpty = field.value === '-' || !field.value;\n                      const isRequired = field.required;\n\n                      return (\n                        <div\n                          key={fieldIndex}\n                          className={`flex justify-between items-center p-3 rounded-lg transition-colors ${\n                            isEmpty && isRequired\n                              ? 'bg-red-50 border border-red-100'\n                              : isEmpty\n                                ? 'bg-gray-50'\n                                : 'bg-green-50 border border-green-100'\n                          }`}\n                        >\n                          <div className=\"flex items-center space-x-2\">\n                            <span className=\"text-sm font-medium text-gray-600\">{field.label}</span>\n                            {isRequired && <span className=\"text-red-500 text-xs\">*</span>}\n                          </div>\n                          <span\n                            className={`text-sm ${\n                              isEmpty\n                                ? isRequired\n                                  ? 'text-red-500 font-medium'\n                                  : 'text-gray-400'\n                                : field.color || 'text-gray-900 font-medium'\n                            }`}\n                          >\n                            {field.value}\n                          </span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n\n        {/* Actions */}\n        <Card className=\"bg-gradient-to-r from-blue-50 to-purple-50 border-purple-100\">\n          <CardContent className=\"p-6\">\n            <div className=\"text-center space-y-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                {profileCompletion.isComplete ? 'Profil optimisé !' : 'Finaliser votre profil'}\n              </h3>\n              <p className=\"text-gray-600 max-w-2xl mx-auto\">\n                {profileCompletion.isComplete\n                  ? 'Votre profil est maintenant complet et optimisé pour une expérience MyFitHero personnalisée.'\n                  : 'Complétez les champs manquants pour débloquer toutes les fonctionnalités de coaching IA personnalisé.'}\n              </p>\n              <div className=\"flex justify-center space-x-4\">\n                <Button\n                  size=\"lg\"\n                  onClick={() => navigateTo('/profile')}\n                  className=\"bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700\"\n                >\n                  <Edit className=\"mr-2 h-4 w-4\" />\n                  {profileCompletion.isComplete ? 'Modifier le profil' : 'Compléter le profil'}\n                </Button>\n                <Button size=\"lg\" variant=\"outline\" onClick={() => navigateTo('/')}>\n                  Retour au dashboard\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileComplete;\n"],"file":"assets/ProfileComplete-KUQkpkNi.js"}