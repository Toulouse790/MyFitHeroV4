{"version":3,"file":"HydrationPage-CkHxeWIt.js","sources":["../../node_modules/lucide-react/dist/esm/icons/droplets.js","../../node_modules/lucide-react/dist/esm/icons/thermometer.js","../../src/features/workout/hooks/useRealtimeSync.ts","../../src/features/hydration/pages/HydrationPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z\",\n      key: \"1ptgy4\"\n    }\n  ],\n  [\n    \"path\",\n    {\n      d: \"M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97\",\n      key: \"1sl1rz\"\n    }\n  ]\n];\nconst Droplets = createLucideIcon(\"droplets\", __iconNode);\n\nexport { __iconNode, Droplets as default };\n//# sourceMappingURL=droplets.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M14 4v10.54a4 4 0 1 1-4 0V4a2 2 0 0 1 4 0Z\", key: \"17jzev\" }]\n];\nconst Thermometer = createLucideIcon(\"thermometer\", __iconNode);\n\nexport { __iconNode, Thermometer as default };\n//# sourceMappingURL=thermometer.js.map\n","// client/src/hooks/useRealtimeSync.ts\nimport { useEffect, useRef } from 'react';\nimport { supabase } from '@/lib/supabase';\nimport { appStore } from '@/store/appStore';\n\ninterface RealtimeSyncOptions {\n  pillar: 'hydration' | 'nutrition' | 'sleep' | 'workout';\n  onUpdate?: (payload: any) => void;\n  onInsert?: (payload: any) => void;\n  onDelete?: (payload: any) => void;\n}\n\nexport const useRealtimeSync = ({ pillar, onUpdate, onInsert, onDelete }: RealtimeSyncOptions) => {\n  const channelRef = useRef<any>(null);\n  const { appStoreUser } = appStore();\n\n  useEffect(() => {\n    if (!appStoreUser?.id) return;\n\n    // Table mapping for each pillar\n    const tableMap = {\n      hydration: 'hydration_logs',\n      nutrition: 'meals',\n      sleep: 'sleep_sessions',\n      workout: 'workout_sessions',\n    };\n\n    const table = tableMap[pillar];\n    const channelName = `${pillar}-${appStoreUser.id}`;\n\n    // Create channel\n    channelRef.current = supabase\n      .channel(channelName)\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table,\n          filter: `user_id=eq.${appStoreUser.id}`,\n        },\n        payload => {\n          console.log(`üì° Realtime update for ${pillar}:`, payload);\n\n          // Add userId to payload for identification\n          const enrichedPayload = {\n            ...payload,\n            userId: payload.new?.user_id || payload.old?.user_id,\n          };\n\n          switch (payload.eventType) {\n            case 'INSERT':\n              onInsert?.(enrichedPayload);\n              onUpdate?.(enrichedPayload);\n              break;\n            case 'UPDATE':\n              onUpdate?.(enrichedPayload);\n              break;\n            case 'DELETE':\n              onDelete?.(enrichedPayload);\n              onUpdate?.(enrichedPayload);\n              break;\n          }\n        }\n      )\n      .subscribe();\n\n    // Cleanup\n    return () => {\n      if (channelRef.current) {\n        supabase.removeChannel(channelRef.current);\n      }\n    };\n  }, [appStoreUser?.id, pillar, onUpdate, onInsert, onDelete]);\n\n  return {\n    isConnected: !!channelRef.current,\n  };\n};\n","import React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Droplets,\n  Plus,\n  Target,\n  Clock,\n  Zap,\n  Sun,\n  Dumbbell,\n  Thermometer,\n  Coffee,\n  Minus,\n  RotateCcw,\n  Footprints,\n  Shield,\n  Trophy,\n  TrendingUp,\n  Calendar,\n  AlertCircle,\n  CheckCircle,\n  Bell,\n  Settings,\n  ChevronRight,\n  Brain,\n  Info,\n} from 'lucide-react';\nimport { appStore } from '@/store/appStore';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport AIIntelligence from '@/features/ai-coach/components/AIIntelligence';\nimport { supabase } from '@/lib/supabase';\nimport { useRealtimeSync } from '@/features/workout/hooks/useRealtimeSync';\nimport UniformHeader from '@/features/profile/components/UniformHeader';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\nimport { Database } from '@/features/workout/types/database';\n\n// --- TYPES & INTERFACES ---\ntype DrinkType = Database['public']['Tables']['hydration_logs']['Row']['drink_type'];\ntype HydrationContext = Database['public']['Tables']['hydration_logs']['Row']['hydration_context'];\ntype SportCategory = 'endurance' | 'contact' | 'court' | 'strength';\n\ninterface RecommendedDrink {\n  type: DrinkType;\n  name: string;\n  icon: React.ElementType;\n  amount: number;\n  color: string;\n}\n\ninterface SportHydrationConfig {\n  emoji: string;\n  goalModifierMl: number;\n  contextualReminder: string;\n  recommendedDrink: RecommendedDrink;\n  tips: {\n    icon: React.ElementType;\n    title: string;\n    description: string;\n    priority: 'high' | 'medium' | 'low';\n  }[];\n}\n\ntype HydrationLog = Database['public']['Tables']['hydration_logs']['Row'];\ntype DailyStats = Database['public']['Tables']['daily_stats']['Row'];\n\n// --- CONFIGURATION HYDRATATION PAR SPORT ---\nconst sportsHydrationData: Record<SportCategory, SportHydrationConfig> = {\n  endurance: {\n    emoji: 'üèÉ‚Äç‚ôÇÔ∏è',\n    goalModifierMl: 1000,\n    contextualReminder:\n      \"Hydratez-vous toutes les 15-20 minutes pendant l'effort pour maintenir vos performances.\",\n    recommendedDrink: {\n      type: 'sports_drink',\n      name: 'Boisson Sport',\n      icon: Zap,\n      amount: 250,\n      color: 'bg-orange-500',\n    },\n    tips: [\n      {\n        icon: Footprints,\n        title: 'Pr√©-hydratation',\n        // Utilisation de guillemets doubles pour encapsuler l'apostrophe dans \"l'effort\"\n        description: \"Buvez 500ml 2-3h avant l'effort et 250ml 15min avant le d√©part.\",\n        priority: 'high',\n      },\n      {\n        icon: Clock,\n        // Utilisation de guillemets doubles pour encapsuler l'apostrophe\n        title: \"Pendant l'effort\",\n        description: \"150-250ml toutes les 15-20min selon l'intensit√© et la temp√©rature.\",\n        priority: 'high',\n      },\n      {\n        icon: Thermometer,\n        title: 'Post-effort',\n        // Utilisation de guillemets doubles pour encapsuler l'apostrophe\n        description: \"Buvez 150% du poids perdu en sueur dans les 6h suivant l'effort.\",\n        priority: 'medium',\n      },\n    ],\n  },\n  contact: {\n    emoji: 'üèà',\n    goalModifierMl: 750,\n    contextualReminder: 'Compensez les pertes intenses en sels min√©raux avec des √©lectrolytes.',\n    recommendedDrink: {\n      type: 'electrolytes',\n      name: '√âlectrolytes',\n      icon: Shield,\n      amount: 500,\n      color: 'bg-purple-500',\n    },\n    tips: [\n      {\n        icon: Shield,\n        // Utilisation de guillemets doubles pour encapsuler l'apostrophe dans \"l'√©quipement\"\n        title: '√âlectrolytes cruciaux',\n        description:\n          \"La sueur sous l'√©quipement fait perdre beaucoup de sodium. Compensez avec des boissons enrichies.\",\n        priority: 'high',\n      },\n      {\n        icon: Dumbbell,\n        title: 'R√©cup√©ration acc√©l√©r√©e',\n        description:\n          'Une hydratation optimale r√©duit les courbatures et acc√©l√®re la r√©paration musculaire.',\n        priority: 'medium',\n      },\n    ],\n  },\n  court: {\n    emoji: 'üéæ',\n    goalModifierMl: 500,\n    contextualReminder: 'Profitez de chaque pause pour boire 150-200ml et maintenir votre niveau.',\n    recommendedDrink: {\n      type: 'water',\n      name: 'Eau Pure',\n      icon: Droplets,\n      amount: 250,\n      color: 'bg-blue-500',\n    },\n    tips: [\n      {\n        icon: Trophy,\n        title: 'Concentration optimale',\n        description:\n          'M√™me 2% de d√©shydratation r√©duit significativement vos r√©flexes et votre pr√©cision.',\n        priority: 'high',\n      },\n      {\n        icon: Zap,\n        title: '√ânergie constante',\n        description:\n          'Pour les matchs >1h, alternez eau pure et boisson isotonique toutes les 2 pauses.',\n        priority: 'medium',\n      },\n    ],\n  },\n  strength: {\n    emoji: 'üí™',\n    goalModifierMl: 250,\n    contextualReminder: 'Hydratez-vous entre chaque s√©rie pour maintenir force et concentration.',\n    recommendedDrink: {\n      type: 'water',\n      name: 'Eau Fra√Æche',\n      icon: Droplets,\n      amount: 300,\n      color: 'bg-blue-600',\n    },\n    tips: [\n      {\n        icon: Dumbbell,\n        title: 'Performance musculaire',\n        description:\n          '3% de d√©shydratation = 10-15% de perte de force. Hydratez-vous r√©guli√®rement.',\n        priority: 'high',\n      },\n      {\n        icon: Coffee,\n        title: 'Pr√©-workout et caf√©ine',\n        description: 'Si vous prenez des stimulants, augmentez votre apport hydrique de 500ml.',\n        priority: 'medium',\n      },\n    ],\n  },\n};\n\n// --- COMPOSANT PRINCIPAL ---\nconst Hydration: React.FC = () => {\n  // --- HOOKS ET STATE ---\n  const navigate = useNavigate();\n  const { appStoreUser } = appStore();\n  const { toast } = useToast();\n\n  const [currentMl, setCurrentMl] = useState(0);\n  const [selectedAmount, setSelectedAmount] = useState(250);\n  const [isLoading, setIsLoading] = useState(true);\n  const [dailyLogs, setDailyLogs] = useState<HydrationLog[]>([]);\n  const [dailyStats, setDailyStats] = useState<DailyStats | null>(null);\n  const [lastDrinkTime, setLastDrinkTime] = useState<Date | null>(null);\n  const [showReminders, setShowReminders] = useState(false);\n  const [showCoachingModal, setShowCoachingModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n\n  const todayDate = new Date().toISOString().split('T')[0];\n\n  // --- LOGIQUE DE PERSONNALISATION ---\n  const getSportCategory = useCallback((sport: string | null | undefined): SportCategory => {\n    const sportMappings: Record<string, SportCategory> = {\n      basketball: 'court',\n      tennis: 'court',\n      volleyball: 'court',\n      badminton: 'court',\n      american_football: 'contact',\n      rugby: 'contact',\n      hockey: 'contact',\n      football: 'endurance',\n      running: 'endurance',\n      cycling: 'endurance',\n      swimming: 'endurance',\n      triathlon: 'endurance',\n      'course √† pied': 'endurance',\n      musculation: 'strength',\n      powerlifting: 'strength',\n      crossfit: 'strength',\n      weightlifting: 'strength',\n    };\n\n    return sportMappings[sport?.toLowerCase() || ''] || 'strength';\n  }, []);\n\n  const userSportCategory = getSportCategory(appStoreUser?.sport);\n  const sportConfig = sportsHydrationData[userSportCategory];\n\n  // --- CALCUL OBJECTIF PERSONNALIS√â ---\n  const personalizedGoalMl = useMemo(() => {\n    const weight = appStoreUser?.weight ?? 70;\n    const baseGoalMl = weight * 35;\n\n    let adjustments = 0;\n    adjustments += sportConfig.goalModifierMl;\n\n    if (appStoreUser?.age) {\n      if (appStoreUser.age > 50) adjustments += 200;\n      if (appStoreUser.age < 25) adjustments += 300;\n    }\n\n    if (appStoreUser?.gender === 'male') {\n      adjustments += 300;\n    }\n\n    if (appStoreUser?.primary_goals?.includes('weight_loss')) {\n      adjustments += 500;\n    }\n\n    if (appStoreUser?.primary_goals?.includes('muscle_gain')) {\n      adjustments += 300;\n    }\n\n    const activityLevel = appStoreUser?.activity_level;\n    if (activityLevel === 'extra_active') adjustments += 500;\n    else if (activityLevel === 'moderately_active') adjustments += 300;\n\n    return Math.round(baseGoalMl + adjustments);\n  }, [appStoreUser, sportConfig.goalModifierMl]);\n\n  // --- FONCTIONS DE DONN√âES ---\n  const loadHydrationData = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    try {\n      setIsLoading(true);\n\n      const today = new Date().toISOString().split('T')[0];\n\n      const { data: statsData, error: statsError } = await supabase\n        .from('daily_stats')\n        .select('*')\n        .eq('user_id', appStoreUser.id)\n        .eq('stat_date', today)\n        .single();\n\n      const { data: logsData, error: logsError } = await supabase\n        .from('hydration_logs')\n        .select('*')\n        .eq('user_id', appStoreUser.id)\n        .eq('log_date', today)\n        .order('logged_at', { ascending: false });\n\n      if (statsError && statsError.code !== 'PGRST116') {\n        console.error('Error fetching daily stats:', statsError);\n        toast({ title: 'Erreur de chargement des stats', variant: 'destructive' });\n      }\n\n      if (logsError) {\n        console.error('Error fetching hydration logs:', logsError);\n        toast({ title: 'Erreur de chargement des logs', variant: 'destructive' });\n      }\n\n      const currentStats = statsData as DailyStats | null;\n      const currentLogs = logsData as HydrationLog[] | null;\n\n      setDailyStats(currentStats);\n      setDailyLogs(currentLogs || []);\n\n      if (currentStats) {\n        setCurrentMl(currentStats.water_intake_ml ?? 0);\n      } else {\n        setCurrentMl(0);\n      }\n\n      if (currentLogs && currentLogs.length > 0) {\n        setLastDrinkTime(new Date(currentLogs[0].logged_at));\n      }\n    } catch {\n      console.error('Erreur chargement hydratation:', error);\n      toast({\n        title: 'Erreur inattendue',\n        description: \"Impossible de charger les donn√©es d'hydratation.\",\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [appStoreUser?.id, toast]);\n\n  // --- HANDLERS ---\n  const handleAddWater = useCallback(\n    async (amount: number, type: DrinkType = 'water', context: HydrationContext = 'normal') => {\n      if (!appStoreUser?.id) return;\n\n      try {\n        const newTotal = currentMl + amount;\n        const now = new Date();\n\n        setCurrentMl(newTotal);\n        setLastDrinkTime(now);\n\n        const { error: logError } = await (supabase as any).from('hydration_logs').insert({\n          user_id: appStoreUser.id,\n          amount_ml: amount,\n          drink_type: type,\n          logged_at: now.toISOString(),\n          log_date: todayDate,\n          hydration_context: context,\n        });\n\n        if (logError) throw logError;\n\n        const { error: statsError } = await (supabase as any).from('daily_stats').upsert(\n          {\n            user_id: appStoreUser.id,\n            stat_date: todayDate,\n            water_intake_ml: newTotal,\n            hydration_goal_ml: personalizedGoalMl,\n            updated_at: now.toISOString(),\n          },\n          {\n            onConflict: 'user_id,stat_date',\n          }\n        );\n\n        if (statsError) throw statsError;\n\n        const userName = appStoreUser.first_name || appStoreUser.username || 'Champion';\n        const progress = (newTotal / personalizedGoalMl) * 100;\n\n        let message = `+${amount}ml ajout√©s ! `;\n        if (progress >= 100) {\n          message += `üéâ Objectif atteint ${userName} !`;\n        } else if (progress >= 75) {\n          message += `üí™ Excellent ${userName}, presque fini !`;\n        } else {\n          message += `Continue ${userName} !`;\n        }\n\n        toast({\n          title: 'Hydratation ajout√©e',\n          description: message,\n        });\n\n        await loadHydrationData();\n      } catch {\n        console.error('Erreur ajout hydratation:', error);\n        setCurrentMl(prev => prev - amount);\n        toast({\n          title: 'Erreur',\n          description: 'Impossible de sauvegarder. R√©essayez.',\n          variant: 'destructive',\n        });\n      }\n    },\n    [appStoreUser?.id, currentMl, personalizedGoalMl, todayDate, loadHydrationData, toast]\n  );\n\n  const handleRemoveLast = useCallback(async () => {\n    if (dailyLogs.length === 0) return;\n\n    const lastLog = dailyLogs[0];\n    const newTotal = currentMl - lastLog.amount_ml;\n\n    try {\n      setCurrentMl(newTotal);\n\n      const { error: deleteError } = await supabase\n        .from('hydration_logs')\n        .delete()\n        .eq('id', lastLog.id);\n\n      if (deleteError) throw deleteError;\n\n      const { error: statsError } = await (supabase as any).from('daily_stats').upsert({\n        user_id: appStoreUser?.id!,\n        stat_date: todayDate,\n        water_intake_ml: newTotal,\n        hydration_goal_ml: personalizedGoalMl,\n        updated_at: new Date().toISOString(),\n      });\n\n      if (statsError) throw statsError;\n\n      toast({\n        title: 'Derni√®re entr√©e supprim√©e',\n        description: `-${lastLog.amount_ml}ml`,\n      });\n\n      await loadHydrationData();\n    } catch {\n      console.error('Erreur suppression:', error);\n      setCurrentMl(prev => prev + lastLog.amount_ml);\n      toast({\n        title: 'Erreur',\n        description: \"Impossible de supprimer l'entr√©e\",\n        variant: 'destructive',\n      });\n    }\n  }, [\n    dailyLogs,\n    currentMl,\n    appStoreUser?.id,\n    personalizedGoalMl,\n    todayDate,\n    loadHydrationData,\n    toast,\n  ]);\n\n  // --- SYNCHRONISATION TEMPS R√âEL ---\n  const {} = useRealtimeSync({\n    pillar: 'hydration',\n    onUpdate: payload => {\n      if (\n        payload.userId !== appStoreUser?.id &&\n        (payload.eventType === 'INSERT' || payload.eventType === 'UPDATE')\n      ) {\n        loadHydrationData();\n      }\n    },\n  });\n\n  // --- CALCULS ---\n  const currentHydrationL = currentMl / 1000;\n  const goalHydrationL = personalizedGoalMl / 1000;\n  const remaining = Math.max(0, personalizedGoalMl - currentMl);\n  const percentage =\n    personalizedGoalMl > 0 ? Math.min((currentMl / personalizedGoalMl) * 100, 100) : 0;\n  const isGoalReached = percentage >= 100;\n\n  // --- MESSAGES PERSONNALIS√âS ---\n  const getPersonalizedMessage = useCallback(() => {\n    const userName = appStoreUser?.first_name || appStoreUser?.username || 'Champion';\n\n    if (isGoalReached) {\n      return `üéâ Excellent ${userName} ! Objectif atteint !`;\n    } else if (percentage >= 75) {\n      return `üí™ Bravo ${userName}, tu y es presque !`;\n    } else if (percentage >= 50) {\n      return `‚ö° Continue ${userName} !`;\n    } else {\n      return `üíß ${userName}, hydrate-toi !`;\n    }\n  }, [percentage, isGoalReached, appStoreUser]);\n\n  // Conseil prioritaire du jour\n  const getTodayTip = useCallback(() => {\n    const highPriorityTips = sportConfig.tips.filter(tip => tip.priority === 'high');\n    return highPriorityTips[0] || sportConfig.tips[0];\n  }, [sportConfig.tips]);\n\n  // Afficher le rappel contextuel seulement si pertinent\n  const shouldShowContextualReminder = useCallback(() => {\n    return (\n      percentage < 80 &&\n      (!lastDrinkTime || new Date().getTime() - lastDrinkTime.getTime() > 2 * 60 * 60 * 1000)\n    );\n  }, [percentage, lastDrinkTime]);\n\n  // --- EFFECTS ---\n  useEffect(() => {\n    loadHydrationData();\n  }, [loadHydrationData]);\n\n  // --- RENDER ---\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"px-4 py-6 space-y-6 max-w-2xl mx-auto\">\n          <Skeleton className=\"h-20 w-full\" />\n          <Skeleton className=\"h-32 w-full\" />\n          <div className=\"grid grid-cols-2 gap-3\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-20\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const todayTip = getTodayTip();\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"px-4 py-6 space-y-6 max-w-2xl mx-auto\">\n        {/* Header Uniforme */}\n        <UniformHeader\n          title=\"Hydratation\"\n          subtitle={`${sportConfig.emoji} ${getPersonalizedMessage()}`}\n          showBackButton={true}\n          showSettings={true}\n          showNotifications={true}\n          showProfile={true}\n          gradient={true}\n        />\n\n        {/* Objectif principal - FOCUS */}\n        <Card className=\"bg-gradient-to-r from-blue-600 to-cyan-600 text-white\">\n          <CardContent className=\"p-5\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"font-semibold text-lg flex items-center space-x-2\">\n                <Droplets className=\"h-5 w-5\" />\n                <span>Aujourd'hui</span>\n              </h3>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowReminders(!showReminders)}\n                  className=\"text-white hover:bg-white/20\"\n                >\n                  <Bell className={`h-4 w-4 ${showReminders ? 'fill-current' : ''}`} />\n                </Button>\n                <Dialog open={showDetailsModal} onOpenChange={setShowDetailsModal}>\n                  <DialogTrigger asChild>\n                    <Button variant=\"ghost\" size=\"sm\" className=\"text-white hover:bg-white/20\">\n                      <Info className=\"h-4 w-4\" />\n                    </Button>\n                  </DialogTrigger>\n                  <DialogContent className=\"max-w-md\">\n                    <DialogHeader>\n                      <DialogTitle>D√©tails de votre objectif</DialogTitle>\n                    </DialogHeader>\n                    <div className=\"space-y-3 text-sm\">\n                      <p>\n                        En tant que {appStoreUser?.gender === 'male' ? 'homme' : 'femme'} de{' '}\n                        {appStoreUser?.age || '?'} ans ({appStoreUser?.weight || '?'}kg) pratiquant\n                        le {appStoreUser?.sport || 'sport'}, votre objectif de{' '}\n                        {goalHydrationL.toFixed(1)}L est adapt√© √† vos besoins.\n                      </p>\n                      <div className=\"space-y-1 text-xs text-gray-600\">\n                        <p>‚Ä¢ Base: {Math.round((appStoreUser?.weight || 70) * 35)}ml (35ml/kg)</p>\n                        <p>\n                          ‚Ä¢ Bonus sport {userSportCategory}: +{sportConfig.goalModifierMl}ml\n                        </p>\n                        <p>\n                          ‚Ä¢ Ajustements profil: +\n                          {personalizedGoalMl -\n                            Math.round((appStoreUser?.weight || 70) * 35) -\n                            sportConfig.goalModifierMl}\n                          ml\n                        </p>\n                      </div>\n                    </div>\n                  </DialogContent>\n                </Dialog>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-4\">\n              <div className=\"text-4xl font-bold mb-1\">\n                {currentHydrationL.toFixed(2).replace(/\\.?0+$/, '')}L\n              </div>\n              <div className=\"text-white/80\">\n                sur {goalHydrationL.toFixed(2).replace(/\\.?0+$/, '')}L\n              </div>\n              <Badge variant=\"secondary\" className=\"mt-1 bg-white/20 text-white border-white/30\">\n                Objectif {userSportCategory} {sportConfig.emoji}\n              </Badge>\n              <div className=\"text-sm text-white/70 mt-2\">\n                {remaining > 0\n                  ? `${(remaining / 1000).toFixed(2).replace(/\\.?0+$/, '')}L restants`\n                  : 'Objectif atteint ! üéâ'}\n              </div>\n            </div>\n\n            <Progress value={percentage} className=\"h-3 mb-4 bg-white/20\" />\n\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-white/90\">{Math.round(percentage)}% compl√©t√©</span>\n              {lastDrinkTime && (\n                <span className=\"text-white/70\">\n                  Dernier:{' '}\n                  {lastDrinkTime.toLocaleTimeString('fr-FR', {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                  })}\n                </span>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Actions principales - FOCUS */}\n        <div className=\"space-y-4\">\n          {/* S√©lecteur de quantit√© */}\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"flex space-x-2 mb-4\">\n                {[150, 250, 350, 500].map(amount => (\n                  <Button\n                    key={amount}\n                    variant={selectedAmount === amount ? 'default' : 'outline'}\n                    size=\"sm\"\n                    onClick={() => setSelectedAmount(amount)}\n                    className=\"flex-1\"\n                  >\n                    {amount}ml\n                  </Button>\n                ))}\n              </div>\n\n              {/* Actions principales */}\n              <div className=\"grid grid-cols-2 gap-3\">\n                <Button\n                  onClick={() => handleAddWater(selectedAmount, 'water', 'normal')}\n                  size=\"lg\"\n                  className=\"bg-blue-600 hover:bg-blue-700 h-16 flex flex-col space-y-1\"\n                >\n                  <Plus size={20} />\n                  <span className=\"text-sm\">Eau {selectedAmount}ml</span>\n                </Button>\n\n                <Button\n                  onClick={() =>\n                    handleAddWater(\n                      sportConfig.recommendedDrink.amount,\n                      sportConfig.recommendedDrink.type,\n                      'workout'\n                    )\n                  }\n                  size=\"lg\"\n                  variant=\"outline\"\n                  className={`h-16 flex flex-col space-y-1 border-2 ${sportConfig.recommendedDrink.color.replace('bg-', 'border-')} hover:${sportConfig.recommendedDrink.color.replace('bg-', 'bg-')}/10`}\n                >\n                  {React.createElement(sportConfig.recommendedDrink.icon, { size: 20 })}\n                  <span className=\"text-sm\">{sportConfig.recommendedDrink.name}</span>\n                </Button>\n              </div>\n\n              {/* Actions secondaires */}\n              <div className=\"grid grid-cols-2 gap-3 mt-3\">\n                <Button\n                  onClick={handleRemoveLast}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  disabled={dailyLogs.length === 0}\n                  className=\"flex items-center space-x-2\"\n                >\n                  <Minus size={16} />\n                  <span>Annuler</span>\n                </Button>\n\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => navigate('/hydration/history')}\n                  className=\"flex items-center space-x-2\"\n                >\n                  <TrendingUp size={16} />\n                  <span>Historique</span>\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Historique du jour - COMPACT */}\n        {dailyLogs.length > 0 && (\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm flex items-center justify-between\">\n                <span>Aujourd'hui</span>\n                <Badge variant=\"outline\">{dailyLogs.length} entr√©es</Badge>\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"p-4 pt-0\">\n              <div className=\"space-y-2\">\n                {dailyLogs.slice(0, 3).map(log => (\n                  <div key={log.id} className=\"flex items-center justify-between text-sm\">\n                    <span className=\"flex items-center space-x-2\">\n                      <Droplets className=\"h-3 w-3 text-blue-500\" />\n                      <span>{log.amount_ml}ml</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {log.drink_type}\n                      </Badge>\n                    </span>\n                    <span className=\"text-gray-500\">\n                      {new Date(log.logged_at).toLocaleTimeString('fr-FR', {\n                        hour: '2-digit',\n                        minute: '2-digit',\n                      })}\n                    </span>\n                  </div>\n                ))}\n              </div>\n              {dailyLogs.length > 3 && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"w-full mt-2 text-xs\"\n                  onClick={() => navigate('/hydration/history')}\n                >\n                  Voir les {dailyLogs.length - 3} autres entr√©es\n                </Button>\n              )}\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Conseil du jour - PRIORITAIRE UNIQUEMENT */}\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-start space-x-3\">\n              {React.createElement(todayTip.icon, {\n                size: 20,\n                className: 'text-blue-600 mt-0.5 flex-shrink-0',\n              })}\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold text-gray-800 text-sm mb-1\">{todayTip.title}</h3>\n                <p className=\"text-xs text-gray-600 mb-2\">{todayTip.description}</p>\n                <Collapsible>\n                  <CollapsibleTrigger asChild>\n                    <Button variant=\"ghost\" size=\"sm\" className=\"text-xs p-0 h-auto\">\n                      Voir tous les conseils <ChevronRight className=\"h-3 w-3 ml-1\" />\n                    </Button>\n                  </CollapsibleTrigger>\n                  <CollapsibleContent className=\"mt-3 space-y-2\">\n                    {sportConfig.tips.slice(1).map((tip, index) => {\n                      const TipIcon = tip.icon;\n                      return (\n                        <div key={index} className=\"p-2 bg-gray-50 rounded-lg\">\n                          <div className=\"flex items-start space-x-2\">\n                            <TipIcon size={16} className=\"text-gray-600 mt-0.5 flex-shrink-0\" />\n                            <div>\n                              <h4 className=\"font-medium text-gray-800 text-xs mb-1\">\n                                {tip.title}\n                              </h4>\n                              <p className=\"text-xs text-gray-600\">{tip.description}</p>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </CollapsibleContent>\n                </Collapsible>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Rappel contextuel - CONDITIONNEL */}\n        {shouldShowContextualReminder() && (\n          <Card className=\"bg-blue-50 border-blue-100\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-start space-x-3\">\n                <Clock size={18} className=\"text-blue-500 mt-0.5\" />\n                <div>\n                  <h3 className=\"font-semibold text-blue-800 text-sm mb-1\">\n                    Rappel {userSportCategory} {sportConfig.emoji}\n                  </h3>\n                  <p className=\"text-blue-700 text-xs\">{sportConfig.contextualReminder}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Coaching IA - MODAL */}\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <Brain className=\"h-5 w-5 text-purple-600\" />\n                <div>\n                  <h3 className=\"font-semibold text-gray-800 text-sm\">Coaching IA</h3>\n                  <p className=\"text-xs text-gray-600\">Analyse personnalis√©e et conseils</p>\n                </div>\n              </div>\n              <Dialog open={showCoachingModal} onOpenChange={setShowCoachingModal}>\n                <DialogTrigger asChild>\n                  <Button variant=\"outline\" size=\"sm\">\n                    Ouvrir <ChevronRight className=\"h-3 w-3 ml-1\" />\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n                  <DialogHeader>\n                    <DialogTitle>Coaching IA - Hydratation</DialogTitle>\n                  </DialogHeader>\n                  <AIIntelligence\n                    pillar=\"hydration\"\n                    showPredictions={true}\n                    showCoaching={true}\n                    showRecommendations={true}\n                  />\n                </DialogContent>\n              </Dialog>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Hydration;\n"],"names":["__iconNode","Droplets","createLucideIcon","Thermometer","useRealtimeSync","pillar","onUpdate","onInsert","onDelete","channelRef","useRef","appStoreUser","appStore","useEffect","table","channelName","supabase","payload","enrichedPayload","_a","_b","sportsHydrationData","Zap","Footprints","Clock","Shield","Dumbbell","Trophy","Coffee","Hydration","navigate","useNavigate","toast","useToast","currentMl","setCurrentMl","useState","selectedAmount","setSelectedAmount","isLoading","setIsLoading","dailyLogs","setDailyLogs","dailyStats","setDailyStats","lastDrinkTime","setLastDrinkTime","showReminders","setShowReminders","showCoachingModal","setShowCoachingModal","showDetailsModal","setShowDetailsModal","todayDate","userSportCategory","useCallback","sport","sportConfig","personalizedGoalMl","useMemo","baseGoalMl","adjustments","activityLevel","loadHydrationData","today","statsData","statsError","logsData","logsError","currentStats","currentLogs","handleAddWater","amount","type","context","newTotal","now","logError","userName","progress","message","prev","handleRemoveLast","lastLog","deleteError","currentHydrationL","goalHydrationL","remaining","percentage","isGoalReached","getPersonalizedMessage","getTodayTip","tip","shouldShowContextualReminder","jsxs","jsx","Skeleton","_","i","todayTip","UniformHeader","Card","CardContent","Button","Bell","Dialog","DialogTrigger","Info","DialogContent","DialogHeader","DialogTitle","Badge","Progress","Plus","React","Minus","TrendingUp","CardHeader","CardTitle","log","Collapsible","CollapsibleTrigger","ChevronRight","CollapsibleContent","index","TipIcon","Brain","AIIntelligence"],"mappings":"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","x_google_ignoreList":[0,1]}