{"version":3,"file":"ChallengesPage-BliySRFP.js","sources":["../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../node_modules/@tanstack/react-query/build/modern/useMutation.js","../../src/features/social/pages/ChallengesPage.tsx"],"sourcesContent":["// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError\n} from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map","import React, { useState, useCallback } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { motion } from 'framer-motion';\nimport { create } from 'zustand';\nimport { toast } from 'sonner';\n\n// ---- Supabase client ----\nconst supabaseUrl = 'https://zfmlzxhxhaezdkzjanbc.supabase.co';\nconst supabaseAnonKey =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpmbWx6eGh4aGFlemRremphbmJjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA3NDc4MzIsImV4cCI6MjA2NjMyMzgzMn0.x6GpX8ep6YxVEZQt7pcH0SIWzxhTYcXLnaVmD5IGErw';\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// ---- TypeScript types ----\ninterface Challenge {\n  id: string;\n  title: string;\n  description?: string;\n  start_date: string;\n  end_date: string;\n  challenge_type: 'daily' | 'weekly' | 'monthly' | 'competition' | 'custom';\n  goal_type: string;\n  goal_target: number;\n  is_active: boolean;\n}\n\ninterface ChallengeParticipant {\n  id: string;\n  user_id: string;\n  challenge_id: string;\n  progress: number;\n  joined_at: string;\n  completed: boolean;\n  completed_at?: string;\n}\n\n// ---- Zustand store for user state ----\ninterface UserState {\n  userId: string | null;\n  setUserId: (id: string | null) => void;\n}\n\nconst useUserStore = create<UserState>(set => ({\n  userId: null,\n  setUserId: id => set({ userId: id }),\n}));\n\n// ---- Fetch active challenges with pagination & filters ----\ninterface FetchChallengesParams {\n  page: number;\n  pageSize: number;\n  searchTerm?: string;\n  filterType?: string[];\n}\n\nasync function fetchChallenges({ page, pageSize, searchTerm, filterType }: FetchChallengesParams) {\n  let query = supabase\n    .from<Challenge>('challenges')\n    .select('*', { count: 'exact' })\n    .order('start_date', { ascending: true })\n    .eq('is_active', true);\n\n  if (searchTerm?.trim()) {\n    query = query.ilike('title', `%${searchTerm.trim()}%`);\n  }\n\n  if (filterType && filterType.length > 0) {\n    query = query.in('challenge_type', filterType);\n  }\n\n  query = query.range(page * pageSize, page * pageSize + pageSize - 1);\n\n  const { data, error, count } = await query;\n  if (error) throw error;\n  return { challenges: data ?? [], count };\n}\n\nfunction useChallenges(params: FetchChallengesParams) {\n  const key = [\n    'challenges',\n    params.page,\n    params.pageSize,\n    params.searchTerm,\n    params.filterType?.join(','),\n  ];\n  return useQuery(key, () => fetchChallenges(params), { keepPreviousData: true, staleTime: 30000 });\n}\n\n// ---- Fetch user participation for challenges ----\nasync function fetchUserParticipants(userId: string) {\n  const { data, error } = await supabase\n    .from<ChallengeParticipant>('challenge_participants')\n    .select('*')\n    .eq('user_id', userId);\n  if (error) throw error;\n  return data ?? [];\n}\n\nfunction useUserParticipants(userId: string | null) {\n  return useQuery(\n    ['user_participants', userId],\n    () => {\n      if (!userId) return Promise.resolve([]);\n      return fetchUserParticipants(userId);\n    },\n    { enabled: !!userId, staleTime: 30000 }\n  );\n}\n\n// ---- Mutations for join/leave challenge ----\nasync function joinChallenge(userId: string, challengeId: string) {\n  const { error } = await supabase.from('challenge_participants').upsert(\n    {\n      user_id: userId,\n      challenge_id: challengeId,\n      progress: 0,\n      completed: false,\n    },\n    { onConflict: ['user_id', 'challenge_id'] }\n  );\n  if (error) throw error;\n}\n\nasync function leaveChallenge(userId: string, challengeId: string) {\n  const { error } = await supabase\n    .from('challenge_participants')\n    .delete()\n    .eq('user_id', userId)\n    .eq('challenge_id', challengeId);\n  if (error) throw error;\n}\n\n// ---- Main Component ----\nconst PAGE_SIZE = 10;\n\nconst ChallengesPage: React.FC = () => {\n  const userId = useUserStore(state => state.userId);\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [page, setPage] = useState(0);\n  const [challengeTypeFilter, setChallengeTypeFilter] = useState<string[]>([]);\n\n  const queryClient = useQueryClient();\n\n  const { data, isLoading, isError } = useChallenges({\n    page,\n    pageSize: PAGE_SIZE,\n    searchTerm,\n    filterType: challengeTypeFilter,\n  });\n\n  const challenges = data?.challenges ?? [];\n  const totalCount = data?.count ?? 0;\n  const pageCount = Math.ceil(totalCount / PAGE_SIZE);\n\n  const { data: userParticipants } = useUserParticipants(userId);\n\n  const joinMutation = useMutation(\n    (challengeId: string) => {\n      if (!userId) return Promise.reject('User not logged in');\n      return joinChallenge(userId, challengeId);\n    },\n    {\n      onSuccess: () => {\n        toast.success('Inscription au défi réussie');\n        queryClient.invalidateQueries(['user_participants', userId]);\n      },\n      onError: (e: any) => toast.error(`Erreur inscription : ${e.message || e}`),\n    }\n  );\n\n  const leaveMutation = useMutation(\n    (challengeId: string) => {\n      if (!userId) return Promise.reject('User not logged in');\n      return leaveChallenge(userId, challengeId);\n    },\n    {\n      onSuccess: () => {\n        toast.success('Désinscription du défi réussie');\n        queryClient.invalidateQueries(['user_participants', userId]);\n      },\n      onError: (e: any) => toast.error(`Erreur désinscription : ${e.message || e}`),\n    }\n  );\n\n  const isUserJoined = useCallback(\n    (challengeId: string) => {\n      return userParticipants?.some(p => p.challenge_id === challengeId) ?? false;\n    },\n    [userParticipants]\n  );\n\n  const handleJoinClick = (challengeId: string) => {\n    if (isUserJoined(challengeId)) {\n      leaveMutation.mutate(challengeId);\n    } else {\n      joinMutation.mutate(challengeId);\n    }\n  };\n\n  // Filter challenge types options\n  const challengeTypes = ['daily', 'weekly', 'monthly', 'competition', 'custom'];\n\n  const toggleChallengeTypeFilter = (type: string) => {\n    setChallengeTypeFilter(current =>\n      current.includes(type) ? current.filter(t => t !== type) : [...current, type]\n    );\n    setPage(0);\n  };\n\n  return (\n    <main className=\"min-h-screen p-6 bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 max-w-6xl mx-auto\">\n      <h1 className=\"text-3xl font-extrabold mb-6 text-center\">Défis MyFitHero</h1>\n\n      {/* Search bar */}\n      <div className=\"max-w-md mx-auto mb-6\">\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={e => {\n            setSearchTerm(e.target.value);\n            setPage(0);\n          }}\n          placeholder=\"Rechercher un défi...\"\n          className=\"w-full p-2 border rounded-md dark:bg-gray-800 dark:border-gray-600\"\n          aria-label=\"Rechercher un défi\"\n        />\n      </div>\n\n      {/* Challenge type filter */}\n      <fieldset\n        className=\"flex flex-wrap justify-center gap-3 mb-6\"\n        aria-label=\"Filtres types de défis\"\n      >\n        {challengeTypes.map(type => {\n          const checked = challengeTypeFilter.includes(type);\n          return (\n            <label\n              key={type}\n              className={clsx(\n                'cursor-pointer select-none rounded px-3 py-1 border',\n                checked\n                  ? 'bg-blue-600 text-white border-blue-600'\n                  : 'border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300'\n              )}\n            >\n              <input\n                type=\"checkbox\"\n                checked={checked}\n                onChange={() => toggleChallengeTypeFilter(type)}\n                className=\"sr-only\"\n              />\n              {type.charAt(0).toUpperCase() + type.slice(1)}\n            </label>\n          );\n        })}\n      </fieldset>\n\n      {/* Challenges list */}\n      <div className=\"grid gap-6 md:grid-cols-2\">\n        {isLoading &&\n          Array.from({ length: PAGE_SIZE }).map((_, idx) => (\n            <div\n              key={idx}\n              className=\"p-6 border rounded-md bg-gray-200 dark:bg-gray-700 animate-pulse h-48\"\n            />\n          ))}\n        {isError && (\n          <div className=\"col-span-full text-center text-red-600\">\n            Erreur de chargement des défis.\n          </div>\n        )}\n        {!isLoading && challenges.length === 0 && (\n          <div className=\"text-center text-gray-600\">Aucun défi trouvé.</div>\n        )}\n\n        {challenges.map(challenge => {\n          const joined = isUserJoined(challenge.id);\n          return (\n            <motion.article\n              key={challenge.id}\n              layout\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              className=\"p-6 border rounded-lg bg-white dark:bg-gray-800 shadow flex flex-col\"\n              aria-live=\"polite\"\n              aria-label={`Défi ${challenge.title}`}\n            >\n              <h2 className=\"text-xl font-semibold mb-2\">{challenge.title}</h2>\n              <p className=\"flex-grow text-gray-700 dark:text-gray-300 mb-4 line-clamp-4\">\n                {challenge.description}\n              </p>\n              <div className=\"mb-4 text-sm\">\n                <span>\n                  <strong>Type :</strong> {challenge.challenge_type}\n                </span>\n                <br />\n                <span>\n                  <strong>Objectif :</strong> {challenge.goal_type} - {challenge.goal_target}\n                </span>\n                <br />\n                <span>\n                  Période : {new Date(challenge.start_date).toLocaleDateString()} -{' '}\n                  {new Date(challenge.end_date).toLocaleDateString()}\n                </span>\n              </div>\n              <button\n                onClick={() => handleJoinClick(challenge.id)}\n                disabled={joinMutation.isLoading || leaveMutation.isLoading}\n                className={clsx(\n                  'px-4 py-2 rounded-md font-semibold',\n                  joined\n                    ? 'bg-red-600 hover:bg-red-700 text-white'\n                    : 'bg-green-600 hover:bg-green-700 text-white'\n                )}\n                aria-pressed={joined}\n                aria-label={\n                  joined\n                    ? `Se désinscrire du défi ${challenge.title}`\n                    : `S'inscrire au défi ${challenge.title}`\n                }\n              >\n                {joined ? 'Se désinscrire' : \"S'inscrire\"}\n              </button>\n            </motion.article>\n          );\n        })}\n      </div>\n\n      {/* Pagination */}\n      <nav\n        className=\"flex justify-center items-center mt-8 space-x-4\"\n        aria-label=\"Pagination des défis\"\n      >\n        <button\n          onClick={() => setPage(p => Math.max(p - 1, 0))}\n          disabled={page === 0}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page précédente\"\n        >\n          Précédent\n        </button>\n        <span aria-live=\"polite\" aria-atomic=\"true\" className=\"text-lg\">\n          Page {page + 1} / {pageCount}\n        </span>\n        <button\n          onClick={() => setPage(p => (p + 1 < pageCount ? p + 1 : p))}\n          disabled={page + 1 >= pageCount}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page suivante\"\n        >\n          Suivant\n        </button>\n      </nav>\n    </main>\n  );\n};\n\nexport default ChallengesPage;\n"],"names":["getDefaultState","MutationObserver","_a","Subscribable","client","options","__privateAdd","_MutationObserver_instances","_client","_currentResult","_currentMutation","_mutateOptions","__privateSet","__privateMethod","updateResult_fn","prevOptions","__privateGet","shallowEqualObjects","hashKey","action","notify_fn","variables","state","notifyManager","context","_b","_d","_c","_f","_e","_h","_g","listener","useMutation","queryClient","useQueryClient","observer","React.useState","React.useEffect","result","React.useSyncExternalStore","React.useCallback","onStoreChange","mutate","mutateOptions","noop","shouldThrowError","supabaseUrl","supabaseAnonKey","supabase","createClient","useUserStore","create","set","id","fetchChallenges","page","pageSize","searchTerm","filterType","query","data","error","count","useChallenges","params","key","useQuery","fetchUserParticipants","userId","useUserParticipants","joinChallenge","challengeId","leaveChallenge","PAGE_SIZE","ChallengesPage","setSearchTerm","useState","setPage","challengeTypeFilter","setChallengeTypeFilter","isLoading","isError","challenges","totalCount","pageCount","userParticipants","joinMutation","toast","e","leaveMutation","isUserJoined","useCallback","p","handleJoinClick","challengeTypes","toggleChallengeTypeFilter","type","current","t","jsxs","jsx","checked","clsx","_","idx","challenge","joined","motion"],"mappings":"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","x_google_ignoreList":[0,1,2]}