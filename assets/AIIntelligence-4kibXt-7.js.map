{"version":3,"file":"AIIntelligence-4kibXt-7.js","sources":["../../src/services/aiService.ts","../../src/shared/hooks/useAnimations.ts","../../src/shared/components/ThemeProvider.tsx","../../src/features/ai-coach/components/AIIntelligence.tsx"],"sourcesContent":["import { supabase } from '@/lib/supabase';\n\n// Types pour l'intelligence artificielle\nexport interface AIAnalysis {\n  pillar: string;\n  trend: 'improving' | 'stable' | 'declining';\n  consistency_score: number;\n  predictions?: any;\n  recommendations: string[];\n  confidence: number;\n}\n\nexport interface CoachingResponse {\n  message: string;\n  priority: 'low' | 'medium' | 'high';\n  type: 'motivational' | 'corrective' | 'educational';\n  actions: Array<{\n    title: string;\n    description: string;\n    pillar: string;\n  }>;\n  next_check_in: string;\n}\n\nexport interface Anomaly {\n  type: 'deviation' | 'pattern_break' | 'outlier';\n  pillar: string;\n  severity: 'low' | 'medium' | 'high';\n  message: string;\n  suggestion: string;\n  detected_at: string;\n}\n\nexport interface ContextualRecommendation {\n  type: string;\n  title: string;\n  message: string;\n  actions: string[];\n  priority: 'low' | 'medium' | 'high';\n}\n\nclass AIService {\n  private baseUrl = '/api/ai';\n\n  // Analyse prédictive des patterns utilisateur\n  async analyzePatterns(pillar: string, timeframe: string = '7d'): Promise<AIAnalysis> {\n    try {\n      const response = await fetch(`${this.baseUrl}/analyze-patterns`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ pillar, timeframe }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to analyze patterns');\n      }\n\n      return await response.json();\n    } catch {\n      console.error('Pattern analysis error:', error);\n      throw error;\n    }\n  }\n\n  // Coaching adaptatif en temps réel\n  async getAdaptiveCoaching(\n    userContext: any,\n    currentState: any,\n    goal: string\n  ): Promise<CoachingResponse> {\n    try {\n      const response = await fetch(`${this.baseUrl}/adaptive-coaching`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ user_context: userContext, current_state: currentState, goal }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get adaptive coaching');\n      }\n\n      return await response.json();\n    } catch {\n      console.error('Adaptive coaching error:', error);\n      throw error;\n    }\n  }\n\n  // Détection intelligente d'anomalies\n  async detectAnomalies(dataPoints: any[], pillar?: string): Promise<{ anomalies: Anomaly[] }> {\n    try {\n      const response = await fetch(`${this.baseUrl}/detect-anomalies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ data_points: dataPoints, pillar }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to detect anomalies');\n      }\n\n      return await response.json();\n    } catch {\n      console.error('Anomaly detection error:', error);\n      throw error;\n    }\n  }\n\n  // Prédictions personnalisées\n  async getPredictions(horizon: string = '7d'): Promise<any> {\n    try {\n      const response = await fetch(`${this.baseUrl}/predictions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({ horizon }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get predictions');\n      }\n\n      return await response.json();\n    } catch {\n      console.error('Predictions error:', error);\n      throw error;\n    }\n  }\n\n  // Recommandations contextuelles (n8n style)\n  async getContextualRecommendations(\n    context: any,\n    userProfile: any\n  ): Promise<{ recommendations: ContextualRecommendation[] }> {\n    try {\n      const response = await fetch(`${this.baseUrl}/contextual-recommendations`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.getAuthToken()}`,\n        },\n        body: JSON.stringify({\n          context,\n          user_profile: userProfile,\n          current_time: new Date().toISOString(),\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get contextual recommendations');\n      }\n\n      return await response.json();\n    } catch {\n      console.error('Contextual recommendations error:', error);\n      throw error;\n    }\n  }\n\n  // Analyse des habitudes et insights\n  async getHabitsInsights(userId: string, pillar: string): Promise<any> {\n    try {\n      // Récupération des données historiques via Supabase\n      const { data: logs } = await supabase\n        .from(`${pillar}_logs`)\n        .select('*')\n        .eq('user_id', userId)\n        .gte('created_at', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString())\n        .order('created_at', { ascending: false });\n\n      if (!logs) return null;\n\n      // Analyse des patterns localement\n      const insights = this.analyzeHabitsLocally(logs);\n\n      return {\n        pillar,\n        insights,\n        data_points: logs.length,\n        analysis_period: '30d',\n        generated_at: new Date().toISOString(),\n      };\n    } catch {\n      console.error('Habits insights error:', error);\n      throw error;\n    }\n  }\n\n  // Coaching proactif basé sur les prédictions\n  async getProactiveCoaching(): Promise<any> {\n    try {\n      // Combinaison de plusieurs analyses pour un coaching proactif\n      const [patterns, predictions, anomalies] = await Promise.all([\n        this.analyzePatterns('general'),\n        this.getPredictions('3d'),\n        this.detectAnomalies([]),\n      ]);\n\n      const proactiveAdvice = this.generateProactiveAdvice(patterns, predictions, anomalies);\n\n      return {\n        advice: proactiveAdvice,\n        confidence: 0.85,\n        next_action: this.getNextRecommendedAction(proactiveAdvice),\n        generated_at: new Date().toISOString(),\n      };\n    } catch {\n      console.error('Proactive coaching error:', error);\n      throw error;\n    }\n  }\n\n  // Helpers privés\n  private getAuthToken(): string {\n    // Récupération du token d'authentification\n    return localStorage.getItem('auth_token') || '';\n  }\n\n  private analyzeHabitsLocally(logs: any[]): any {\n    // Analyse locale des habitudes pour réduire les appels API\n    const dayStats = logs.reduce((acc, log) => {\n      const day = new Date(log.created_at).getDay();\n      acc[day] = (acc[day] || 0) + 1;\n      return acc;\n    }, {});\n\n    const hourStats = logs.reduce((acc, log) => {\n      const hour = new Date(log.created_at).getHours();\n      acc[hour] = (acc[hour] || 0) + 1;\n      return acc;\n    }, {});\n\n    return {\n      best_days: Object.entries(dayStats)\n        .sort(([, a], [, b]) => (b as number) - (a as number))\n        .slice(0, 3),\n      best_hours: Object.entries(hourStats)\n        .sort(([, a], [, b]) => (b as number) - (a as number))\n        .slice(0, 3),\n      consistency_score: this.calculateConsistency(logs),\n      total_actions: logs.length,\n      avg_per_day: logs.length / 30,\n    };\n  }\n\n  private calculateConsistency(logs: any[]): number {\n    // Calcul du score de consistance basé sur la régularité\n    const dailyCounts = logs.reduce((acc, log) => {\n      const date = new Date(log.created_at).toDateString();\n      acc[date] = (acc[date] || 0) + 1;\n      return acc;\n    }, {});\n\n    const days = Object.keys(dailyCounts).length;\n    const totalDays = 30;\n    return Math.round((days / totalDays) * 100);\n  }\n\n  private generateProactiveAdvice(patterns: any, predictions: any, anomalies: any): any {\n    // Génération de conseils proactifs basés sur l'analyse croisée\n    const advice: {\n      immediate: Array<{ type: string; message: string; action: string }>;\n      short_term: Array<{ type: string; message: string; action: string }>;\n      long_term: Array<{ type: string; message: string; action: string }>;\n    } = {\n      immediate: [],\n      short_term: [],\n      long_term: [],\n    };\n\n    // Conseils immédiats basés sur les anomalies\n    if (anomalies.anomalies?.length > 0) {\n      advice.immediate.push({\n        type: 'correction',\n        message: 'Anomalie détectée dans vos habitudes',\n        action: anomalies.anomalies[0].suggestion,\n      });\n    }\n\n    // Conseils à court terme basés sur les prédictions\n    if (predictions.predictions?.performance?.expected_improvement > 10) {\n      advice.short_term.push({\n        type: 'optimization',\n        message: \"Potentiel d'amélioration élevé détecté\",\n        action: 'Intensifiez vos efforts cette semaine',\n      });\n    }\n\n    // Conseils à long terme basés sur les patterns\n    if (patterns.analysis?.consistency_score < 70) {\n      advice.long_term.push({\n        type: 'habit_building',\n        message: 'Travaillons sur la consistance',\n        action: 'Établissez une routine quotidienne fixe',\n      });\n    }\n\n    return advice;\n  }\n\n  private getNextRecommendedAction(advice: any): string {\n    // Détermine la prochaine action recommandée\n    if (advice.immediate?.length > 0) {\n      return advice.immediate[0].action;\n    }\n    if (advice.short_term?.length > 0) {\n      return advice.short_term[0].action;\n    }\n    return 'Continuez votre excellent travail !';\n  }\n}\n\nexport const aiService = new AIService();\n","import { useEffect, useState, useRef } from 'react';\n\n// Hook pour les animations d'entrée\nexport const useAnimateOnMount = (delay = 0) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(true);\n    }, delay);\n\n    return () => clearTimeout(timer);\n  }, [delay]);\n\n  return isVisible;\n};\n\n// Hook pour les animations au scroll\nexport const useAnimateOnScroll = (threshold = 0.1) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n        }\n      },\n      { threshold }\n    );\n\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [threshold]);\n\n  return { elementRef, isVisible };\n};\n\n// Hook pour les animations de progression\nexport const useProgressAnimation = (targetValue: number, duration = 1000) => {\n  const [currentValue, setCurrentValue] = useState(0);\n\n  useEffect(() => {\n    let startTime: number;\n    let animationFrame: number;\n\n    const animate = (timestamp: number) => {\n      if (!startTime) startTime = timestamp;\n      const elapsed = timestamp - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n\n      // Easing function (ease-out)\n      const easeOut = 1 - Math.pow(1 - progress, 3);\n      setCurrentValue(targetValue * easeOut);\n\n      if (progress < 1) {\n        animationFrame = requestAnimationFrame(animate);\n      }\n    };\n\n    animationFrame = requestAnimationFrame(animate);\n\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n    };\n  }, [targetValue, duration]);\n\n  return currentValue;\n};\n\n// Hook pour les vibrations haptiques\nexport const useHaptic = () => {\n  const vibrate = (pattern: number | number[] = 100) => {\n    if ('vibrate' in navigator) {\n      navigator.vibrate(pattern);\n    }\n  };\n\n  const successVibration = () => vibrate([50, 100, 50]);\n  const errorVibration = () => vibrate([100, 50, 100, 50, 100]);\n  const clickVibration = () => vibrate(25);\n\n  return {\n    vibrate,\n    successVibration,\n    errorVibration,\n    clickVibration,\n  };\n};\n\n// Hook pour les notifications avec animations\nexport const useAnimatedToast = () => {\n  const [toasts, setToasts] = useState<\n    Array<{\n      id: string;\n      message: string;\n      type: 'success' | 'error' | 'info';\n      isExiting: boolean;\n    }>\n  >([]);\n\n  const addToast = (message: string, type: 'success' | 'error' | 'info' = 'info') => {\n    const id = Date.now().toString();\n    const newToast = { id, message, type, isExiting: false };\n\n    setToasts(prev => [...prev, newToast]);\n\n    // Auto-remove après 3 secondes\n    setTimeout(() => {\n      setToasts(prev =>\n        prev.map(toast => (toast.id === id ? { ...toast, isExiting: true } : toast))\n      );\n\n      // Supprimer définitivement après l'animation\n      setTimeout(() => {\n        setToasts(prev => prev.filter(toast => toast.id !== id));\n      }, 300);\n    }, 3000);\n  };\n\n  return { toasts, addToast };\n};\n","import React, { createContext, useContext, useEffect, useState } from 'react';\n\ntype Theme = 'light' | 'dark' | 'auto';\n\ninterface ThemeContextType {\n  theme: Theme;\n  resolvedTheme: 'light' | 'dark';\n  setTheme: (theme: Theme) => void;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\n  children,\n  defaultTheme = 'auto',\n}) => {\n  const [theme, setTheme] = useState<Theme>(defaultTheme);\n  const [resolvedTheme, setResolvedTheme] = useState<'light' | 'dark'>('light');\n\n  // Détection du thème système\n  const getSystemTheme = (): 'light' | 'dark' => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return 'light';\n  };\n\n  // Résolution du thème\n  useEffect(() => {\n    let newResolvedTheme: 'light' | 'dark';\n\n    if (theme === 'auto') {\n      newResolvedTheme = getSystemTheme();\n    } else {\n      newResolvedTheme = theme;\n    }\n\n    setResolvedTheme(newResolvedTheme);\n\n    // Application du thème au DOM\n    const root = document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(newResolvedTheme);\n\n    // Sauvegarde dans localStorage\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Écoute des changements de thème système\n  useEffect(() => {\n    if (theme === 'auto') {\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      const handleChange = () => {\n        setResolvedTheme(getSystemTheme());\n      };\n\n      mediaQuery.addEventListener('change', handleChange);\n      return () => mediaQuery.removeEventListener('change', handleChange);\n    }\n  }, [theme]);\n\n  // Chargement du thème depuis localStorage\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme') as Theme;\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    setTheme(current => {\n      switch (current) {\n        case 'light':\n          return 'dark';\n        case 'dark':\n          return 'auto';\n        case 'auto':\n          return 'light';\n        default:\n          return 'light';\n      }\n    });\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        resolvedTheme,\n        setTheme,\n        toggleTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// Hook pour les couleurs adaptatives\nexport const useAdaptiveColors = () => {\n  const { resolvedTheme } = useTheme();\n\n  const colors = {\n    light: {\n      background: 'bg-gray-50',\n      surface: 'bg-white',\n      text: 'text-gray-900',\n      textSecondary: 'text-gray-600',\n      border: 'border-gray-200',\n      accent: 'text-blue-600',\n    },\n    dark: {\n      background: 'bg-gray-900',\n      surface: 'bg-gray-800',\n      text: 'text-white',\n      textSecondary: 'text-gray-300',\n      border: 'border-gray-700',\n      accent: 'text-blue-400',\n    },\n  };\n\n  return colors[resolvedTheme];\n};\n\n// Composant de toggle du thème\nexport const ThemeToggle: React.FC = () => {\n  const { theme, toggleTheme } = useTheme();\n\n  const getThemeIcon = () => {\n    switch (theme) {\n      case 'light':\n        return '☀️';\n      case 'dark':\n        return '🌙';\n      case 'auto':\n        return '🔄';\n      default:\n        return '☀️';\n    }\n  };\n\n  return (\n    <button\n      onClick={toggleTheme}\n      className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors\"\n      title={`Thème: ${theme}`}\n    >\n      <span className=\"text-lg\">{getThemeIcon()}</span>\n    </button>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  aiService,\n  type AIAnalysis,\n  type CoachingResponse,\n  type ContextualRecommendation,\n} from '@/services/aiService';\nimport { appStore } from '@/store/appStore';\nimport { useAnimateOnMount } from '@/shared/hooks/useAnimations';\nimport { useAdaptiveColors } from '@/shared/components/ThemeProvider';\n\ninterface AIIntelligenceProps {\n  pillar?: string;\n  showPredictions?: boolean;\n  showCoaching?: boolean;\n  showRecommendations?: boolean;\n  className?: string;\n}\n\nconst AIIntelligence: React.FC<AIIntelligenceProps> = ({\n  pillar = 'general',\n  showPredictions = true,\n  showCoaching = true,\n  showRecommendations = true,\n  className = '',\n}) => {\n  const { appStoreUser } = appStore();\n  const adaptiveColors = useAdaptiveColors();\n  const isAnimated = useAnimateOnMount();\n\n  const [aiAnalysis, setAiAnalysis] = useState<AIAnalysis | null>(null);\n  const [coaching, setCoaching] = useState<CoachingResponse | null>(null);\n  const [recommendations, setRecommendations] = useState<ContextualRecommendation[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<'insights' | 'coaching' | 'predictions'>('insights');\n\n  useEffect(() => {\n    loadAIIntelligence();\n  }, [pillar, appStoreUser?.id]);\n\n  const loadAIIntelligence = async () => {\n    if (!appStoreUser?.id) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const promises: Promise<any>[] = [];\n\n      // Analyse des patterns\n      promises.push(aiService.analyzePatterns(pillar, '7d'));\n\n      // Coaching adaptatif si demandé\n      if (showCoaching) {\n        promises.push(\n          aiService.getAdaptiveCoaching(\n            { user_id: appStoreUser.id, profile: appStoreUser },\n            { current_pillar: pillar, time: new Date().toISOString() },\n            'improve_consistency'\n          )\n        );\n      }\n\n      // Recommandations contextuelles si demandées\n      if (showRecommendations) {\n        promises.push(\n          aiService.getContextualRecommendations(\n            {\n              time_of_day: new Date().getHours(),\n              day_of_week: new Date().getDay(),\n              weather: 'sunny', // À connecter à une API météo\n              location: 'home',\n            },\n            appStoreUser\n          )\n        );\n      }\n\n      const results = await Promise.all(promises);\n\n      setAiAnalysis(results[0]);\n      if (showCoaching && results[1]) setCoaching(results[1]);\n      if (showRecommendations && results[2]) setRecommendations(results[2].recommendations || []);\n\n      // Toast de succès simplifié\n      console.log('Intelligence AI mise à jour');\n    } catch (err) {\n      setError(\"Erreur lors du chargement de l'intelligence AI\");\n      console.error('AI Intelligence error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRefreshAI = () => {\n    loadAIIntelligence();\n  };\n\n  const getTrendColor = (trend: string) => {\n    switch (trend) {\n      case 'improving':\n        return '#22c55e'; // success\n      case 'stable':\n        return '#f59e0b'; // warning\n      case 'declining':\n        return '#ef4444'; // error\n      default:\n        return adaptiveColors.text;\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'high':\n        return '#ef4444'; // error\n      case 'medium':\n        return '#f59e0b'; // warning\n      case 'low':\n        return '#22c55e'; // success\n      default:\n        return adaptiveColors.text;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className={`ai-intelligence loading ${className}`}>\n        <div className=\"ai-loading-spinner\">\n          <div className=\"spinner\"></div>\n          <p>Analyse en cours...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`ai-intelligence error ${className}`}>\n        <div className=\"error-message\">\n          <p>{error}</p>\n          <button onClick={handleRefreshAI} className=\"retry-btn\">\n            Réessayer\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={`ai-intelligence ${isAnimated ? 'animated' : ''} ${className}`}\n      style={{ borderColor: adaptiveColors.border }}\n    >\n      {/* Header avec navigation */}\n      <div className=\"ai-header\">\n        <div className=\"ai-title\">\n          <h3 style={{ color: adaptiveColors.text }}>🧠 Intelligence AI</h3>\n          <button\n            onClick={handleRefreshAI}\n            className=\"refresh-btn\"\n            style={{ color: adaptiveColors.accent }}\n          >\n            ↻\n          </button>\n        </div>\n\n        <div className=\"ai-tabs\">\n          <button\n            className={`tab ${activeTab === 'insights' ? 'active' : ''}`}\n            onClick={() => setActiveTab('insights')}\n            style={{\n              backgroundColor: activeTab === 'insights' ? adaptiveColors.accent : 'transparent',\n              color: activeTab === 'insights' ? 'white' : adaptiveColors.text,\n            }}\n          >\n            Insights\n          </button>\n\n          {showCoaching && (\n            <button\n              className={`tab ${activeTab === 'coaching' ? 'active' : ''}`}\n              onClick={() => setActiveTab('coaching')}\n              style={{\n                backgroundColor: activeTab === 'coaching' ? adaptiveColors.accent : 'transparent',\n                color: activeTab === 'coaching' ? 'white' : adaptiveColors.text,\n              }}\n            >\n              Coaching\n            </button>\n          )}\n\n          {showPredictions && (\n            <button\n              className={`tab ${activeTab === 'predictions' ? 'active' : ''}`}\n              onClick={() => setActiveTab('predictions')}\n              style={{\n                backgroundColor:\n                  activeTab === 'predictions' ? adaptiveColors.accent : 'transparent',\n                color: activeTab === 'predictions' ? 'white' : adaptiveColors.text,\n              }}\n            >\n              Prédictions\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Contenu selon l'onglet actif */}\n      <div className=\"ai-content\">\n        {activeTab === 'insights' && aiAnalysis && (\n          <div className=\"insights-panel\">\n            <div className=\"trend-analysis\">\n              <h4 style={{ color: adaptiveColors.text }}>Analyse de tendance</h4>\n              <div className=\"trend-info\">\n                <span\n                  className=\"trend-indicator\"\n                  style={{ color: getTrendColor(aiAnalysis.trend) }}\n                >\n                  {aiAnalysis.trend === 'improving'\n                    ? '📈'\n                    : aiAnalysis.trend === 'stable'\n                      ? '➡️'\n                      : '📉'}\n                  {aiAnalysis.trend === 'improving'\n                    ? 'En progression'\n                    : aiAnalysis.trend === 'stable'\n                      ? 'Stable'\n                      : 'En baisse'}\n                </span>\n                <span className=\"confidence\">\n                  Confiance: {Math.round(aiAnalysis.confidence * 100)}%\n                </span>\n              </div>\n            </div>\n\n            <div className=\"consistency-score\">\n              <h4 style={{ color: adaptiveColors.text }}>Score de consistance</h4>\n              <div className=\"score-display\">\n                <div className=\"score-circle\" style={{ borderColor: adaptiveColors.accent }}>\n                  <span style={{ color: adaptiveColors.accent }}>\n                    {Math.round(aiAnalysis.consistency_score)}%\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"recommendations-list\">\n              <h4 style={{ color: adaptiveColors.text }}>Recommandations AI</h4>\n              {aiAnalysis.recommendations.map((rec, index) => (\n                <div\n                  key={index}\n                  className=\"recommendation-item\"\n                  style={{ borderLeft: `3px solid ${adaptiveColors.accent}` }}\n                >\n                  <p style={{ color: adaptiveColors.text }}>{rec}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'coaching' && coaching && (\n          <div className=\"coaching-panel\">\n            <div className=\"coaching-message\">\n              <div\n                className=\"priority-badge\"\n                style={{ backgroundColor: getPriorityColor(coaching.priority) }}\n              >\n                {coaching.priority.toUpperCase()}\n              </div>\n              <h4 style={{ color: adaptiveColors.text }}>Message personnalisé</h4>\n              <p style={{ color: adaptiveColors.text }}>{coaching.message}</p>\n            </div>\n\n            <div className=\"action-items\">\n              <h4 style={{ color: adaptiveColors.text }}>Actions recommandées</h4>\n              {coaching.actions.map((action, index) => (\n                <div\n                  key={index}\n                  className=\"action-item\"\n                  style={{ backgroundColor: adaptiveColors.surface }}\n                >\n                  <h5 style={{ color: adaptiveColors.accent }}>{action.title}</h5>\n                  <p style={{ color: adaptiveColors.text }}>{action.description}</p>\n                  <span className=\"pillar-tag\" style={{ color: adaptiveColors.accent }}>\n                    {action.pillar}\n                  </span>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"next-checkin\">\n              <p style={{ color: adaptiveColors.textSecondary }}>\n                Prochain check-in: {new Date(coaching.next_check_in).toLocaleDateString('fr-FR')}\n              </p>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'predictions' && (\n          <div className=\"predictions-panel\">\n            <div className=\"prediction-cards\">\n              <div className=\"prediction-card\" style={{ backgroundColor: adaptiveColors.surface }}>\n                <h4 style={{ color: adaptiveColors.text }}>Performance prédite</h4>\n                <div className=\"prediction-chart\">\n                  <div\n                    className=\"chart-bar\"\n                    style={{ backgroundColor: adaptiveColors.accent }}\n                  ></div>\n                </div>\n                <p style={{ color: adaptiveColors.textSecondary }}>\n                  +15% d'amélioration attendue cette semaine\n                </p>\n              </div>\n\n              <div className=\"prediction-card\" style={{ backgroundColor: adaptiveColors.surface }}>\n                <h4 style={{ color: adaptiveColors.text }}>Risques identifiés</h4>\n                <div className=\"risk-indicators\">\n                  <span className=\"risk-low\">Fatigue: Faible</span>\n                  <span className=\"risk-medium\">Motivation: Moyenne</span>\n                </div>\n              </div>\n            </div>\n\n            {recommendations.length > 0 && (\n              <div className=\"contextual-recommendations\">\n                <h4 style={{ color: adaptiveColors.text }}>Recommandations contextuelles</h4>\n                {recommendations.map((rec, index) => (\n                  <div\n                    key={index}\n                    className=\"context-rec\"\n                    style={{\n                      backgroundColor: adaptiveColors.surface,\n                      borderLeft: `3px solid ${getPriorityColor(rec.priority)}`,\n                    }}\n                  >\n                    <h5 style={{ color: adaptiveColors.accent }}>{rec.title}</h5>\n                    <p style={{ color: adaptiveColors.text }}>{rec.message}</p>\n                    <div className=\"rec-actions\">\n                      {rec.actions.map((action, idx) => (\n                        <button\n                          key={idx}\n                          className=\"action-btn\"\n                          style={{\n                            backgroundColor: adaptiveColors.accent,\n                            color: 'white',\n                          }}\n                        >\n                          {action}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* CSS intégré directement dans le composant */}\n      <style\n        dangerouslySetInnerHTML={{\n          __html: `\n        .ai-intelligence {\n          background: ${adaptiveColors.surface};\n          border-radius: 12px;\n          padding: 20px;\n          margin: 16px 0;\n          border: 1px solid ${adaptiveColors.border};\n          transition: all 0.3s ease;\n        }\n\n        .ai-intelligence.animated {\n          animation: slideInUp 0.6s ease-out;\n        }\n\n        .ai-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 20px;\n        }\n\n        .ai-title {\n          display: flex;\n          align-items: center;\n          gap: 10px;\n        }\n\n        .ai-title h3 {\n          margin: 0;\n          font-size: 1.2rem;\n          font-weight: 600;\n        }\n\n        .refresh-btn {\n          background: none;\n          border: none;\n          font-size: 1.2rem;\n          cursor: pointer;\n          padding: 5px;\n          border-radius: 50%;\n          transition: transform 0.3s ease;\n        }\n\n        .refresh-btn:hover {\n          transform: rotate(180deg);\n        }\n\n        .ai-tabs {\n          display: flex;\n          gap: 8px;\n        }\n\n        .tab {\n          padding: 8px 16px;\n          border: none;\n          border-radius: 20px;\n          cursor: pointer;\n          font-size: 0.9rem;\n          font-weight: 500;\n          transition: all 0.3s ease;\n        }\n\n        .tab:hover {\n          opacity: 0.8;\n        }\n\n        .ai-content {\n          min-height: 200px;\n        }\n\n        .prediction-cards {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          gap: 16px;\n          margin-bottom: 20px;\n        }\n\n        @media (max-width: 768px) {\n          .prediction-cards {\n            grid-template-columns: 1fr;\n          }\n        }\n\n        .prediction-card {\n          padding: 16px;\n          border-radius: 8px;\n          text-align: center;\n        }\n\n        .spinner {\n          width: 40px;\n          height: 40px;\n          border: 4px solid rgba(255, 255, 255, 0.1);\n          border-left: 4px solid ${adaptiveColors.accent};\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin: 0 auto 16px;\n        }\n\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n\n        @keyframes slideInUp {\n          from {\n            opacity: 0;\n            transform: translateY(30px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n      `,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default AIIntelligence;\n"],"names":["AIService","__publicField","pillar","timeframe","response","userContext","currentState","goal","dataPoints","horizon","context","userProfile","userId","logs","supabase","insights","patterns","predictions","anomalies","proactiveAdvice","dayStats","acc","log","day","hourStats","hour","b","dailyCounts","date","days","advice","_a","_c","_b","_d","aiService","useAnimateOnMount","delay","isVisible","setIsVisible","useState","useEffect","timer","ThemeContext","createContext","useTheme","useContext","useAdaptiveColors","resolvedTheme","AIIntelligence","showPredictions","showCoaching","showRecommendations","className","appStoreUser","appStore","adaptiveColors","isAnimated","aiAnalysis","setAiAnalysis","coaching","setCoaching","recommendations","setRecommendations","loading","setLoading","error","setError","activeTab","setActiveTab","loadAIIntelligence","promises","results","err","handleRefreshAI","getTrendColor","trend","getPriorityColor","priority","jsx","jsxs","rec","index","action","idx"],"mappings":"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"}