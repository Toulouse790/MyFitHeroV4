{"version":3,"file":"use-toast-1UJezmcI.js","sources":["../../src/shared/hooks/use-toast.ts"],"sourcesContent":["import React from 'react';\nimport { toast as sonnerToast } from 'sonner';\nimport { useState, useCallback } from 'react';\n\ninterface ToastOptions {\n  title: string;\n  description?: string;\n  variant?: 'default' | 'destructive' | 'success';\n  duration?: number;\n}\n\ninterface ToastState extends ToastOptions {\n  id: string;\n  action?: React.ReactNode;\n}\n\n// Store global pour les toasts (compatible avec le toaster)\nlet toastsStore: ToastState[] = [];\nlet listeners: (() => void)[] = [];\n\nconst notifyListeners = () => {\n  listeners.forEach(listener => listener());\n};\n\nexport const useToast = () => {\n  const [toasts, setToasts] = useState<ToastState[]>(toastsStore);\n\n  // S'abonner aux changements\n  const subscribe = useCallback(() => {\n    const listener = () => setToasts([...toastsStore]);\n    listeners.push(listener);\n    return () => {\n      listeners = listeners.filter(l => l !== listener);\n    };\n  }, []);\n\n  const toast = useCallback(\n    ({ title, description, variant = 'default', duration = 4000 }: ToastOptions) => {\n      const id = Math.random().toString(36).substring(7);\n      const newToast: ToastState = {\n        id,\n        title,\n        variant,\n        duration,\n        ...(description && { description }),\n      };\n\n      toastsStore.push(newToast);\n      notifyListeners();\n\n      // Auto-remove after duration\n      setTimeout(() => {\n        toastsStore = toastsStore.filter(t => t.id !== id);\n        notifyListeners();\n      }, duration);\n\n      const message = description ? `${title}: ${description}` : title;\n\n      switch (variant) {\n        case 'destructive':\n          sonnerToast.error(message, { duration });\n          break;\n        case 'success':\n          sonnerToast.success(message, { duration });\n          break;\n        default:\n          sonnerToast(title, {\n            description,\n            duration,\n          });\n          break;\n      }\n    },\n    []\n  );\n\n  return { toast, toasts, subscribe };\n};\n\n// Export du type pour compatibilit√©\nexport type Toast = ToastOptions;\n"],"names":["toastsStore","listeners","notifyListeners","listener","useToast","toasts","setToasts","useState","subscribe","useCallback","l","title","description","variant","duration","id","newToast","t","message","sonnerToast"],"mappings":"gFAiBA,IAAIA,EAA4B,CAAA,EAC5BC,EAA4B,CAAA,EAEhC,MAAMC,EAAkB,IAAM,CAC5BD,EAAU,QAAQE,GAAYA,EAAA,CAAU,CAC1C,EAEaC,EAAW,IAAM,CAC5B,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAuBP,CAAW,EAGxDQ,EAAYC,EAAAA,YAAY,IAAM,CAClC,MAAMN,EAAW,IAAMG,EAAU,CAAC,GAAGN,CAAW,CAAC,EACjD,OAAAC,EAAU,KAAKE,CAAQ,EAChB,IAAM,CACXF,EAAYA,EAAU,OAAOS,GAAKA,IAAMP,CAAQ,CAClD,CACF,EAAG,CAAA,CAAE,EA0CL,MAAO,CAAA,MAxCOM,EAAAA,YACZ,CAAC,CAAE,MAAAE,EAAO,YAAAC,EAAa,QAAAC,EAAU,UAAW,SAAAC,EAAW,OAAyB,CAC9E,MAAMC,EAAK,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,UAAU,CAAC,EAC3CC,EAAuB,CAC3B,GAAAD,EACA,MAAAJ,EACA,QAAAE,EACA,SAAAC,EACA,GAAIF,GAAe,CAAE,YAAAA,CAAA,CAAY,EAGnCZ,EAAY,KAAKgB,CAAQ,EACzBd,EAAA,EAGA,WAAW,IAAM,CACfF,EAAcA,EAAY,OAAOiB,GAAKA,EAAE,KAAOF,CAAE,EACjDb,EAAA,CACF,EAAGY,CAAQ,EAEX,MAAMI,EAAUN,EAAc,GAAGD,CAAK,KAAKC,CAAW,GAAKD,EAE3D,OAAQE,EAAA,CACN,IAAK,cACHM,EAAY,MAAMD,EAAS,CAAE,SAAAJ,CAAA,CAAU,EACvC,MACF,IAAK,UACHK,EAAY,QAAQD,EAAS,CAAE,SAAAJ,CAAA,CAAU,EACzC,MACF,QACEK,EAAYR,EAAO,CACjB,YAAAC,EACA,SAAAE,CAAA,CACD,EACD,KAAA,CAEN,EACA,CAAA,CAAC,EAGa,OAAAT,EAAQ,UAAAG,CAAA,CAC1B"}