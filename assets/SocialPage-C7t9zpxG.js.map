{"version":3,"file":"SocialPage-C7t9zpxG.js","sources":["../../node_modules/lucide-react/dist/esm/icons/bookmark.js","../../node_modules/lucide-react/dist/esm/icons/crown.js","../../node_modules/lucide-react/dist/esm/icons/funnel.js","../../node_modules/lucide-react/dist/esm/icons/image.js","../../node_modules/lucide-react/dist/esm/icons/map-pin.js","../../node_modules/lucide-react/dist/esm/icons/medal.js","../../node_modules/lucide-react/dist/esm/icons/message-circle.js","../../node_modules/lucide-react/dist/esm/icons/message-square.js","../../node_modules/lucide-react/dist/esm/icons/send.js","../../node_modules/lucide-react/dist/esm/icons/star.js","../../node_modules/lucide-react/dist/esm/icons/user-plus.js","../../node_modules/@radix-ui/react-use-is-hydrated/dist/index.mjs","../../node_modules/@radix-ui/react-avatar/dist/index.mjs","../../src/components/ui/avatar.tsx","../../src/features/social/pages/SocialPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z\", key: \"1fy3hk\" }]\n];\nconst Bookmark = createLucideIcon(\"bookmark\", __iconNode);\n\nexport { __iconNode, Bookmark as default };\n//# sourceMappingURL=bookmark.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M11.562 3.266a.5.5 0 0 1 .876 0L15.39 8.87a1 1 0 0 0 1.516.294L21.183 5.5a.5.5 0 0 1 .798.519l-2.834 10.246a1 1 0 0 1-.956.734H5.81a1 1 0 0 1-.957-.734L2.02 6.02a.5.5 0 0 1 .798-.519l4.276 3.664a1 1 0 0 0 1.516-.294z\",\n      key: \"1vdc57\"\n    }\n  ],\n  [\"path\", { d: \"M5 21h14\", key: \"11awu3\" }]\n];\nconst Crown = createLucideIcon(\"crown\", __iconNode);\n\nexport { __iconNode, Crown as default };\n//# sourceMappingURL=crown.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M10 20a1 1 0 0 0 .553.895l2 1A1 1 0 0 0 14 21v-7a2 2 0 0 1 .517-1.341L21.74 4.67A1 1 0 0 0 21 3H3a1 1 0 0 0-.742 1.67l7.225 7.989A2 2 0 0 1 10 14z\",\n      key: \"sc7q7i\"\n    }\n  ]\n];\nconst Funnel = createLucideIcon(\"funnel\", __iconNode);\n\nexport { __iconNode, Funnel as default };\n//# sourceMappingURL=funnel.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"3\", rx: \"2\", ry: \"2\", key: \"1m3agn\" }],\n  [\"circle\", { cx: \"9\", cy: \"9\", r: \"2\", key: \"af1f0g\" }],\n  [\"path\", { d: \"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\", key: \"1xmnt7\" }]\n];\nconst Image = createLucideIcon(\"image\", __iconNode);\n\nexport { __iconNode, Image as default };\n//# sourceMappingURL=image.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0\",\n      key: \"1r0f0z\"\n    }\n  ],\n  [\"circle\", { cx: \"12\", cy: \"10\", r: \"3\", key: \"ilqhr7\" }]\n];\nconst MapPin = createLucideIcon(\"map-pin\", __iconNode);\n\nexport { __iconNode, MapPin as default };\n//# sourceMappingURL=map-pin.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M7.21 15 2.66 7.14a2 2 0 0 1 .13-2.2L4.4 2.8A2 2 0 0 1 6 2h12a2 2 0 0 1 1.6.8l1.6 2.14a2 2 0 0 1 .14 2.2L16.79 15\",\n      key: \"143lza\"\n    }\n  ],\n  [\"path\", { d: \"M11 12 5.12 2.2\", key: \"qhuxz6\" }],\n  [\"path\", { d: \"m13 12 5.88-9.8\", key: \"hbye0f\" }],\n  [\"path\", { d: \"M8 7h8\", key: \"i86dvs\" }],\n  [\"circle\", { cx: \"12\", cy: \"17\", r: \"5\", key: \"qbz8iq\" }],\n  [\"path\", { d: \"M12 18v-2h-.5\", key: \"fawc4q\" }]\n];\nconst Medal = createLucideIcon(\"medal\", __iconNode);\n\nexport { __iconNode, Medal as default };\n//# sourceMappingURL=medal.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092 10 10 0 1 0-4.777-4.719\",\n      key: \"1sd12s\"\n    }\n  ]\n];\nconst MessageCircle = createLucideIcon(\"message-circle\", __iconNode);\n\nexport { __iconNode, MessageCircle as default };\n//# sourceMappingURL=message-circle.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z\",\n      key: \"18887p\"\n    }\n  ]\n];\nconst MessageSquare = createLucideIcon(\"message-square\", __iconNode);\n\nexport { __iconNode, MessageSquare as default };\n//# sourceMappingURL=message-square.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\",\n      key: \"1ffxy3\"\n    }\n  ],\n  [\"path\", { d: \"m21.854 2.147-10.94 10.939\", key: \"12cjpa\" }]\n];\nconst Send = createLucideIcon(\"send\", __iconNode);\n\nexport { __iconNode, Send as default };\n//# sourceMappingURL=send.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z\",\n      key: \"r04s7s\"\n    }\n  ]\n];\nconst Star = createLucideIcon(\"star\", __iconNode);\n\nexport { __iconNode, Star as default };\n//# sourceMappingURL=star.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"line\", { x1: \"19\", x2: \"19\", y1: \"8\", y2: \"14\", key: \"1bvyxn\" }],\n  [\"line\", { x1: \"22\", x2: \"16\", y1: \"11\", y2: \"11\", key: \"1shjgl\" }]\n];\nconst UserPlus = createLucideIcon(\"user-plus\", __iconNode);\n\nexport { __iconNode, UserPlus as default };\n//# sourceMappingURL=user-plus.js.map\n","// src/use-is-hydrated.tsx\nimport { useSyncExternalStore } from \"use-sync-external-store/shim\";\nfunction useIsHydrated() {\n  return useSyncExternalStore(\n    subscribe,\n    () => true,\n    () => false\n  );\n}\nfunction subscribe() {\n  return () => {\n  };\n}\nexport {\n  useIsHydrated\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/avatar.tsx\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useIsHydrated } from \"@radix-ui/react-use-is-hydrated\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AVATAR_NAME = \"Avatar\";\nvar [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\nvar [AvatarProvider, useAvatarContext] = createAvatarContext(AVATAR_NAME);\nvar Avatar = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState(\"idle\");\n    return /* @__PURE__ */ jsx(\n      AvatarProvider,\n      {\n        scope: __scopeAvatar,\n        imageLoadingStatus,\n        onImageLoadingStatusChange: setImageLoadingStatus,\n        children: /* @__PURE__ */ jsx(Primitive.span, { ...avatarProps, ref: forwardedRef })\n      }\n    );\n  }\n);\nAvatar.displayName = AVATAR_NAME;\nvar IMAGE_NAME = \"AvatarImage\";\nvar AvatarImage = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {\n    }, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src, imageProps);\n    const handleLoadingStatusChange = useCallbackRef((status) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== \"idle\") {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n    return imageLoadingStatus === \"loaded\" ? /* @__PURE__ */ jsx(Primitive.img, { ...imageProps, ref: forwardedRef, src }) : null;\n  }\n);\nAvatarImage.displayName = IMAGE_NAME;\nvar FALLBACK_NAME = \"AvatarFallback\";\nvar AvatarFallback = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === void 0);\n    React.useEffect(() => {\n      if (delayMs !== void 0) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n    return canRender && context.imageLoadingStatus !== \"loaded\" ? /* @__PURE__ */ jsx(Primitive.span, { ...fallbackProps, ref: forwardedRef }) : null;\n  }\n);\nAvatarFallback.displayName = FALLBACK_NAME;\nfunction resolveLoadingStatus(image, src) {\n  if (!image) {\n    return \"idle\";\n  }\n  if (!src) {\n    return \"error\";\n  }\n  if (image.src !== src) {\n    image.src = src;\n  }\n  return image.complete && image.naturalWidth > 0 ? \"loaded\" : \"loading\";\n}\nfunction useImageLoadingStatus(src, { referrerPolicy, crossOrigin }) {\n  const isHydrated = useIsHydrated();\n  const imageRef = React.useRef(null);\n  const image = (() => {\n    if (!isHydrated) return null;\n    if (!imageRef.current) {\n      imageRef.current = new window.Image();\n    }\n    return imageRef.current;\n  })();\n  const [loadingStatus, setLoadingStatus] = React.useState(\n    () => resolveLoadingStatus(image, src)\n  );\n  useLayoutEffect(() => {\n    setLoadingStatus(resolveLoadingStatus(image, src));\n  }, [image, src]);\n  useLayoutEffect(() => {\n    const updateStatus = (status) => () => {\n      setLoadingStatus(status);\n    };\n    if (!image) return;\n    const handleLoad = updateStatus(\"loaded\");\n    const handleError = updateStatus(\"error\");\n    image.addEventListener(\"load\", handleLoad);\n    image.addEventListener(\"error\", handleError);\n    if (referrerPolicy) {\n      image.referrerPolicy = referrerPolicy;\n    }\n    if (typeof crossOrigin === \"string\") {\n      image.crossOrigin = crossOrigin;\n    }\n    return () => {\n      image.removeEventListener(\"load\", handleLoad);\n      image.removeEventListener(\"error\", handleError);\n    };\n  }, [image, crossOrigin, referrerPolicy]);\n  return loadingStatus;\n}\nvar Root = Avatar;\nvar Image = AvatarImage;\nvar Fallback = AvatarFallback;\nexport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n  Fallback,\n  Image,\n  Root,\n  createAvatarScope\n};\n//# sourceMappingURL=index.mjs.map\n","// client/src/components/ui/avatar.tsx\nimport * as React from 'react';\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\n\nimport { cn } from '@/lib/utils';\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn('relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full', className)}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('aspect-square h-full w-full', className)}\n    {...props}\n  />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\n      className\n    )}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarImage, AvatarFallback };\n","// pages/Social.tsx\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport {\n  Users,\n  Target,\n  Trophy,\n  MessageCircle,\n  Star,\n  Plus,\n  Heart,\n  Share2,\n  Send,\n  Image,\n  MapPin,\n  Award,\n  Filter,\n  Crown,\n  Medal,\n  Bookmark,\n  Trash2,\n  UserPlus,\n  MessageSquare,\n} from 'lucide-react';\nimport { appStore } from '@/store/appStore';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport { UniformHeader } from '@/features/profile/components/UniformHeader';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport AIIntelligence from '@/features/ai-coach/components/AIIntelligence';\n\n// Types\ninterface SocialPost {\n  id: string;\n  user_id: string;\n  content: string;\n  post_type: 'general' | 'achievement' | 'workout' | 'progress' | 'challenge';\n  media_urls: string[];\n  likes_count: number;\n  comments_count: number;\n  shares_count: number;\n  is_liked: boolean;\n  is_bookmarked: boolean;\n  created_at: string;\n  user: {\n    id: string;\n    name: string;\n    username: string;\n    avatar_url?: string;\n    sport: string;\n    level: number;\n  };\n  achievements?: any[];\n  workout_data?: any;\n  comments?: Comment[];\n}\n\ninterface Comment {\n  id: string;\n  post_id: string;\n  user_id: string;\n  content: string;\n  created_at: string;\n  user: {\n    name: string;\n    username: string;\n    avatar_url?: string;\n  };\n}\n\ninterface Challenge {\n  id: string;\n  title: string;\n  description: string;\n  creator_id: string;\n  pillar: 'workout' | 'nutrition' | 'hydration' | 'sleep' | 'general';\n  challenge_type: 'individual' | 'team' | 'community';\n  target_value: number;\n  target_unit: string;\n  duration_days: number;\n  difficulty: 'easy' | 'medium' | 'hard' | 'expert';\n  reward_points: number;\n  start_date: string;\n  end_date: string;\n  participants_count: number;\n  is_participating: boolean;\n  progress_percentage: number;\n  creator: {\n    name: string;\n    username: string;\n    avatar_url?: string;\n  };\n}\n\ninterface UserStats {\n  friends_count: number;\n  active_challenges: number;\n  global_rank: number;\n  total_points: number;\n  streak_days: number;\n  achievements_count: number;\n}\n\ninterface Friend {\n  id: string;\n  name: string;\n  username: string;\n  avatar_url?: string;\n  sport: string;\n  level: number;\n  is_online: boolean;\n  mutual_friends: number;\n  last_activity: string;\n}\n\ninterface CreatePostData {\n  content: string;\n  post_type: 'general' | 'achievement' | 'workout' | 'progress';\n  media_files: File[];\n  achievements: any[];\n  location?: string;\n}\n\ninterface CreateChallengeData {\n  title: string;\n  description: string;\n  pillar: 'workout' | 'nutrition' | 'hydration' | 'sleep' | 'general';\n  challenge_type: 'individual' | 'team' | 'community';\n  target_value: number;\n  target_unit: string;\n  duration_days: number;\n  difficulty: 'easy' | 'medium' | 'hard' | 'expert';\n  reward_points: number;\n}\n\nconst Social: React.FC = () => {\n  const { appStoreUser } = appStore();\n  const { toast } = useToast();\n\n  // States\n  const [activeTab, setActiveTab] = useState<'feed' | 'challenges' | 'leaderboard' | 'friends'>(\n    'feed'\n  );\n  const [posts, setPosts] = useState<SocialPost[]>([]);\n  const [challenges, setChallenges] = useState<Challenge[]>([]);\n  const [friends, setFriends] = useState<Friend[]>([]);\n  const [userStats, setUserStats] = useState<UserStats | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [postsLoading, setPostsLoading] = useState(false);\n  const [challengesLoading, setChallengesLoading] = useState(false);\n\n  // Modals\n  const [showCreatePost, setShowCreatePost] = useState(false);\n  const [showCreateChallenge, setShowCreateChallenge] = useState(false);\n  const [showComments, setShowComments] = useState<string | null>(null);\n\n  // Filters & Search\n  const [feedFilter, setFeedFilter] = useState<'all' | 'friends' | 'sport'>('all');\n  const [challengeFilter, setChallengeFilter] = useState<'all' | 'active' | 'available'>('active');\n  const [friendsSearch, setFriendsSearch] = useState('');\n  const [newComment, setNewComment] = useState('');\n\n  // Forms\n  const [newPost, setNewPost] = useState<CreatePostData>({\n    content: '',\n    post_type: 'general',\n    media_files: [],\n    achievements: [],\n    location: '',\n  });\n\n  const [newChallenge, setNewChallenge] = useState<CreateChallengeData>({\n    title: '',\n    description: '',\n    pillar: 'workout',\n    challenge_type: 'community',\n    target_value: 0,\n    target_unit: '',\n    duration_days: 7,\n    difficulty: 'medium',\n    reward_points: 100,\n  });\n\n  // Chargement des données\n  const loadUserStats = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    try {\n      const mockStats: UserStats = {\n        friends_count: 24,\n        active_challenges: 8,\n        global_rank: 47,\n        total_points: 1240,\n        streak_days: 12,\n        achievements_count: 15,\n      };\n      setUserStats(mockStats);\n    } catch {\n      console.error('Erreur chargement stats:', error);\n    }\n  }, [appStoreUser?.id]);\n\n  const loadPosts = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    setPostsLoading(true);\n    try {\n      const mockPosts: SocialPost[] = [\n        {\n          id: '1',\n          user_id: 'user1',\n          content: `Nouveau record personnel ! 🔥 J'ai terminé mon entraînement ${appStoreUser.sport} en 45min aujourd'hui. Les conseils de l'IA MyFitHero ont vraiment payé !`,\n          post_type: 'achievement',\n          media_urls: [],\n          likes_count: 23,\n          comments_count: 7,\n          shares_count: 3,\n          is_liked: false,\n          is_bookmarked: false,\n          created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n          user: {\n            id: 'user1',\n            name: 'Marie Dupont',\n            username: 'marie_fit',\n            avatar_url: '',\n            sport: appStoreUser.sport || 'fitness',\n            level: 8,\n          },\n          achievements: [\n            {\n              type: 'personal_record',\n              value: '45min',\n              description: `Record ${appStoreUser.sport}`,\n            },\n          ],\n          comments: [\n            {\n              id: 'c1',\n              post_id: '1',\n              user_id: 'user2',\n              content: 'Bravo Marie ! Quel est ton secret ?',\n              created_at: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),\n              user: {\n                name: 'Thomas Martin',\n                username: 'tom_athlete',\n                avatar_url: '',\n              },\n            },\n          ],\n        },\n        {\n          id: '2',\n          user_id: 'user2',\n          content: `Défi ${appStoreUser.sport} de la semaine : qui peut tenir la position la plus longtemps ? 💪 J'ai tenu 2min30s ! #MyFitHeroChallenge`,\n          post_type: 'challenge',\n          media_urls: [],\n          likes_count: 41,\n          comments_count: 12,\n          shares_count: 8,\n          is_liked: true,\n          is_bookmarked: true,\n          created_at: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(),\n          user: {\n            id: 'user2',\n            name: 'Thomas Martin',\n            username: 'tom_athlete',\n            sport: appStoreUser.sport || 'fitness',\n            level: 12,\n          },\n          comments: [],\n        },\n      ];\n\n      setPosts(mockPosts);\n    } catch {\n      console.error('Erreur chargement posts:', error);\n    } finally {\n      setPostsLoading(false);\n    }\n  }, [appStoreUser?.id, appStoreUser?.sport, feedFilter]);\n\n  const loadChallenges = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    setChallengesLoading(true);\n    try {\n      const mockChallenges: Challenge[] = [\n        {\n          id: '1',\n          title: `Défi ${appStoreUser.sport} 30 jours`,\n          description: `Entraînement quotidien de ${appStoreUser.sport} pendant 30 jours`,\n          creator_id: 'creator1',\n          pillar: 'workout',\n          challenge_type: 'community',\n          target_value: 30,\n          target_unit: 'jours',\n          duration_days: 30,\n          difficulty: 'medium',\n          reward_points: 500,\n          start_date: new Date().toISOString(),\n          end_date: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n          participants_count: 127,\n          is_participating: true,\n          progress_percentage: 40,\n          creator: {\n            name: 'Coach Sophie',\n            username: 'coach_sophie',\n            avatar_url: '',\n          },\n        },\n        {\n          id: '2',\n          title: 'Hydratation Parfaite',\n          // Utilisation de guillemets doubles pour éviter les conflits avec l'apostrophe\n          description: \"Boire 2.5L d'eau par jour pendant 14 jours\",\n          creator_id: 'creator2',\n          pillar: 'hydration',\n          challenge_type: 'individual',\n          target_value: 2.5,\n          target_unit: 'litres/jour',\n          duration_days: 14,\n          difficulty: 'easy',\n          reward_points: 200,\n          start_date: new Date().toISOString(),\n          end_date: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString(),\n          participants_count: 89,\n          is_participating: false,\n          progress_percentage: 0,\n          creator: {\n            name: 'Dr. Martin',\n            username: 'dr_nutrition',\n            avatar_url: '',\n          },\n        },\n      ];\n\n      setChallenges(mockChallenges);\n    } catch {\n      console.error('Erreur chargement challenges:', error);\n    } finally {\n      setChallengesLoading(false);\n    }\n  }, [appStoreUser?.id, appStoreUser?.sport, challengeFilter]);\n\n  const loadFriends = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    try {\n      const mockFriends: Friend[] = [\n        {\n          id: 'friend1',\n          name: 'Marie Dupont',\n          username: 'marie_fit',\n          avatar_url: '',\n          sport: appStoreUser.sport || 'fitness',\n          level: 8,\n          is_online: true,\n          mutual_friends: 5,\n          last_activity: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\n        },\n        {\n          id: 'friend2',\n          name: 'Thomas Martin',\n          username: 'tom_athlete',\n          avatar_url: '',\n          sport: 'crossfit',\n          level: 12,\n          is_online: false,\n          mutual_friends: 3,\n          last_activity: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n        },\n        {\n          id: 'friend3',\n          name: 'Sophie Laurent',\n          username: 'sophie_coach',\n          avatar_url: '',\n          sport: appStoreUser.sport || 'fitness',\n          level: 15,\n          is_online: true,\n          mutual_friends: 8,\n          last_activity: new Date(Date.now() - 10 * 60 * 1000).toISOString(),\n        },\n      ];\n\n      setFriends(mockFriends);\n    } catch {\n      console.error('Erreur chargement amis:', error);\n    }\n  }, [appStoreUser?.id, appStoreUser?.sport]);\n\n  // Handlers\n  const handleCreatePost = useCallback(async () => {\n    if (!newPost.content.trim()) {\n      toast({\n        title: 'Erreur',\n        description: 'Le contenu du post ne peut pas être vide',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n\n      const newPostData: SocialPost = {\n        id: Date.now().toString(),\n        user_id: appStoreUser?.id || '',\n        content: newPost.content,\n        post_type: newPost.post_type,\n        media_urls: [],\n        likes_count: 0,\n        comments_count: 0,\n        shares_count: 0,\n        is_liked: false,\n        is_bookmarked: false,\n        created_at: new Date().toISOString(),\n        user: {\n          id: appStoreUser?.id || '',\n          name: appStoreUser?.first_name || appStoreUser?.username || 'Utilisateur',\n          username: appStoreUser?.username || 'user',\n          sport: appStoreUser?.sport || 'fitness',\n          level: 5,\n        },\n        achievements: newPost.achievements,\n        comments: [],\n      };\n\n      setPosts(prev => [newPostData, ...prev]);\n\n      toast({\n        title: 'Post publié !',\n        description: 'Votre post a été partagé avec la communauté',\n        action: {\n          label: 'Voir',\n          onClick: () => setActiveTab('feed'),\n        },\n      });\n\n      setNewPost({\n        content: '',\n        post_type: 'general',\n        media_files: [],\n        achievements: [],\n        location: '',\n      });\n      setShowCreatePost(false);\n\n      if (typeof window !== 'undefined' && window.gtag) {\n        window.gtag('event', 'social_post_created', {\n          post_type: newPost.post_type,\n          content_length: newPost.content.length,\n          user_sport: appStoreUser?.sport,\n          user_id: appStoreUser?.id,\n        });\n      }\n    } catch {\n      console.error('Erreur création post:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de publier le post',\n        variant: 'destructive',\n      });\n    }\n  }, [newPost, appStoreUser, toast]);\n\n  const handleCreateChallenge = useCallback(async () => {\n    if (!newChallenge.title.trim() || !newChallenge.description.trim()) {\n      toast({\n        title: 'Erreur',\n        description: 'Titre et description sont requis',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      const challengeData: Challenge = {\n        id: Date.now().toString(),\n        ...newChallenge,\n        creator_id: appStoreUser?.id || '',\n        start_date: new Date().toISOString(),\n        end_date: new Date(\n          Date.now() + newChallenge.duration_days * 24 * 60 * 60 * 1000\n        ).toISOString(),\n        participants_count: 1,\n        is_participating: true,\n        progress_percentage: 0,\n        creator: {\n          name: appStoreUser?.first_name || appStoreUser?.username || 'Utilisateur',\n          username: appStoreUser?.username || 'user',\n          avatar_url: '',\n        },\n      };\n\n      setChallenges(prev => [challengeData, ...prev]);\n\n      toast({\n        title: 'Défi créé !',\n        description: 'Votre défi est maintenant disponible pour la communauté',\n        action: {\n          label: 'Voir les défis',\n          onClick: () => setActiveTab('challenges'),\n        },\n      });\n\n      setNewChallenge({\n        title: '',\n        description: '',\n        pillar: 'workout',\n        challenge_type: 'community',\n        target_value: 0,\n        target_unit: '',\n        duration_days: 7,\n        difficulty: 'medium',\n        reward_points: 100,\n      });\n      setShowCreateChallenge(false);\n\n      if (typeof window !== 'undefined' && window.gtag) {\n        window.gtag('event', 'social_challenge_created', {\n          pillar: newChallenge.pillar,\n          difficulty: newChallenge.difficulty,\n          duration_days: newChallenge.duration_days,\n          user_sport: appStoreUser?.sport,\n          user_id: appStoreUser?.id,\n        });\n      }\n    } catch {\n      console.error('Erreur création challenge:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de créer le défi',\n        variant: 'destructive',\n      });\n    }\n  }, [newChallenge, appStoreUser, toast]);\n\n  const handleLikePost = useCallback(\n    async (postId: string) => {\n      setPosts(prev =>\n        prev.map(post =>\n          post.id === postId\n            ? {\n                ...post,\n                is_liked: !post.is_liked,\n                likes_count: post.is_liked ? post.likes_count - 1 : post.likes_count + 1,\n              }\n            : post\n        )\n      );\n\n      if (typeof window !== 'undefined' && window.gtag) {\n        window.gtag('event', 'social_post_liked', {\n          post_id: postId,\n          user_id: appStoreUser?.id,\n        });\n      }\n    },\n    [appStoreUser?.id]\n  );\n\n  const handleBookmarkPost = useCallback(\n    async (postId: string) => {\n      setPosts(prev =>\n        prev.map(post =>\n          post.id === postId ? { ...post, is_bookmarked: !post.is_bookmarked } : post\n        )\n      );\n\n      const post = posts.find(p => p.id === postId);\n      toast({\n        title: post?.is_bookmarked ? 'Retiré des favoris' : 'Ajouté aux favoris',\n        description: post?.is_bookmarked\n          ? 'Post retiré de vos favoris'\n          : 'Post ajouté à vos favoris',\n      });\n    },\n    [posts, toast]\n  );\n\n  const handleDeletePost = useCallback(\n    async (postId: string) => {\n      if (!window.confirm('Êtes-vous sûr de vouloir supprimer ce post ?')) {\n        return;\n      }\n\n      setPosts(prev => prev.filter(post => post.id !== postId));\n      toast({\n        title: 'Post supprimé',\n        description: 'Votre post a bien été supprimé.',\n      });\n    },\n    [toast]\n  );\n\n  const handleAddComment = useCallback(\n    async (postId: string) => {\n      if (!newComment.trim()) return;\n\n      const comment: Comment = {\n        id: Date.now().toString(),\n        post_id: postId,\n        user_id: appStoreUser?.id || '',\n        content: newComment,\n        created_at: new Date().toISOString(),\n        user: {\n          name: appStoreUser?.first_name || appStoreUser?.username || 'Utilisateur',\n          username: appStoreUser?.username || 'user',\n          avatar_url: '',\n        },\n      };\n\n      setPosts(prev =>\n        prev.map(post =>\n          post.id === postId\n            ? {\n                ...post,\n                comments: [...(post.comments || []), comment],\n                comments_count: post.comments_count + 1,\n              }\n            : post\n        )\n      );\n\n      setNewComment('');\n      toast({ title: 'Commentaire ajouté !' });\n    },\n    [newComment, appStoreUser, toast]\n  );\n\n  const handleJoinChallenge = useCallback(\n    async (challengeId: string) => {\n      const challenge = challenges.find(c => c.id === challengeId);\n\n      if (challenge?.is_participating) {\n        if (!window.confirm('Voulez-vous vraiment quitter ce défi ?')) {\n          return;\n        }\n      }\n\n      setChallenges(prev =>\n        prev.map(challenge =>\n          challenge.id === challengeId\n            ? {\n                ...challenge,\n                is_participating: !challenge.is_participating,\n                participants_count: challenge.is_participating\n                  ? challenge.participants_count - 1\n                  : challenge.participants_count + 1,\n              }\n            : challenge\n        )\n      );\n\n      const updatedChallenge = challenges.find(c => c.id === challengeId);\n      toast({\n        title: updatedChallenge?.is_participating ? 'Défi quitté' : 'Défi rejoint !',\n        description: updatedChallenge?.is_participating\n          ? 'Vous avez quitté ce défi'\n          : `Vous participez maintenant au défi \"${updatedChallenge?.title}\"`,\n      });\n    },\n    [challenges, toast]\n  );\n\n  const handleAddFriend = useCallback(\n    async (_friendId: string) => {\n      toast({\n        title: \"Demande d'ami envoyée\",\n        description: \"Votre demande d'ami a été envoyée.\",\n      });\n    },\n    [toast]\n  );\n\n  // Messages personnalisés\n  const getPersonalizedMessage = useMemo(() => {\n    const userName = appStoreUser?.first_name || appStoreUser?.username || 'Champion';\n    const sport = appStoreUser?.sport || 'sport';\n\n    return `🌟 Connectez-vous avec la communauté ${sport}, ${userName} !`;\n  }, [appStoreUser]);\n\n  // Filtrage des amis\n  const filteredFriends = useMemo(() => {\n    return friends.filter(\n      friend =>\n        friend.name.toLowerCase().includes(friendsSearch.toLowerCase()) ||\n        friend.username.toLowerCase().includes(friendsSearch.toLowerCase())\n    );\n  }, [friends, friendsSearch]);\n\n  // Effects\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      await Promise.all([loadUserStats(), loadPosts(), loadChallenges(), loadFriends()]);\n      setLoading(false);\n    };\n\n    loadData();\n  }, [loadUserStats, loadPosts, loadChallenges, loadFriends]);\n\n  // Composants\n  const CreatePostModal = () => (\n    <Dialog open={showCreatePost} onOpenChange={setShowCreatePost}>\n      <DialogContent className=\"max-w-lg max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Créer un post</DialogTitle>\n        </DialogHeader>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center space-x-3\">\n            <Avatar>\n              <AvatarFallback>\n                {(\n                  appStoreUser?.first_name?.[0] ||\n                  appStoreUser?.username?.[0] ||\n                  'U'\n                ).toUpperCase()}\n              </AvatarFallback>\n            </Avatar>\n            <div>\n              <p className=\"font-medium\">{appStoreUser?.first_name || appStoreUser?.username}</p>\n              <p className=\"text-sm text-gray-500\">{appStoreUser?.sport}</p>\n            </div>\n          </div>\n\n          <Select\n            value={newPost.post_type}\n            onValueChange={(value: any) => setNewPost(prev => ({ ...prev, post_type: value }))}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder=\"Type de post\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"general\">📝 Général</SelectItem>\n              <SelectItem value=\"achievement\">🏆 Achievement</SelectItem>\n              <SelectItem value=\"workout\">💪 Workout</SelectItem>\n              <SelectItem value=\"progress\">📈 Progrès</SelectItem>\n            </SelectContent>\n          </Select>\n\n          <Textarea\n            value={newPost.content}\n            onChange={e => setNewPost(prev => ({ ...prev, content: e.target.value }))}\n            placeholder={`Partagez votre expérience ${appStoreUser?.sport}, vos achievements, vos conseils...`}\n            className=\"min-h-32 resize-none\"\n            maxLength={500}\n          />\n\n          <div className=\"text-xs text-gray-500 text-right\">\n            {newPost.content.length}/500 caractères\n          </div>\n\n          <div className=\"flex justify-between\">\n            <Button variant=\"outline\" size=\"sm\">\n              <Image className=\"h-4 w-4 mr-2\" />\n              Photo\n            </Button>\n            <Button variant=\"outline\" size=\"sm\">\n              <MapPin className=\"h-4 w-4 mr-2\" />\n              Lieu\n            </Button>\n          </div>\n\n          <div className=\"flex justify-end space-x-3\">\n            <Button variant=\"outline\" onClick={() => setShowCreatePost(false)}>\n              Annuler\n            </Button>\n            <Button\n              onClick={handleCreatePost}\n              disabled={!newPost.content.trim()}\n              className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700\"\n            >\n              <Send className=\"h-4 w-4 mr-2\" />\n              Publier\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n\n  const CreateChallengeModal = () => (\n    <Dialog open={showCreateChallenge} onOpenChange={setShowCreateChallenge}>\n      <DialogContent className=\"max-w-lg max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Créer un défi</DialogTitle>\n          <p className=\"text-sm text-gray-600\">\n            Créez un défi motivant pour la communauté {appStoreUser?.sport}\n          </p>\n        </DialogHeader>\n        <div className=\"space-y-4\">\n          <Input\n            value={newChallenge.title}\n            onChange={e => setNewChallenge(prev => ({ ...prev, title: e.target.value }))}\n            placeholder={`ex: Défi ${appStoreUser?.sport} 30 jours`}\n            maxLength={100}\n          />\n\n          <Textarea\n            value={newChallenge.description}\n            onChange={e => setNewChallenge(prev => ({ ...prev, description: e.target.value }))}\n            placeholder=\"Décrivez votre défi en détail...\"\n            className=\"min-h-24 resize-none\"\n            maxLength={300}\n          />\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <Select\n              value={newChallenge.pillar}\n              onValueChange={(value: any) => setNewChallenge(prev => ({ ...prev, pillar: value }))}\n            >\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"workout\">💪 Entraînement</SelectItem>\n                <SelectItem value=\"nutrition\">🍎 Nutrition</SelectItem>\n                <SelectItem value=\"hydration\">💧 Hydratation</SelectItem>\n                <SelectItem value=\"sleep\">😴 Sommeil</SelectItem>\n                <SelectItem value=\"general\">⭐ Général</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Select\n              value={newChallenge.difficulty}\n              onValueChange={(value: any) =>\n                setNewChallenge(prev => ({ ...prev, difficulty: value }))\n              }\n            >\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"easy\">🟢 Facile</SelectItem>\n                <SelectItem value=\"medium\">🟡 Moyen</SelectItem>\n                <SelectItem value=\"hard\">🟠 Difficile</SelectItem>\n                <SelectItem value=\"expert\">🔴 Expert</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <Input\n              type=\"number\"\n              value={newChallenge.target_value || ''}\n              onChange={e =>\n                setNewChallenge(prev => ({ ...prev, target_value: parseInt(e.target.value) || 0 }))\n              }\n              placeholder=\"Objectif\"\n            />\n\n            <Input\n              value={newChallenge.target_unit}\n              onChange={e => setNewChallenge(prev => ({ ...prev, target_unit: e.target.value }))}\n              placeholder=\"Unité (km, reps...)\"\n            />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Durée (jours)</label>\n              <Input\n                type=\"number\"\n                value={newChallenge.duration_days || ''}\n                onChange={e =>\n                  setNewChallenge(prev => ({\n                    ...prev,\n                    duration_days: parseInt(e.target.value) || 1,\n                  }))\n                }\n                min=\"1\"\n                max=\"365\"\n              />\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Points récompense</label>\n              <Input\n                type=\"number\"\n                value={newChallenge.reward_points || ''}\n                onChange={e =>\n                  setNewChallenge(prev => ({\n                    ...prev,\n                    reward_points: parseInt(e.target.value) || 10,\n                  }))\n                }\n                min=\"10\"\n                step=\"10\"\n              />\n            </div>\n          </div>\n\n          <Select\n            value={newChallenge.challenge_type}\n            onValueChange={(value: any) =>\n              setNewChallenge(prev => ({ ...prev, challenge_type: value }))\n            }\n          >\n            <SelectTrigger>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"individual\">👤 Individuel</SelectItem>\n              <SelectItem value=\"team\">👥 Équipe</SelectItem>\n              <SelectItem value=\"community\">🌍 Communauté</SelectItem>\n            </SelectContent>\n          </Select>\n\n          <div className=\"flex justify-end space-x-3 pt-4 border-t\">\n            <Button variant=\"outline\" onClick={() => setShowCreateChallenge(false)}>\n              Annuler\n            </Button>\n            <Button\n              onClick={handleCreateChallenge}\n              disabled={!newChallenge.title.trim() || !newChallenge.description.trim()}\n              className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700\"\n            >\n              <Target className=\"h-4 w-4 mr-2\" />\n              Créer le défi\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n\n  const PostCard = ({ post }: { post: SocialPost }) => (\n    <Card className=\"hover:shadow-lg transition-shadow\">\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-start space-x-3\">\n          <Avatar>\n            <AvatarImage src={post.user.avatar_url} />\n            <AvatarFallback>{post.user.name[0]}</AvatarFallback>\n          </Avatar>\n\n          <div className=\"flex-1\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center space-x-2\">\n                <h4 className=\"font-semibold\">{post.user.name}</h4>\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  {post.user.sport} • Niveau {post.user.level}\n                </Badge>\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  {post.post_type}\n                </Badge>\n              </div>\n\n              {post.user_id === appStoreUser?.id && (\n                <div className=\"flex items-center space-x-1\">\n                  <Button\n                    onClick={() => handleDeletePost(post.id)}\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"text-red-500 hover:text-red-700\"\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            <p className=\"text-gray-700 mb-3\">{post.content}</p>\n\n            {post.achievements && post.achievements.length > 0 && (\n              <div className=\"mb-3\">\n                {post.achievements.map((achievement, index) => (\n                  <Badge key={index} className=\"mr-2 bg-yellow-100 text-yellow-800\">\n                    🏆 {achievement.description}: {achievement.value}\n                  </Badge>\n                ))}\n              </div>\n            )}\n\n            <div className=\"flex items-center justify-between text-sm text-gray-500 mb-3\">\n              <span>\n                {new Date(post.created_at).toLocaleTimeString('fr-FR', {\n                  hour: '2-digit',\n                  minute: '2-digit',\n                })}\n              </span>\n\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => handleLikePost(post.id)}\n                  className={`flex items-center space-x-1 hover:text-red-500 transition-colors ${\n                    post.is_liked ? 'text-red-500' : ''\n                  }`}\n                >\n                  <Heart className={`h-4 w-4 ${post.is_liked ? 'fill-current' : ''}`} />\n                  <span>{post.likes_count}</span>\n                </button>\n\n                <button\n                  onClick={() => setShowComments(showComments === post.id ? null : post.id)}\n                  className=\"flex items-center space-x-1 hover:text-blue-500 transition-colors\"\n                >\n                  <MessageCircle className=\"h-4 w-4\" />\n                  <span>{post.comments_count}</span>\n                </button>\n\n                <button className=\"flex items-center space-x-1 hover:text-green-500 transition-colors\">\n                  <Share2 className=\"h-4 w-4\" />\n                  <span>{post.shares_count}</span>\n                </button>\n\n                <button\n                  onClick={() => handleBookmarkPost(post.id)}\n                  className={`hover:text-yellow-500 transition-colors ${\n                    post.is_bookmarked ? 'text-yellow-500' : ''\n                  }`}\n                >\n                  <Bookmark className={`h-4 w-4 ${post.is_bookmarked ? 'fill-current' : ''}`} />\n                </button>\n              </div>\n            </div>\n\n            {/* Section commentaires */}\n            {showComments === post.id && (\n              <div className=\"border-t pt-3 space-y-3\">\n                {post.comments?.map(comment => (\n                  <div key={comment.id} className=\"flex items-start space-x-2\">\n                    <Avatar className=\"h-6 w-6\">\n                      <AvatarImage src={comment.user.avatar_url} />\n                      <AvatarFallback className=\"text-xs\">{comment.user.name[0]}</AvatarFallback>\n                    </Avatar>\n                    <div className=\"flex-1\">\n                      <div className=\"bg-gray-100 rounded-lg px-3 py-2\">\n                        <p className=\"text-sm font-medium\">{comment.user.name}</p>\n                        <p className=\"text-sm\">{comment.content}</p>\n                      </div>\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        {new Date(comment.created_at).toLocaleTimeString('fr-FR', {\n                          hour: '2-digit',\n                          minute: '2-digit',\n                        })}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n\n                <div className=\"flex items-center space-x-2\">\n                  <Avatar className=\"h-6 w-6\">\n                    <AvatarFallback className=\"text-xs\">\n                      {(\n                        appStoreUser?.first_name?.[0] ||\n                        appStoreUser?.username?.[0] ||\n                        'U'\n                      ).toUpperCase()}\n                    </AvatarFallback>\n                  </Avatar>\n                  <Input\n                    value={newComment}\n                    onChange={e => setNewComment(e.target.value)}\n                    placeholder=\"Ajouter un commentaire...\"\n                    className=\"flex-1\"\n                    onKeyPress={e => {\n                      if (e.key === 'Enter' && newComment.trim()) {\n                        handleAddComment(post.id);\n                      }\n                    }}\n                  />\n                  <Button\n                    onClick={() => handleAddComment(post.id)}\n                    size=\"sm\"\n                    disabled={!newComment.trim()}\n                  >\n                    <Send className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const ChallengeCard = ({ challenge }: { challenge: Challenge }) => {\n    const getDifficultyColor = (difficulty: string) => {\n      switch (difficulty) {\n        case 'easy':\n          return 'bg-green-100 text-green-800';\n        case 'medium':\n          return 'bg-yellow-100 text-yellow-800';\n        case 'hard':\n          return 'bg-orange-100 text-orange-800';\n        case 'expert':\n          return 'bg-red-100 text-red-800';\n        default:\n          return 'bg-gray-100 text-gray-800';\n      }\n    };\n\n    const getPillarIcon = (pillar: string) => {\n      switch (pillar) {\n        case 'workout':\n          return '💪';\n        case 'nutrition':\n          return '🍎';\n        case 'hydration':\n          return '💧';\n        case 'sleep':\n          return '😴';\n        default:\n          return '⭐';\n      }\n    };\n\n    return (\n      <Card className=\"hover:shadow-lg transition-shadow\">\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-start justify-between mb-3\">\n            <div>\n              <h3 className=\"font-semibold text-lg mb-1\">{challenge.title}</h3>\n              <p className=\"text-gray-600 text-sm mb-2\">{challenge.description}</p>\n            </div>\n            <Badge className={getDifficultyColor(challenge.difficulty)}>\n              {challenge.difficulty}\n            </Badge>\n          </div>\n\n          <div className=\"flex items-center space-x-4 text-sm text-gray-500 mb-3\">\n            <span>\n              {getPillarIcon(challenge.pillar)} {challenge.pillar}\n            </span>\n            <span>\n              🎯 {challenge.target_value} {challenge.target_unit}\n            </span>\n            <span>⏱️ {challenge.duration_days} jours</span>\n            <span>🏆 {challenge.reward_points} pts</span>\n          </div>\n\n          <div className=\"mb-3\">\n            <div className=\"flex justify-between text-sm mb-1\">\n              <span>Progression</span>\n              <span>{challenge.progress_percentage}%</span>\n            </div>\n            <Progress value={challenge.progress_percentage} className=\"h-2\" />\n          </div>\n\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2\">\n              <Avatar className=\"h-6 w-6\">\n                <AvatarImage src={challenge.creator.avatar_url} />\n                <AvatarFallback className=\"text-xs\">{challenge.creator.name[0]}</AvatarFallback>\n              </Avatar>\n              <span className=\"text-sm text-gray-600\">par {challenge.creator.name}</span>\n              <Badge variant=\"outline\" className=\"text-xs\">\n                {challenge.participants_count} participants\n              </Badge>\n            </div>\n\n            <Button\n              onClick={() => handleJoinChallenge(challenge.id)}\n              variant={challenge.is_participating ? 'outline' : 'default'}\n              size=\"sm\"\n            >\n              {challenge.is_participating ? 'Quitter' : 'Rejoindre'}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const FriendCard = ({ friend }: { friend: Friend }) => (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"relative\">\n              <Avatar>\n                <AvatarImage src={friend.avatar_url} />\n                <AvatarFallback>{friend.name[0]}</AvatarFallback>\n              </Avatar>\n              {friend.is_online && (\n                <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 border-2 border-white rounded-full\"></div>\n              )}\n            </div>\n            <div>\n              <h4 className=\"font-semibold\">{friend.name}</h4>\n              <p className=\"text-sm text-gray-600\">@{friend.username}</p>\n              <div className=\"flex items-center space-x-2 text-xs text-gray-500\">\n                <span>\n                  {friend.sport} • Niveau {friend.level}\n                </span>\n                <span>•</span>\n                <span>{friend.mutual_friends} amis communs</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Button onClick={() => handleAddFriend(friend.id)} variant=\"outline\" size=\"sm\">\n              <MessageSquare className=\"h-4 w-4 mr-1\" />\n              Message\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <UniformHeader\n          title=\"Social\"\n          subtitle=\"Chargement...\"\n          showBackButton={true}\n          gradient={true}\n        />\n        <div className=\"p-4 space-y-6 max-w-6xl mx-auto\">\n          {Array.from({ length: 4 }).map((_, i) => (\n            <Skeleton key={i} className=\"h-32 w-full\" />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  const tabs = [\n    { id: 'feed', label: 'Feed', icon: MessageCircle },\n    { id: 'challenges', label: 'Défis', icon: Target },\n    { id: 'leaderboard', label: 'Classement', icon: Trophy },\n    { id: 'friends', label: 'Amis', icon: Users },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <UniformHeader\n        title=\"Social Hub\"\n        subtitle={getPersonalizedMessage}\n        showBackButton={true}\n        gradient={true}\n        rightContent={\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              onClick={() => setShowCreatePost(true)}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-white hover:bg-white/20\"\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Post\n            </Button>\n            <Button\n              onClick={() => setShowCreateChallenge(true)}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-white hover:bg-white/20\"\n            >\n              <Target className=\"h-4 w-4 mr-2\" />\n              Défi\n            </Button>\n          </div>\n        }\n      />\n\n      <div className=\"p-4 space-y-6 max-w-6xl mx-auto\">\n        {/* Stats rapides */}\n        {userStats && (\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <Card className=\"text-center\">\n              <CardContent className=\"p-4\">\n                <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-2\">\n                  <Users size={20} className=\"text-blue-600\" />\n                </div>\n                <div className=\"text-2xl font-bold text-gray-800\">{userStats.friends_count}</div>\n                <div className=\"text-sm text-gray-600\">Amis</div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center\">\n              <CardContent className=\"p-4\">\n                <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-2\">\n                  <Target size={20} className=\"text-green-600\" />\n                </div>\n                <div className=\"text-2xl font-bold text-gray-800\">\n                  {userStats.active_challenges}\n                </div>\n                <div className=\"text-sm text-gray-600\">Défis Actifs</div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center\">\n              <CardContent className=\"p-4\">\n                <div className=\"w-10 h-10 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-2\">\n                  <Trophy size={20} className=\"text-yellow-600\" />\n                </div>\n                <div className=\"text-2xl font-bold text-gray-800\">#{userStats.global_rank}</div>\n                <div className=\"text-sm text-gray-600\">Rang Global</div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center\">\n              <CardContent className=\"p-4\">\n                <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-2\">\n                  <Star size={20} className=\"text-purple-600\" />\n                </div>\n                <div className=\"text-2xl font-bold text-gray-800\">\n                  {userStats.total_points.toLocaleString()}\n                </div>\n                <div className=\"text-sm text-gray-600\">Points</div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {/* Navigation par onglets */}\n        <Card>\n          <CardContent className=\"p-2\">\n            <Tabs\n              value={activeTab}\n              onValueChange={(value: any) => setActiveTab(value)}\n              className=\"space-y-6\"\n            >\n              <TabsList className=\"grid w-full grid-cols-4\">\n                {tabs.map(tab => {\n                  const TabIcon = tab.icon;\n                  return (\n                    <TabsTrigger\n                      key={tab.id}\n                      value={tab.id}\n                      className=\"flex items-center space-x-2\"\n                    >\n                      <TabIcon className=\"h-4 w-4\" />\n                      <span className=\"hidden sm:inline\">{tab.label}</span>\n                    </TabsTrigger>\n                  );\n                })}\n              </TabsList>\n\n              {/* Feed Tab */}\n              <TabsContent value=\"feed\" className=\"space-y-6\">\n                <div className=\"flex justify-between items-center\">\n                  <h2 className=\"text-lg font-semibold\">Feed Communauté</h2>\n                  <Select value={feedFilter} onValueChange={(value: any) => setFeedFilter(value)}>\n                    <SelectTrigger className=\"w-40\">\n                      <Filter className=\"h-4 w-4 mr-2\" />\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">Tout</SelectItem>\n                      <SelectItem value=\"friends\">Amis</SelectItem>\n                      <SelectItem value=\"sport\">{appStoreUser?.sport}</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {postsLoading ? (\n                  <div className=\"space-y-4\">\n                    {Array.from({ length: 3 }).map((_, i) => (\n                      <Skeleton key={i} className=\"h-32 w-full\" />\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {posts.map(post => (\n                      <PostCard key={post.id} post={post} />\n                    ))}\n                  </div>\n                )}\n              </TabsContent>\n\n              {/* Challenges Tab */}\n              <TabsContent value=\"challenges\" className=\"space-y-6\">\n                <div className=\"flex justify-between items-center\">\n                  <h2 className=\"text-lg font-semibold\">Défis Communauté</h2>\n                  <Select\n                    value={challengeFilter}\n                    onValueChange={(value: any) => setChallengeFilter(value)}\n                  >\n                    <SelectTrigger className=\"w-40\">\n                      <Filter className=\"h-4 w-4 mr-2\" />\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">Tous</SelectItem>\n                      <SelectItem value=\"active\">Actifs</SelectItem>\n                      <SelectItem value=\"available\">Disponibles</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                {challengesLoading ? (\n                  <div className=\"space-y-4\">\n                    {Array.from({ length: 3 }).map((_, i) => (\n                      <Skeleton key={i} className=\"h-40 w-full\" />\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {challenges.map(challenge => (\n                      <ChallengeCard key={challenge.id} challenge={challenge} />\n                    ))}\n                  </div>\n                )}\n              </TabsContent>\n\n              {/* Leaderboard Tab */}\n              <TabsContent value=\"leaderboard\" className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center space-x-2\">\n                      <Trophy className=\"h-5 w-5\" />\n                      <span>Classement {appStoreUser?.sport}</span>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      {/* Top 3 Podium */}\n                      <div className=\"grid grid-cols-3 gap-4 text-center\">\n                        <div className=\"p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\n                          <Crown className=\"h-8 w-8 mx-auto text-yellow-600 mb-2\" />\n                          <div className=\"font-bold\">Marie D.</div>\n                          <div className=\"text-sm text-gray-600\">3,450 pts</div>\n                        </div>\n                        <div className=\"p-4 bg-gray-50 rounded-lg border border-gray-200\">\n                          <Medal className=\"h-8 w-8 mx-auto text-gray-600 mb-2\" />\n                          <div className=\"font-bold\">Thomas M.</div>\n                          <div className=\"text-sm text-gray-600\">3,120 pts</div>\n                        </div>\n                        <div className=\"p-4 bg-orange-50 rounded-lg border border-orange-200\">\n                          <Award className=\"h-8 w-8 mx-auto text-orange-600 mb-2\" />\n                          <div className=\"font-bold\">Sophie L.</div>\n                          <div className=\"text-sm text-gray-600\">2,890 pts</div>\n                        </div>\n                      </div>\n\n                      {/* Votre position */}\n                      <div className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-8 h-8 bg-blue-600 text-white rounded-full flex items-center justify-center font-bold\">\n                              {userStats?.global_rank}\n                            </div>\n                            <div>\n                              <div className=\"font-semibold\">Votre position</div>\n                              <div className=\"text-sm text-gray-600\">\n                                {userStats?.total_points} points\n                              </div>\n                            </div>\n                          </div>\n                          <Badge className=\"bg-blue-600\">{appStoreUser?.sport}</Badge>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              {/* Friends Tab */}\n              <TabsContent value=\"friends\" className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <span className=\"flex items-center space-x-2\">\n                        <Users className=\"h-5 w-5\" />\n                        <span>Mes Amis ({userStats?.friends_count})</span>\n                      </span>\n                      <div className=\"flex items-center space-x-2\">\n                        <Input\n                          value={friendsSearch}\n                          onChange={e => setFriendsSearch(e.target.value)}\n                          placeholder=\"Rechercher un ami...\"\n                          className=\"w-48\"\n                        />\n                        <Button size=\"sm\">\n                          <UserPlus className=\"h-4 w-4 mr-2\" />\n                          Inviter\n                        </Button>\n                      </div>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      {filteredFriends.length > 0 ? (\n                        filteredFriends.map(friend => (\n                          <FriendCard key={friend.id} friend={friend} />\n                        ))\n                      ) : (\n                        <div className=\"text-center py-8 text-gray-500\">\n                          <Users className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n                          <p>\n                            {friendsSearch\n                              ? 'Aucun ami trouvé'\n                              : \"Connectez-vous avec d'autres athlètes\"}\n                          </p>\n                          <p className=\"text-sm\">\n                            {friendsSearch\n                              ? 'Essayez un autre terme de recherche'\n                              : `Trouvez des partenaires d'entraînement ${appStoreUser?.sport}`}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </Tabs>\n          </CardContent>\n        </Card>\n\n        {/* IA Intelligence */}\n        <AIIntelligence\n          pillar=\"social\"\n          showPredictions={true}\n          showCoaching={true}\n          showRecommendations={true}\n        />\n      </div>\n\n      {/* Modals */}\n      <CreatePostModal />\n      <CreateChallengeModal />\n    </div>\n  );\n};\n\nexport default Social;\n"],"names":["__iconNode","Bookmark","createLucideIcon","Crown","Funnel","Image","MapPin","Medal","MessageCircle","MessageSquare","Send","Star","UserPlus","useIsHydrated","useSyncExternalStore","subscribe","AVATAR_NAME","createAvatarContext","createAvatarScope","createContextScope","AvatarProvider","useAvatarContext","Avatar","React.forwardRef","props","forwardedRef","__scopeAvatar","avatarProps","imageLoadingStatus","setImageLoadingStatus","React.useState","jsx","Primitive","IMAGE_NAME","AvatarImage","src","onLoadingStatusChange","imageProps","context","useImageLoadingStatus","handleLoadingStatusChange","useCallbackRef","status","useLayoutEffect","FALLBACK_NAME","AvatarFallback","delayMs","fallbackProps","canRender","setCanRender","React.useEffect","timerId","resolveLoadingStatus","image","referrerPolicy","crossOrigin","isHydrated","imageRef","React.useRef","loadingStatus","setLoadingStatus","updateStatus","handleLoad","handleError","Root","Fallback","className","ref","AvatarPrimitive.Root","cn","AvatarPrimitive.Image","AvatarPrimitive.Fallback","Social","appStoreUser","appStore","toast","useToast","activeTab","setActiveTab","useState","posts","setPosts","challenges","setChallenges","friends","setFriends","userStats","setUserStats","loading","setLoading","postsLoading","setPostsLoading","challengesLoading","setChallengesLoading","showCreatePost","setShowCreatePost","showCreateChallenge","setShowCreateChallenge","showComments","setShowComments","feedFilter","setFeedFilter","challengeFilter","setChallengeFilter","friendsSearch","setFriendsSearch","newComment","setNewComment","newPost","setNewPost","newChallenge","setNewChallenge","loadUserStats","useCallback","loadPosts","mockPosts","loadChallenges","mockChallenges","loadFriends","mockFriends","handleCreatePost","resolve","newPostData","prev","handleCreateChallenge","challengeData","handleLikePost","postId","post","handleBookmarkPost","p","handleDeletePost","handleAddComment","comment","handleJoinChallenge","challengeId","challenge","c","updatedChallenge","handleAddFriend","_friendId","getPersonalizedMessage","useMemo","userName","filteredFriends","friend","useEffect","CreatePostModal","Dialog","jsxs","DialogContent","DialogHeader","DialogTitle","_a","_b","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","Textarea","e","Button","CreateChallengeModal","Input","Target","PostCard","Card","CardContent","Badge","Trash2","achievement","index","Heart","Share2","_c","ChallengeCard","getDifficultyColor","difficulty","getPillarIcon","pillar","Progress","FriendCard","UniformHeader","_","i","Skeleton","tabs","Trophy","Users","Plus","Tabs","TabsList","tab","TabIcon","TabsTrigger","TabsContent","Filter","CardHeader","CardTitle","Award","AIIntelligence"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}