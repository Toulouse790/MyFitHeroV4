{"version":3,"file":"SettingsPage-2dzb-c-E.js","sources":["../../node_modules/lucide-react/dist/esm/icons/globe.js","../../node_modules/lucide-react/dist/esm/icons/palette.js","../../node_modules/lucide-react/dist/esm/icons/smartphone.js","../../src/features/wearables/hooks/useWearableSync.ts","../../src/lib/analytics.ts","../../src/components/ui/label.tsx","../../node_modules/@radix-ui/react-switch/dist/index.mjs","../../src/components/ui/switch.tsx","../../src/components/ui/separator.tsx","../../src/features/profile/pages/SettingsPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20\", key: \"13o1zl\" }],\n  [\"path\", { d: \"M2 12h20\", key: \"9i4pu4\" }]\n];\nconst Globe = createLucideIcon(\"globe\", __iconNode);\n\nexport { __iconNode, Globe as default };\n//# sourceMappingURL=globe.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M12 22a1 1 0 0 1 0-20 10 9 0 0 1 10 9 5 5 0 0 1-5 5h-2.25a1.75 1.75 0 0 0-1.4 2.8l.3.4a1.75 1.75 0 0 1-1.4 2.8z\",\n      key: \"e79jfc\"\n    }\n  ],\n  [\"circle\", { cx: \"13.5\", cy: \"6.5\", r: \".5\", fill: \"currentColor\", key: \"1okk4w\" }],\n  [\"circle\", { cx: \"17.5\", cy: \"10.5\", r: \".5\", fill: \"currentColor\", key: \"f64h9f\" }],\n  [\"circle\", { cx: \"6.5\", cy: \"12.5\", r: \".5\", fill: \"currentColor\", key: \"qy21gx\" }],\n  [\"circle\", { cx: \"8.5\", cy: \"7.5\", r: \".5\", fill: \"currentColor\", key: \"fotxhn\" }]\n];\nconst Palette = createLucideIcon(\"palette\", __iconNode);\n\nexport { __iconNode, Palette as default };\n//# sourceMappingURL=palette.js.map\n","/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"14\", height: \"20\", x: \"5\", y: \"2\", rx: \"2\", ry: \"2\", key: \"1yt0o3\" }],\n  [\"path\", { d: \"M12 18h.01\", key: \"mhygvu\" }]\n];\nconst Smartphone = createLucideIcon(\"smartphone\", __iconNode);\n\nexport { __iconNode, Smartphone as default };\n//# sourceMappingURL=smartphone.js.map\n","import { useState, useCallback } from 'react';\nimport { useToast } from '@/shared/hooks/use-toast';\n\nexport interface SleepSession {\n  id: string;\n  startTime: Date;\n  endTime: Date;\n  duration: number; // en minutes\n  quality: 'poor' | 'fair' | 'good' | 'excellent';\n  deepSleepDuration?: number;\n  remSleepDuration?: number;\n  awakenings?: number;\n}\n\nexport interface WearableData {\n  steps: number;\n  heartRate: number[]; // Array of heart rate readings\n  sleepSessions: SleepSession[];\n  lastSync: Date;\n  caloriesBurned?: number;\n  distance?: number; // en mètres\n  activeMinutes?: number;\n}\n\nexport interface HealthKitData {\n  steps: number;\n  heartRate: number[];\n  sleepData: {\n    bedTime: Date;\n    wakeTime: Date;\n    sleepDuration: number;\n    sleepQuality: number; // 0-1 scale\n  }[];\n  workouts: {\n    type: string;\n    startTime: Date;\n    endTime: Date;\n    calories: number;\n    distance?: number;\n  }[];\n}\n\nexport interface GoogleFitData {\n  steps: number;\n  heartRate: number[];\n  sleepSessions: {\n    startTime: Date;\n    endTime: Date;\n    sleepType: string;\n  }[];\n  activities: {\n    type: string;\n    startTime: Date;\n    endTime: Date;\n    calories: number;\n  }[];\n}\n\nexport const useWearableSync = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [lastSyncTime, setLastSyncTime] = useState<Date | null>(null);\n  const [syncError, setSyncError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  // Vérifier si Apple Health est disponible\n  const isAppleHealthAvailable = useCallback((): boolean => {\n    // Dans un environnement réel, cela vérifierait la disponibilité d'Apple Health\n    // @ts-expect-error - Accessing webkit API\n    return (\n      typeof window !== 'undefined' && window.webkit && window.webkit.messageHandlers?.healthKit\n    );\n  }, []);\n\n  // Vérifier si Google Fit est disponible\n  const isGoogleFitAvailable = useCallback((): boolean => {\n    // Dans un environnement réel, cela vérifierait la disponibilité de Google Fit\n    // @ts-expect-error - Accessing gapi client\n    return typeof window !== 'undefined' && window.gapi && window.gapi.client?.fitness;\n  }, []);\n\n  // Synchroniser avec Apple Health\n  const syncAppleHealth = useCallback(async (): Promise<WearableData | null> => {\n    if (!isAppleHealthAvailable()) {\n      setSyncError(\"Apple Health n'est pas disponible sur cet appareil\");\n      return null;\n    }\n\n    try {\n      setIsLoading(true);\n      setSyncError(null);\n\n      // Simuler l'appel à Apple Health (dans un vrai projet, cela utiliserait HealthKit)\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Données simulées (dans un vrai projet, cela viendrait d'Apple Health)\n      const mockHealthData: WearableData = {\n        steps: Math.floor(Math.random() * 10000) + 5000,\n        heartRate: Array.from({ length: 10 }, () => Math.floor(Math.random() * 40) + 60),\n        sleepSessions: [\n          {\n            id: '1',\n            startTime: new Date(Date.now() - 8 * 60 * 60 * 1000), // 8h ago\n            endTime: new Date(Date.now() - 30 * 60 * 1000), // 30min ago\n            duration: 450, // 7.5 heures\n            quality: 'good',\n            deepSleepDuration: 120,\n            remSleepDuration: 90,\n            awakenings: 2,\n          },\n        ],\n        lastSync: new Date(),\n        caloriesBurned: Math.floor(Math.random() * 500) + 200,\n        distance: Math.floor(Math.random() * 5000) + 2000,\n        activeMinutes: Math.floor(Math.random() * 120) + 30,\n      };\n\n      setLastSyncTime(new Date());\n\n      toast({\n        title: 'Synchronisation réussie',\n        description: 'Données Apple Health synchronisées avec succès',\n        variant: 'default',\n      });\n\n      return mockHealthData;\n    } catch {\n      const errorMessage =\n        error instanceof Error ? error.message : 'Erreur de synchronisation Apple Health';\n      setSyncError(errorMessage);\n\n      toast({\n        title: 'Erreur de synchronisation',\n        description: errorMessage,\n        variant: 'destructive',\n      });\n\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isAppleHealthAvailable, toast]);\n\n  // Synchroniser avec Google Fit\n  const syncGoogleFit = useCallback(async (): Promise<WearableData | null> => {\n    if (!isGoogleFitAvailable()) {\n      setSyncError(\"Google Fit n'est pas disponible sur cet appareil\");\n      return null;\n    }\n\n    try {\n      setIsLoading(true);\n      setSyncError(null);\n\n      // Simuler l'appel à Google Fit (dans un vrai projet, cela utiliserait l'API Google Fit)\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Données simulées (dans un vrai projet, cela viendrait de Google Fit)\n      const mockFitData: WearableData = {\n        steps: Math.floor(Math.random() * 12000) + 4000,\n        heartRate: Array.from({ length: 12 }, () => Math.floor(Math.random() * 45) + 55),\n        sleepSessions: [\n          {\n            id: '2',\n            startTime: new Date(Date.now() - 9 * 60 * 60 * 1000), // 9h ago\n            endTime: new Date(Date.now() - 60 * 60 * 1000), // 1h ago\n            duration: 480, // 8 heures\n            quality: 'excellent',\n            deepSleepDuration: 150,\n            remSleepDuration: 110,\n            awakenings: 1,\n          },\n        ],\n        lastSync: new Date(),\n        caloriesBurned: Math.floor(Math.random() * 600) + 300,\n        distance: Math.floor(Math.random() * 6000) + 3000,\n        activeMinutes: Math.floor(Math.random() * 150) + 45,\n      };\n\n      setLastSyncTime(new Date());\n\n      toast({\n        title: 'Synchronisation réussie',\n        description: 'Données Google Fit synchronisées avec succès',\n        variant: 'default',\n      });\n\n      return mockFitData;\n    } catch {\n      const errorMessage =\n        error instanceof Error ? error.message : 'Erreur de synchronisation Google Fit';\n      setSyncError(errorMessage);\n\n      toast({\n        title: 'Erreur de synchronisation',\n        description: errorMessage,\n        variant: 'destructive',\n      });\n\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isGoogleFitAvailable, toast]);\n\n  // Synchroniser automatiquement les deux sources\n  const syncAll = useCallback(async (): Promise<WearableData | null> => {\n    const results = await Promise.allSettled([syncAppleHealth(), syncGoogleFit()]);\n\n    const appleResult = results[0];\n    const googleResult = results[1];\n\n    // Combiner les données si les deux synchronisations réussissent\n    if (appleResult.status === 'fulfilled' && googleResult.status === 'fulfilled') {\n      const appleData = appleResult.value;\n      const googleData = googleResult.value;\n\n      if (appleData && googleData) {\n        // Fusionner les données (prioriser les données les plus récentes)\n        const combinedData: WearableData = {\n          steps: Math.max(appleData.steps, googleData.steps),\n          heartRate: [...appleData.heartRate, ...googleData.heartRate],\n          sleepSessions: [...appleData.sleepSessions, ...googleData.sleepSessions],\n          lastSync: new Date(),\n          caloriesBurned: Math.max(appleData.caloriesBurned || 0, googleData.caloriesBurned || 0),\n          distance: Math.max(appleData.distance || 0, googleData.distance || 0),\n          activeMinutes: Math.max(appleData.activeMinutes || 0, googleData.activeMinutes || 0),\n        };\n\n        return combinedData;\n      }\n    }\n\n    // Retourner les données disponibles\n    if (appleResult.status === 'fulfilled' && appleResult.value) {\n      return appleResult.value;\n    }\n    if (googleResult.status === 'fulfilled' && googleResult.value) {\n      return googleResult.value;\n    }\n\n    return null;\n  }, [syncAppleHealth, syncGoogleFit]);\n\n  // Programmer une synchronisation automatique\n  const scheduleSync = useCallback(\n    (intervalMinutes: number = 30) => {\n      const interval = setInterval(\n        async () => {\n          try {\n            await syncAll();\n          } catch {\n            console.error('Erreur lors de la synchronisation programmée:', error);\n          }\n        },\n        intervalMinutes * 60 * 1000\n      );\n\n      return () => clearInterval(interval);\n    },\n    [syncAll]\n  );\n\n  // Obtenir les données mises en cache\n  const getCachedData = useCallback((): WearableData | null => {\n    try {\n      const cachedData = localStorage.getItem('wearableData');\n      if (cachedData) {\n        const parsed = JSON.parse(cachedData);\n        return {\n          ...parsed,\n          lastSync: new Date(parsed.lastSync),\n          sleepSessions: parsed.sleepSessions.map((session: any) => ({\n            ...session,\n            startTime: new Date(session.startTime),\n            endTime: new Date(session.endTime),\n          })),\n        };\n      }\n    } catch {\n      console.error('Erreur lors de la lecture des données mises en cache:', error);\n    }\n    return null;\n  }, []);\n\n  // Sauvegarder les données en cache\n  const cacheData = useCallback((data: WearableData) => {\n    try {\n      localStorage.setItem('wearableData', JSON.stringify(data));\n    } catch {\n      console.error('Erreur lors de la sauvegarde des données en cache:', error);\n    }\n  }, []);\n\n  return {\n    isLoading,\n    lastSyncTime,\n    syncError,\n    isAppleHealthAvailable: isAppleHealthAvailable(),\n    isGoogleFitAvailable: isGoogleFitAvailable(),\n    syncAppleHealth,\n    syncGoogleFit,\n    syncAll,\n    scheduleSync,\n    getCachedData,\n    cacheData,\n  };\n};\n","// client/src/lib/analytics.ts\nimport { supabase } from './supabase';\n\nexport class AnalyticsService {\n  // 📊 Analytics d'engagement utilisateur\n  static async updateLastLogin(userId: string) {\n    const { error } = await supabase\n      .from('user_profiles')\n      .update({\n        last_login: new Date().toISOString(),\n      })\n      .eq('id', userId);\n\n    if (error) console.error('Erreur mise à jour login:', error);\n  }\n\n  // 🎯 Filtrage recommandations IA par confiance\n  static async getHighConfidenceRecommendations(userId: string, minConfidence = 0.8) {\n    const { data, error } = await supabase\n      .from('ai_recommendations')\n      .select('*')\n      .eq('user_id', userId)\n      .gte('confidence_score', minConfidence)\n      .eq('is_applied', false)\n      .order('confidence_score', { ascending: false });\n\n    return { data, error };\n  }\n\n  // 🏋️ Templates de workout populaires\n  static async getPopularWorkoutTemplates(limit = 10) {\n    const { data, error } = await supabase\n      .from('workouts')\n      .select('*, user_profiles(username)')\n      .eq('is_template', true)\n      .order('created_at', { ascending: false })\n      .limit(limit);\n\n    return { data, error };\n  }\n\n  // 📱 Scan code-barres pour aliments\n  static async getFoodByBarcode(barcode: string) {\n    const { data, error } = await supabase\n      .from('foods_library')\n      .select('*')\n      .eq('barcode', barcode)\n      .single();\n\n    return { data, error };\n  }\n\n  // 😴 Analytics sommeil avec données objets connectés\n  static async analyzeSleepPatterns(userId: string, days = 30) {\n    const { data, error } = await supabase\n      .from('sleep_sessions')\n      .select('*')\n      .eq('user_id', userId)\n      .gte('sleep_date', new Date(Date.now() - days * 24 * 60 * 60 * 1000).toISOString())\n      .order('sleep_date', { ascending: false });\n\n    if (data) {\n      // Analyse des patterns avec sleep_stage_data\n      const patternsAnalysis = data.map(session => ({\n        date: session.sleep_date,\n        quality: session.quality_rating,\n        duration: session.duration_minutes,\n        stages: session.sleep_stage_data,\n        // Analyse des phases de sommeil\n        deepSleepPercentage:\n          (session.sleep_stage_data?.deep_sleep_minutes / session.duration_minutes) * 100,\n      }));\n\n      return { data: patternsAnalysis, error: null };\n    }\n\n    return { data: null, error };\n  }\n\n  // 💧 Analytics hydratation par contexte\n  static async getHydrationPatterns(userId: string, days = 7) {\n    const { data, error } = await supabase\n      .from('hydration_logs')\n      .select('*')\n      .eq('user_id', userId)\n      .gte('log_date', new Date(Date.now() - days * 24 * 60 * 60 * 1000).toISOString())\n      .order('logged_at', { ascending: true });\n\n    if (data) {\n      // Groupement par contexte\n      const contextStats = data.reduce(\n        (acc, log) => {\n          const context = log.hydration_context;\n          if (!acc[context]) {\n            acc[context] = { total: 0, count: 0, average: 0 };\n          }\n          acc[context].total += log.amount_ml;\n          acc[context].count += 1;\n          acc[context].average = acc[context].total / acc[context].count;\n          return acc;\n        },\n        {} as Record<string, { total: number; count: number; average: number }>\n      );\n\n      return { data: contextStats, error: null };\n    }\n\n    return { data: null, error };\n  }\n\n  // 🎯 Mise à jour progression objectifs\n  static async updateGoalProgress(goalId: string, newValue: number) {\n    // Récupérer l'objectif actuel\n    const { data: goal, error: fetchError } = await supabase\n      .from('user_goals')\n      .select('*')\n      .eq('id', goalId)\n      .single();\n\n    if (fetchError || !goal) return { error: fetchError };\n\n    // Préparer l'historique\n    const currentHistory = (goal.progress_history as any[]) || [];\n    const newHistoryEntry = {\n      date: new Date().toISOString(),\n      value: newValue,\n      percentage: (newValue / goal.target_value) * 100,\n    };\n\n    const updatedHistory = [...currentHistory, newHistoryEntry];\n\n    // Mettre à jour l'objectif\n    const { error } = await supabase\n      .from('user_goals')\n      .update({\n        current_value: newValue,\n        progress_history: updatedHistory,\n        // Marquer comme atteint si nécessaire\n        achieved_at: newValue >= goal.target_value ? new Date().toISOString() : null,\n      })\n      .eq('id', goalId);\n\n    return { error };\n  }\n\n  // 💰 Vérification statut premium\n  static async checkPremiumAccess(userId: string) {\n    const { data, error } = await supabase\n      .from('user_profiles')\n      .select('subscription_status')\n      .eq('id', userId)\n      .single();\n\n    if (error) return { hasPremium: false, status: 'free' };\n\n    const isPremium = ['premium', 'pro', 'enterprise'].includes(data.subscription_status);\n    return { hasPremium: isPremium, status: data.subscription_status };\n  }\n\n  // 📸 Upload photo de repas\n  static async uploadMealPhoto(mealId: string, file: File) {\n    // Upload vers Supabase Storage\n    const fileName = `meals/${mealId}/${Date.now()}_${file.name}`;\n    const { error: uploadError } = await supabase.storage\n      .from('meal-photos')\n      .upload(fileName, file);\n\n    if (uploadError) return { error: uploadError };\n\n    // Récupérer l'URL publique\n    const { data: urlData } = supabase.storage.from('meal-photos').getPublicUrl(fileName);\n\n    // Mettre à jour le repas\n    const { error: updateError } = await supabase\n      .from('meals')\n      .update({ meal_photo_url: urlData.publicUrl })\n      .eq('id', mealId);\n\n    return { error: updateError, url: urlData.publicUrl };\n  }\n\n  // 🤖 Création requête IA avec source\n  static async createAIRequest(\n    userId: string,\n    pillarType: string,\n    prompt: string,\n    source: string = 'app',\n    context?: any\n  ) {\n    const { data, error } = await supabase\n      .from('ai_requests')\n      .insert({\n        user_id: userId,\n        pillar_type: pillarType,\n        prompt,\n        source,\n        context,\n        status: 'pending',\n      })\n      .select()\n      .single();\n\n    return { data, error };\n  }\n\n  // 📱 Synchronisation appareils connectés\n  static async saveWearableSteps(userId: string, steps: number, date: Date = new Date()) {\n    const { error } = await supabase.from('wearable_steps').upsert(\n      {\n        user_id: userId,\n        steps,\n        date: date.toISOString().split('T')[0], // Format YYYY-MM-DD\n        synced_at: new Date().toISOString(),\n      },\n      {\n        onConflict: 'user_id, date',\n      }\n    );\n\n    if (error) console.error('Erreur sauvegarde steps:', error);\n    return { error };\n  }\n\n  static async saveHeartRateData(\n    userId: string,\n    heartRateReadings: number[],\n    recordedAt: Date = new Date()\n  ) {\n    const records = heartRateReadings.map(rate => ({\n      user_id: userId,\n      heart_rate: rate,\n      recorded_at: recordedAt.toISOString(),\n      synced_at: new Date().toISOString(),\n    }));\n\n    const { error } = await supabase.from('heart_rate_logs').insert(records);\n\n    if (error) console.error('Erreur sauvegarde heart rate:', error);\n    return { error };\n  }\n\n  static async saveSleepSession(\n    userId: string,\n    sleepData: {\n      startTime: Date;\n      endTime: Date;\n      duration: number;\n      quality: string;\n      deepSleepDuration?: number;\n      remSleepDuration?: number;\n      awakenings?: number;\n    }\n  ) {\n    const { error } = await supabase.from('sleep_sessions').insert({\n      user_id: userId,\n      start_time: sleepData.startTime.toISOString(),\n      end_time: sleepData.endTime.toISOString(),\n      duration_minutes: sleepData.duration,\n      quality_score: sleepData.quality,\n      deep_sleep_minutes: sleepData.deepSleepDuration,\n      rem_sleep_minutes: sleepData.remSleepDuration,\n      awakenings_count: sleepData.awakenings,\n      synced_at: new Date().toISOString(),\n    });\n\n    if (error) console.error('Erreur sauvegarde sleep session:', error);\n    return { error };\n  }\n\n  static async saveWearableWorkout(\n    userId: string,\n    workoutData: {\n      type: string;\n      startTime: Date;\n      endTime: Date;\n      calories: number;\n      distance?: number;\n      source: 'apple_health' | 'google_fit' | 'manual';\n    }\n  ) {\n    const { error } = await supabase.from('wearable_workouts').insert({\n      user_id: userId,\n      workout_type: workoutData.type,\n      start_time: workoutData.startTime.toISOString(),\n      end_time: workoutData.endTime.toISOString(),\n      calories_burned: workoutData.calories,\n      distance_meters: workoutData.distance,\n      data_source: workoutData.source,\n      synced_at: new Date().toISOString(),\n    });\n\n    if (error) console.error('Erreur sauvegarde wearable workout:', error);\n    return { error };\n  }\n\n  // 📊 Récupération des données wearables\n  static async getWearableSteps(userId: string, startDate: Date, endDate: Date) {\n    const { data, error } = await supabase\n      .from('wearable_steps')\n      .select('*')\n      .eq('user_id', userId)\n      .gte('date', startDate.toISOString().split('T')[0])\n      .lte('date', endDate.toISOString().split('T')[0])\n      .order('date', { ascending: true });\n\n    return { data, error };\n  }\n\n  static async getHeartRateData(userId: string, startDate: Date, endDate: Date) {\n    const { data, error } = await supabase\n      .from('heart_rate_logs')\n      .select('*')\n      .eq('user_id', userId)\n      .gte('recorded_at', startDate.toISOString())\n      .lte('recorded_at', endDate.toISOString())\n      .order('recorded_at', { ascending: true });\n\n    return { data, error };\n  }\n\n  static async getSleepSessions(userId: string, startDate: Date, endDate: Date) {\n    const { data, error } = await supabase\n      .from('sleep_sessions')\n      .select('*')\n      .eq('user_id', userId)\n      .gte('start_time', startDate.toISOString())\n      .lte('end_time', endDate.toISOString())\n      .order('start_time', { ascending: true });\n\n    return { data, error };\n  }\n\n  static async getWearableWorkouts(userId: string, startDate: Date, endDate: Date) {\n    const { data, error } = await supabase\n      .from('wearable_workouts')\n      .select('*')\n      .eq('user_id', userId)\n      .gte('start_time', startDate.toISOString())\n      .lte('end_time', endDate.toISOString())\n      .order('start_time', { ascending: true });\n\n    return { data, error };\n  }\n\n  // 📈 Statistiques wearables\n  static async getWearableStats(userId: string, days: number = 7) {\n    const endDate = new Date();\n    const startDate = new Date(endDate.getTime() - days * 24 * 60 * 60 * 1000);\n\n    const [stepsResult, heartRateResult, sleepResult] = await Promise.allSettled([\n      this.getWearableSteps(userId, startDate, endDate),\n      this.getHeartRateData(userId, startDate, endDate),\n      this.getSleepSessions(userId, startDate, endDate),\n    ]);\n\n    const stats = {\n      totalSteps: 0,\n      avgHeartRate: 0,\n      avgSleepDuration: 0,\n      avgSleepQuality: 0,\n      totalWorkouts: 0,\n      lastSync: null as Date | null,\n    };\n\n    // Calculer les statistiques des pas\n    if (stepsResult.status === 'fulfilled' && stepsResult.value.data) {\n      stats.totalSteps = stepsResult.value.data.reduce((sum, record) => sum + record.steps, 0);\n    }\n\n    // Calculer les statistiques de fréquence cardiaque\n    if (heartRateResult.status === 'fulfilled' && heartRateResult.value.data) {\n      const heartRateData = heartRateResult.value.data;\n      if (heartRateData.length > 0) {\n        stats.avgHeartRate =\n          heartRateData.reduce((sum, record) => sum + record.heart_rate, 0) / heartRateData.length;\n      }\n    }\n\n    // Calculer les statistiques de sommeil\n    if (sleepResult.status === 'fulfilled' && sleepResult.value.data) {\n      const sleepData = sleepResult.value.data;\n      if (sleepData.length > 0) {\n        stats.avgSleepDuration =\n          sleepData.reduce((sum, record) => sum + record.duration_minutes, 0) / sleepData.length;\n\n        // Calculer la qualité moyenne du sommeil (conversion text -> number)\n        const qualityScores = sleepData.map(record => {\n          switch (record.quality_score) {\n            case 'excellent':\n              return 4;\n            case 'good':\n              return 3;\n            case 'fair':\n              return 2;\n            case 'poor':\n              return 1;\n            default:\n              return 2;\n          }\n        });\n        stats.avgSleepQuality =\n          qualityScores.reduce((sum, score) => sum + score, 0) / qualityScores.length;\n      }\n    }\n\n    return stats;\n  }\n\n  // ...existing code...\n}\n\n// 🎛️ Hooks React pour utilisation facile\nexport const useAnalytics = () => {\n  return {\n    updateLastLogin: AnalyticsService.updateLastLogin,\n    getHighConfidenceRecommendations: AnalyticsService.getHighConfidenceRecommendations,\n    getPopularWorkoutTemplates: AnalyticsService.getPopularWorkoutTemplates,\n    getFoodByBarcode: AnalyticsService.getFoodByBarcode,\n    analyzeSleepPatterns: AnalyticsService.analyzeSleepPatterns,\n    getHydrationPatterns: AnalyticsService.getHydrationPatterns,\n    updateGoalProgress: AnalyticsService.updateGoalProgress,\n    checkPremiumAccess: AnalyticsService.checkPremiumAccess,\n    uploadMealPhoto: AnalyticsService.uploadMealPhoto,\n    createAIRequest: AnalyticsService.createAIRequest,\n  };\n};\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nexport type LabelProps = React.LabelHTMLAttributes<HTMLLabelElement>\n\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(({ className, ...props }, ref) => (\n  <label\n    ref={ref}\n    className={cn(\n      'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n      className\n    )}\n    {...props}\n  />\n));\nLabel.displayName = 'Label';\n\nexport { Label };\n","\"use client\";\n\n// src/switch.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SWITCH_NAME = \"Switch\";\nvar [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\nvar [SwitchProvider, useSwitchContext] = createSwitchContext(SWITCH_NAME);\nvar Switch = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      form,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    const [checked, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked ?? false,\n      onChange: onCheckedChange,\n      caller: SWITCH_NAME\n    });\n    return /* @__PURE__ */ jsxs(SwitchProvider, { scope: __scopeSwitch, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"switch\",\n          \"aria-checked\": checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...switchProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        SwitchBubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nSwitch.displayName = SWITCH_NAME;\nvar THUMB_NAME = \"SwitchThumb\";\nvar SwitchThumb = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...thumbProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSwitchThumb.displayName = THUMB_NAME;\nvar BUBBLE_INPUT_NAME = \"SwitchBubbleInput\";\nvar SwitchBubbleInput = React.forwardRef(\n  ({\n    __scopeSwitch,\n    control,\n    checked,\n    bubbles = true,\n    ...props\n  }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n    return /* @__PURE__ */ jsx(\n      \"input\",\n      {\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: checked,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0\n        }\n      }\n    );\n  }\n);\nSwitchBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Switch;\nvar Thumb = SwitchThumb;\nexport {\n  Root,\n  Switch,\n  SwitchThumb,\n  Thumb,\n  createSwitchScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\n\nimport { cn } from '@/lib/utils';\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      'peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input',\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        'pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0'\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import * as React from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface SeparatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: 'horizontal' | 'vertical';\n  decorative?: boolean;\n}\n\nconst Separator = React.forwardRef<HTMLDivElement, SeparatorProps>(\n  ({ className, orientation = 'horizontal', decorative = true, ...props }, ref) => (\n    <div\n      ref={ref}\n      role={decorative ? 'none' : 'separator'}\n      aria-orientation={decorative ? undefined : orientation}\n      className={cn(\n        'shrink-0 bg-gray-200',\n        orientation === 'horizontal' ? 'h-[1px] w-full' : 'h-full w-[1px]',\n        className\n      )}\n      {...props}\n    />\n  )\n);\nSeparator.displayName = 'Separator';\n\nexport { Separator };\n","// pages/settings.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation } from 'wouter';\nimport {\n  Settings as SettingsIcon,\n  User,\n  Bell,\n  Shield,\n  Smartphone,\n  Heart,\n  Moon,\n  Activity,\n  Clock,\n  AlertCircle,\n  CheckCircle,\n  RefreshCw,\n  Save,\n  Globe,\n  Palette,\n  ArrowLeft,\n  Trash2,\n  Eye,\n  EyeOff,\n} from 'lucide-react';\nimport { useWearableSync } from '@/features/wearables/hooks/useWearableSync';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport { supabase } from '@/lib/supabase';\nimport { appStore } from '@/store/appStore';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Textarea } from '@/components/ui/textarea';\nimport { UniformHeader } from '@/features/profile/components/UniformHeader';\nimport { AnalyticsService } from '@/lib/analytics';\n\ninterface NotificationSettings {\n  workout_reminders: boolean;\n  hydration_reminders: boolean;\n  meal_reminders: boolean;\n  sleep_reminders: boolean;\n  achievement_alerts: boolean;\n  weekly_summary: boolean;\n  marketing_emails: boolean;\n}\n\ninterface PrivacySettings {\n  profile_public: boolean;\n  share_stats: boolean;\n  allow_friend_requests: boolean;\n  show_activity: boolean;\n}\n\nconst Settings: React.FC = () => {\n  const [location, setLocation] = useLocation();\n  const { toast } = useToast();\n  const { appStoreUser, setAppStoreUser, clearStore } = appStore();\n\n  const {\n    isLoading: wearableLoading,\n    lastSyncTime,\n    syncError,\n    isAppleHealthAvailable,\n    isGoogleFitAvailable,\n    syncAppleHealth,\n    syncGoogleFit,\n    syncAll,\n    scheduleSync,\n    getCachedData,\n    cacheData,\n  } = useWearableSync();\n\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState('profile');\n  const [autoSyncEnabled, setAutoSyncEnabled] = useState(false);\n  const [syncInterval, setSyncInterval] = useState(30);\n  const [lastCachedData, setLastCachedData] = useState<any>(null);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  // Profile settings state\n  const [profileData, setProfileData] = useState({\n    full_name: appStoreUser?.full_name || '',\n    username: appStoreUser?.username || '',\n    email: appStoreUser?.email || '',\n    phone: appStoreUser?.phone || '',\n    bio: appStoreUser?.bio || '',\n    city: appStoreUser?.city || '',\n    country: appStoreUser?.country || '',\n  });\n\n  // Notification settings state\n  const [notifications, setNotifications] = useState<NotificationSettings>({\n    workout_reminders: true,\n    hydration_reminders: true,\n    meal_reminders: true,\n    sleep_reminders: true,\n    achievement_alerts: true,\n    weekly_summary: true,\n    marketing_emails: false,\n  });\n\n  // Privacy settings state\n  const [privacy, setPrivacy] = useState<PrivacySettings>({\n    profile_public: false,\n    share_stats: false,\n    allow_friend_requests: true,\n    show_activity: true,\n  });\n\n  // App preferences\n  const [preferences, setPreferences] = useState({\n    language: 'fr',\n    theme: 'light',\n    units: 'metric',\n    currency: 'EUR',\n  });\n\n  // 🆕 FONCTION DE SUPPRESSION DE COMPTE\n  const handleDeleteAccount = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    // Double confirmation\n    const firstConfirm = window.confirm(\n      \"⚠️ ATTENTION : Vous êtes sur le point de supprimer définitivement votre compte MyFitHero.\\n\\nCette action supprimera :\\n- Votre profil et toutes vos données personnelles\\n- Tout votre historique d'entraînements\\n- Vos statistiques et progressions\\n- Vos données de nutrition et hydratation\\n- Vos connexions sociales\\n\\nÊtes-vous absolument certain de vouloir continuer ?\"\n    );\n\n    if (!firstConfirm) return;\n\n    const secondConfirm = window.confirm(\n      \"🚨 DERNIÈRE CHANCE\\n\\nTapez 'SUPPRIMER' dans la prochaine boîte de dialogue pour confirmer la suppression définitive de votre compte.\"\n    );\n\n    if (!secondConfirm) return;\n\n    const finalConfirmation = window.prompt(\n      'Pour confirmer la suppression définitive, tapez exactement : SUPPRIMER'\n    );\n\n    if (finalConfirmation !== 'SUPPRIMER') {\n      toast({\n        title: 'Suppression annulée',\n        description: 'La suppression de votre compte a été annulée.',\n      });\n      return;\n    }\n\n    setIsDeleting(true);\n\n    try {\n      // 1. Supprimer toutes les données utilisateur dans l'ordre\n      const userId = appStoreUser.id;\n\n      // Supprimer les données liées\n      const tablesToClean = [\n        'user_workouts',\n        'user_nutrition',\n        'user_hydration',\n        'user_sleep',\n        'user_analytics',\n        'user_preferences',\n        'user_social_connections',\n        'user_achievements',\n        'user_wearable_data',\n        'user_profiles',\n      ];\n\n      for (const table of tablesToClean) {\n        const { error } = await supabase.from(table).delete().eq('user_id', userId);\n\n        if (error) {\n          console.warn(`Erreur suppression ${table}:`, error);\n        }\n      }\n\n      // 2. Supprimer le compte Auth Supabase\n      const { error: authError } = await supabase.auth.admin.deleteUser(userId);\n\n      if (authError) {\n        // Si on n'a pas les droits admin, on utilise une RPC\n        const { error: rpcError } = await supabase.rpc('delete_user_account', {\n          user_id: userId,\n        });\n\n        if (rpcError) {\n          throw new Error('Impossible de supprimer le compte: ' + rpcError.message);\n        }\n      }\n\n      // 3. Nettoyer le store local\n      clearStore();\n\n      // 4. Nettoyer le localStorage\n      localStorage.clear();\n      sessionStorage.clear();\n\n      // 5. Analytics de suppression\n      if (typeof window !== 'undefined' && window.gtag) {\n        window.gtag('event', 'account_deleted', {\n          user_id: userId,\n          timestamp: new Date().toISOString(),\n        });\n      }\n\n      // 6. Déconnexion et redirection\n      await supabase.auth.signOut();\n\n      toast({\n        title: 'Compte supprimé',\n        description:\n          'Votre compte MyFitHero a été définitivement supprimé. Nous espérons vous revoir bientôt !',\n        duration: 5000,\n      });\n\n      // Redirection vers page d'adieu\n      setTimeout(() => {\n        setLocation('/goodbye');\n      }, 2000);\n    } catch {\n      console.error('Erreur suppression compte:', error);\n      toast({\n        title: 'Erreur de suppression',\n        description:\n          'Une erreur est survenue lors de la suppression. Contactez le support si le problème persiste.',\n        variant: 'destructive',\n        duration: 8000,\n      });\n    } finally {\n      setIsDeleting(false);\n    }\n  }, [appStoreUser?.id, clearStore, setLocation, toast]);\n\n  // Chargement des préférences\n  const loadSettings = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    try {\n      // Charger les préférences utilisateur\n      const { data: prefs, error } = await supabase\n        .from('user_preferences')\n        .select('*')\n        .eq('user_id', appStoreUser.id)\n        .single();\n\n      if (!error && prefs) {\n        setNotifications(prefs.notifications || notifications);\n        setPrivacy(prefs.privacy || privacy);\n        setPreferences(prefs.app_preferences || preferences);\n      }\n\n      // Charger les données wearables en cache\n      const cached = getCachedData();\n      if (cached) {\n        setLastCachedData(cached);\n      }\n\n      // Charger les préférences de sync\n      const savedAutoSync = localStorage.getItem('autoSyncEnabled');\n      const savedInterval = localStorage.getItem('syncInterval');\n\n      if (savedAutoSync) {\n        setAutoSyncEnabled(JSON.parse(savedAutoSync));\n      }\n      if (savedInterval) {\n        setSyncInterval(parseInt(savedInterval));\n      }\n    } catch {\n      console.error('Erreur chargement paramètres:', error);\n    }\n  }, [appStoreUser?.id, getCachedData, notifications, privacy, preferences]);\n\n  // Sauvegarde profil\n  const handleSaveProfile = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    setLoading(true);\n    try {\n      const { error } = await supabase\n        .from('user_profiles')\n        .update({\n          ...profileData,\n          updated_at: new Date().toISOString(),\n        })\n        .eq('id', appStoreUser.id);\n\n      if (error) throw error;\n\n      setAppStoreUser({ ...appStoreUser, ...profileData });\n\n      toast({\n        title: 'Profil mis à jour',\n        description: 'Vos informations ont été sauvegardées avec succès.',\n      });\n\n      // Analytics\n      if (typeof window !== 'undefined' && window.gtag) {\n        window.gtag('event', 'profile_updated', {\n          user_id: appStoreUser.id,\n          section: 'settings',\n        });\n      }\n    } catch {\n      console.error('Erreur sauvegarde profil:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de sauvegarder le profil.',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [appStoreUser, profileData, setAppStoreUser, toast]);\n\n  // Sauvegarde notifications\n  const handleSaveNotifications = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    setLoading(true);\n    try {\n      const { error } = await supabase.from('user_preferences').upsert(\n        {\n          user_id: appStoreUser.id,\n          notifications,\n          updated_at: new Date().toISOString(),\n        },\n        {\n          onConflict: 'user_id',\n          ignoreDuplicates: false,\n        }\n      );\n\n      if (error) throw error;\n\n      toast({\n        title: 'Notifications mises à jour',\n        description: 'Vos préférences de notification ont été sauvegardées.',\n      });\n    } catch {\n      console.error('Erreur sauvegarde notifications:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de sauvegarder les notifications.',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [appStoreUser?.id, notifications, toast]);\n\n  // Sauvegarde des préférences\n  const handleSavePreferences = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    setLoading(true);\n    try {\n      const { error } = await supabase.from('user_preferences').upsert(\n        {\n          user_id: appStoreUser.id,\n          app_preferences: preferences,\n          updated_at: new Date().toISOString(),\n        },\n        {\n          onConflict: 'user_id',\n          ignoreDuplicates: false,\n        }\n      );\n\n      if (error) throw error;\n\n      toast({\n        title: 'Préférences mises à jour',\n        description: \"Vos préférences d'application ont été sauvegardées.\",\n      });\n    } catch {\n      console.error('Erreur sauvegarde préférences:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de sauvegarder les préférences.',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [appStoreUser?.id, preferences, toast]);\n\n  // Sauvegarde de la confidentialité\n  const handleSavePrivacy = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    setLoading(true);\n    try {\n      const { error } = await supabase.from('user_preferences').upsert(\n        {\n          user_id: appStoreUser.id,\n          privacy,\n          updated_at: new Date().toISOString(),\n        },\n        {\n          onConflict: 'user_id',\n          ignoreDuplicates: false,\n        }\n      );\n\n      if (error) throw error;\n\n      toast({\n        title: 'Confidentialité mise à jour',\n        description: 'Vos paramètres de confidentialité ont été sauvegardés.',\n      });\n    } catch {\n      console.error('Erreur sauvegarde confidentialité:', error);\n      toast({\n        title: 'Erreur',\n        description: 'Impossible de sauvegarder la confidentialité.',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [appStoreUser?.id, privacy, toast]);\n\n  // Synchronisation wearables\n  const handleAppleHealthSync = useCallback(async () => {\n    const data = await syncAppleHealth();\n    if (data && appStoreUser?.id) {\n      cacheData(data);\n      setLastCachedData(data);\n\n      // Sauvegarder dans Supabase\n      if (data.steps) {\n        await AnalyticsService.saveWearableSteps(appStoreUser.id, data.steps);\n      }\n      if (data.heartRate && data.heartRate.length > 0) {\n        await AnalyticsService.saveHeartRateData(appStoreUser.id, data.heartRate);\n      }\n\n      toast({\n        title: 'Apple Health synchronisé',\n        description: 'Vos données ont été mises à jour.',\n      });\n    }\n  }, [syncAppleHealth, cacheData, appStoreUser?.id, toast]);\n\n  const handleGoogleFitSync = useCallback(async () => {\n    const data = await syncGoogleFit();\n    if (data && appStoreUser?.id) {\n      cacheData(data);\n      setLastCachedData(data);\n\n      toast({\n        title: 'Google Fit synchronisé',\n        description: 'Vos données ont été mises à jour.',\n      });\n    }\n  }, [syncGoogleFit, cacheData, appStoreUser?.id, toast]);\n\n  const handleSyncAll = useCallback(async () => {\n    const data = await syncAll();\n    if (data && appStoreUser?.id) {\n      cacheData(data);\n      setLastCachedData(data);\n\n      toast({\n        title: 'Synchronisation complète',\n        description: 'Tous vos appareils ont été synchronisés.',\n      });\n    }\n  }, [syncAll, cacheData, appStoreUser?.id, toast]);\n\n  const toggleAutoSync = useCallback(() => {\n    const newValue = !autoSyncEnabled;\n    setAutoSyncEnabled(newValue);\n    localStorage.setItem('autoSyncEnabled', JSON.stringify(newValue));\n\n    toast({\n      title: newValue ? 'Auto-sync activé' : 'Auto-sync désactivé',\n      description: newValue\n        ? `Synchronisation toutes les ${syncInterval} minutes`\n        : 'Vous pouvez toujours synchroniser manuellement',\n    });\n  }, [autoSyncEnabled, syncInterval, toast]);\n\n  const formatLastSync = useCallback((date: Date | null) => {\n    if (!date) return 'Jamais';\n    const now = new Date();\n    const diffMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));\n\n    if (diffMinutes < 1) return \"À l'instant\";\n    if (diffMinutes < 60) return `Il y a ${diffMinutes} min`;\n    if (diffMinutes < 1440) return `Il y a ${Math.floor(diffMinutes / 60)}h`;\n    return `Il y a ${Math.floor(diffMinutes / 1440)}j`;\n  }, []);\n\n  const getPersonalizedMessage = useCallback(() => {\n    const userName = appStoreUser?.first_name || appStoreUser?.username || 'Champion';\n    return `⚙️ Gérez vos préférences MyFitHero, ${userName}`;\n  }, [appStoreUser]);\n\n  useEffect(() => {\n    loadSettings();\n  }, [loadSettings]);\n\n  // Auto-sync effect\n  useEffect(() => {\n    if (autoSyncEnabled) {\n      const cleanup = scheduleSync(syncInterval);\n      return cleanup;\n    }\n  }, [autoSyncEnabled, syncInterval, scheduleSync]);\n\n  const tabs = [\n    { id: 'profile', label: 'Profil', icon: User },\n    { id: 'notifications', label: 'Notifications', icon: Bell },\n    { id: 'wearables', label: 'Appareils', icon: Smartphone },\n    { id: 'privacy', label: 'Confidentialité', icon: Shield },\n    { id: 'preferences', label: 'Préférences', icon: Palette },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <UniformHeader\n        title=\"Paramètres\"\n        subtitle={getPersonalizedMessage()}\n        showBackButton={true}\n        gradient={true}\n        rightContent={\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setLocation('/profile')}\n            className=\"text-white hover:bg-white/20\"\n          >\n            <User className=\"w-4 h-4 mr-2\" />\n            Profil\n          </Button>\n        }\n      />\n\n      <div className=\"p-4 space-y-6 max-w-4xl mx-auto\">\n        {/* Navigation par onglets */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          <Card>\n            <CardContent className=\"p-2\">\n              <TabsList className=\"grid w-full grid-cols-5\">\n                {tabs.map(tab => {\n                  const TabIcon = tab.icon;\n                  return (\n                    <TabsTrigger\n                      key={tab.id}\n                      value={tab.id}\n                      className=\"flex items-center space-x-2\"\n                    >\n                      <TabIcon className=\"h-4 w-4\" />\n                      <span className=\"hidden sm:inline\">{tab.label}</span>\n                    </TabsTrigger>\n                  );\n                })}\n              </TabsList>\n            </CardContent>\n          </Card>\n\n          {/* Onglet Profil */}\n          <TabsContent value=\"profile\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Informations du profil</CardTitle>\n                <CardDescription>Modifiez vos informations personnelles</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"full_name\">Nom complet</Label>\n                    <Input\n                      id=\"full_name\"\n                      value={profileData.full_name}\n                      onChange={e => setProfileData({ ...profileData, full_name: e.target.value })}\n                      placeholder=\"Votre nom complet\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"username\">Nom d'utilisateur</Label>\n                    <Input\n                      id=\"username\"\n                      value={profileData.username}\n                      onChange={e => setProfileData({ ...profileData, username: e.target.value })}\n                      placeholder=\"Nom d'utilisateur unique\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"email\">Email</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={profileData.email}\n                      onChange={e => setProfileData({ ...profileData, email: e.target.value })}\n                      placeholder=\"votre@email.com\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"phone\">Téléphone</Label>\n                    <Input\n                      id=\"phone\"\n                      type=\"tel\"\n                      value={profileData.phone}\n                      onChange={e => setProfileData({ ...profileData, phone: e.target.value })}\n                      placeholder=\"+33 6 12 34 56 78\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"bio\">Bio</Label>\n                  <Textarea\n                    id=\"bio\"\n                    value={profileData.bio}\n                    onChange={e => setProfileData({ ...profileData, bio: e.target.value })}\n                    placeholder=\"Parlez-nous de vous, vos objectifs...\"\n                    rows={3}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"city\">Ville</Label>\n                    <Input\n                      id=\"city\"\n                      value={profileData.city}\n                      onChange={e => setProfileData({ ...profileData, city: e.target.value })}\n                      placeholder=\"Votre ville\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"country\">Pays</Label>\n                    <Input\n                      id=\"country\"\n                      value={profileData.country}\n                      onChange={e => setProfileData({ ...profileData, country: e.target.value })}\n                      placeholder=\"Votre pays\"\n                    />\n                  </div>\n                </div>\n\n                <Button\n                  onClick={handleSaveProfile}\n                  disabled={loading}\n                  className=\"w-full bg-green-600 hover:bg-green-700\"\n                >\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  {loading ? 'Sauvegarde...' : 'Sauvegarder le profil'}\n                </Button>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Onglet Notifications */}\n          <TabsContent value=\"notifications\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Préférences de notifications</CardTitle>\n                <CardDescription>\n                  Choisissez les notifications que vous souhaitez recevoir\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                {Object.entries(notifications).map(([key, value]) => (\n                  <div\n                    key={key}\n                    className=\"flex items-center justify-between p-4 rounded-lg border\"\n                  >\n                    <div>\n                      <Label htmlFor={key} className=\"font-medium\">\n                        {key === 'workout_reminders' && \"Rappels d'entraînement\"}\n                        {key === 'hydration_reminders' && \"Rappels d'hydratation\"}\n                        {key === 'meal_reminders' && 'Rappels de repas'}\n                        {key === 'sleep_reminders' && 'Rappels de sommeil'}\n                        {key === 'achievement_alerts' && 'Alertes de réussite'}\n                        {key === 'weekly_summary' && 'Résumé hebdomadaire'}\n                        {key === 'marketing_emails' && 'Emails marketing'}\n                      </Label>\n                      <p className=\"text-sm text-gray-600\">\n                        {key === 'workout_reminders' &&\n                          'Recevez des rappels pour vos entraînements programmés'}\n                        {key === 'hydration_reminders' &&\n                          'Restez hydraté avec des rappels réguliers'}\n                        {key === 'meal_reminders' && 'Ne manquez jamais un repas'}\n                        {key === 'sleep_reminders' && 'Notifications pour optimiser votre sommeil'}\n                        {key === 'achievement_alerts' &&\n                          'Célébrez vos réussites et objectifs atteints'}\n                        {key === 'weekly_summary' &&\n                          'Recevez votre résumé de progression hebdomadaire'}\n                        {key === 'marketing_emails' &&\n                          'Nouvelles fonctionnalités et offres spéciales'}\n                      </p>\n                    </div>\n                    <Switch\n                      id={key}\n                      checked={value}\n                      onCheckedChange={checked =>\n                        setNotifications({ ...notifications, [key]: checked })\n                      }\n                    />\n                  </div>\n                ))}\n\n                <Button\n                  onClick={handleSaveNotifications}\n                  disabled={loading}\n                  className=\"w-full bg-blue-600 hover:bg-blue-700\"\n                >\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  {loading ? 'Sauvegarde...' : 'Sauvegarder les notifications'}\n                </Button>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Onglet Wearables */}\n          <TabsContent value=\"wearables\">\n            <div className=\"space-y-6\">\n              {/* Statut de synchronisation */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Smartphone className=\"mr-2\" size={20} />\n                    Appareils connectés\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {/* Dernière sync */}\n                  <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Clock className=\"text-gray-500\" size={16} />\n                      <div>\n                        <p className=\"text-sm font-medium\">Dernière synchronisation</p>\n                        <p className=\"text-xs text-gray-500\">{formatLastSync(lastSyncTime)}</p>\n                      </div>\n                    </div>\n                    <Badge variant={lastSyncTime ? 'default' : 'secondary'}>\n                      {lastSyncTime ? 'Synchronisé' : 'Jamais synchronisé'}\n                    </Badge>\n                  </div>\n\n                  {/* Erreur de sync */}\n                  {syncError && (\n                    <div className=\"flex items-center space-x-3 p-4 bg-red-50 border border-red-200 rounded-lg\">\n                      <AlertCircle className=\"text-red-500\" size={16} />\n                      <div>\n                        <p className=\"text-sm font-medium text-red-800\">\n                          Erreur de synchronisation\n                        </p>\n                        <p className=\"text-xs text-red-600\">{syncError}</p>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Boutons de sync */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <Button\n                      onClick={handleAppleHealthSync}\n                      disabled={!isAppleHealthAvailable || wearableLoading}\n                      variant={isAppleHealthAvailable ? 'default' : 'outline'}\n                      className=\"flex items-center space-x-2\"\n                    >\n                      <Heart className=\"text-red-500\" size={16} />\n                      <span>Apple Health</span>\n                      {wearableLoading && <RefreshCw className=\"animate-spin\" size={14} />}\n                    </Button>\n\n                    <Button\n                      onClick={handleGoogleFitSync}\n                      disabled={!isGoogleFitAvailable || wearableLoading}\n                      variant={isGoogleFitAvailable ? 'default' : 'outline'}\n                      className=\"flex items-center space-x-2\"\n                    >\n                      <Activity className=\"text-green-500\" size={16} />\n                      <span>Google Fit</span>\n                      {wearableLoading && <RefreshCw className=\"animate-spin\" size={14} />}\n                    </Button>\n\n                    <Button\n                      onClick={handleSyncAll}\n                      disabled={\n                        (!isAppleHealthAvailable && !isGoogleFitAvailable) || wearableLoading\n                      }\n                      className=\"flex items-center space-x-2 bg-purple-600 hover:bg-purple-700\"\n                    >\n                      <RefreshCw className={wearableLoading ? 'animate-spin' : ''} size={16} />\n                      <span>Tout synchroniser</span>\n                    </Button>\n                  </div>\n\n                  {/* Paramètres de sync automatique */}\n                  <Separator />\n\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <Label className=\"font-medium\">Synchronisation automatique</Label>\n                        <p className=\"text-sm text-gray-600\">\n                          Synchroniser automatiquement vos appareils\n                        </p>\n                      </div>\n                      <Switch checked={autoSyncEnabled} onCheckedChange={toggleAutoSync} />\n                    </div>\n\n                    {autoSyncEnabled && (\n                      <div>\n                        <Label className=\"text-sm\">Intervalle (minutes)</Label>\n                        <div className=\"flex space-x-2 mt-2\">\n                          {[15, 30, 60, 120].map(interval => (\n                            <Button\n                              key={interval}\n                              variant={syncInterval === interval ? 'default' : 'outline'}\n                              size=\"sm\"\n                              onClick={() => setSyncInterval(interval)}\n                            >\n                              {interval}min\n                            </Button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Données en cache */}\n                  {lastCachedData && (\n                    <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n                      <h4 className=\"font-medium text-blue-900 mb-2\">\n                        Dernières données synchronisées\n                      </h4>\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                        <div>\n                          <p className=\"text-blue-700\">\n                            Pas: {lastCachedData.steps?.toLocaleString() || 0}\n                          </p>\n                        </div>\n                        <div>\n                          <p className=\"text-blue-700\">\n                            Calories: {lastCachedData.caloriesBurned || 0}\n                          </p>\n                        </div>\n                        <div>\n                          <p className=\"text-blue-700\">\n                            FC moy: {lastCachedData.avgHeartRate || 0} bpm\n                          </p>\n                        </div>\n                        <div>\n                          <p className=\"text-blue-700\">\n                            Minutes actives: {lastCachedData.activeMinutes || 0}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Onglet Confidentialité */}\n          <TabsContent value=\"privacy\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Confidentialité et sécurité</CardTitle>\n                <CardDescription>Contrôlez vos paramètres de confidentialité</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                {Object.entries(privacy).map(([key, value]) => (\n                  <div\n                    key={key}\n                    className=\"flex items-center justify-between p-4 rounded-lg border\"\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      {key === 'profile_public' && <Eye className=\"text-gray-500\" size={16} />}\n                      {key === 'share_stats' && <Activity className=\"text-gray-500\" size={16} />}\n                      {key === 'allow_friend_requests' && (\n                        <User className=\"text-gray-500\" size={16} />\n                      )}\n                      {key === 'show_activity' && (\n                        <CheckCircle className=\"text-gray-500\" size={16} />\n                      )}\n                      <div>\n                        <Label htmlFor={key} className=\"font-medium\">\n                          {key === 'profile_public' && 'Profil public'}\n                          {key === 'share_stats' && 'Partager les statistiques'}\n                          {key === 'allow_friend_requests' && \"Demandes d'amis\"}\n                          {key === 'show_activity' && \"Afficher l'activité\"}\n                        </Label>\n                        <p className=\"text-sm text-gray-600\">\n                          {key === 'profile_public' &&\n                            'Rendre votre profil visible aux autres utilisateurs'}\n                          {key === 'share_stats' && 'Partager vos statistiques avec la communauté'}\n                          {key === 'allow_friend_requests' &&\n                            \"Permettre aux autres de vous envoyer des demandes d'amis\"}\n                          {key === 'show_activity' && \"Afficher votre statut d'activité aux amis\"}\n                        </p>\n                      </div>\n                    </div>\n                    <Switch\n                      id={key}\n                      checked={value}\n                      onCheckedChange={checked => setPrivacy({ ...privacy, [key]: checked })}\n                    />\n                  </div>\n                ))}\n\n                <Button\n                  onClick={handleSavePrivacy}\n                  disabled={loading}\n                  className=\"w-full bg-blue-600 hover:bg-blue-700\"\n                >\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  {loading ? 'Sauvegarde...' : 'Sauvegarder la confidentialité'}\n                </Button>\n\n                <Separator />\n\n                {/* 🆕 ZONE DE DANGER AVEC SUPPRESSION DE COMPTE BRANCHÉE */}\n                <div className=\"space-y-4\">\n                  <h3 className=\"font-semibold text-red-600 flex items-center\">\n                    <AlertCircle className=\"mr-2\" size={16} />\n                    Zone de danger\n                  </h3>\n                  <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n                    <p className=\"text-sm text-red-700 mb-3\">\n                      ⚠️ <strong>ATTENTION :</strong> Cette action supprimera définitivement votre\n                      compte MyFitHero et toutes vos données associées (profil, entraînements,\n                      statistiques, etc.). Cette action est <strong>irréversible</strong>.\n                    </p>\n                    <Button\n                      variant=\"destructive\"\n                      className=\"w-full\"\n                      onClick={handleDeleteAccount}\n                      disabled={isDeleting}\n                    >\n                      <Trash2 className=\"mr-2 h-4 w-4\" />\n                      {isDeleting\n                        ? 'Suppression en cours...'\n                        : 'Supprimer définitivement mon compte'}\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Onglet Préférences */}\n          <TabsContent value=\"preferences\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Préférences de l'application</CardTitle>\n                <CardDescription>Personnalisez votre expérience MyFitHero</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between p-4 rounded-lg border\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Globe className=\"h-5 w-5 text-gray-600\" />\n                        <div>\n                          <Label className=\"font-medium\">Langue</Label>\n                          <p className=\"text-sm text-gray-600\">Choisissez votre langue préférée</p>\n                        </div>\n                      </div>\n                      <select\n                        className=\"px-3 py-2 border rounded-md\"\n                        value={preferences.language}\n                        onChange={e => setPreferences({ ...preferences, language: e.target.value })}\n                      >\n                        <option value=\"fr\">Français</option>\n                        <option value=\"en\">English</option>\n                        <option value=\"es\">Español</option>\n                        <option value=\"de\">Deutsch</option>\n                      </select>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-4 rounded-lg border\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Palette className=\"h-5 w-5 text-gray-600\" />\n                        <div>\n                          <Label className=\"font-medium\">Thème</Label>\n                          <p className=\"text-sm text-gray-600\">Apparence de l'application</p>\n                        </div>\n                      </div>\n                      <select\n                        className=\"px-3 py-2 border rounded-md\"\n                        value={preferences.theme}\n                        onChange={e => setPreferences({ ...preferences, theme: e.target.value })}\n                      >\n                        <option value=\"light\">Clair</option>\n                        <option value=\"dark\">Sombre</option>\n                        <option value=\"system\">Système</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between p-4 rounded-lg border\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Activity className=\"h-5 w-5 text-gray-600\" />\n                        <div>\n                          <Label className=\"font-medium\">Unités</Label>\n                          <p className=\"text-sm text-gray-600\">Système de mesure</p>\n                        </div>\n                      </div>\n                      <select\n                        className=\"px-3 py-2 border rounded-md\"\n                        value={preferences.units}\n                        onChange={e => setPreferences({ ...preferences, units: e.target.value })}\n                      >\n                        <option value=\"metric\">Métrique (kg, cm)</option>\n                        <option value=\"imperial\">Impérial (lbs, ft)</option>\n                      </select>\n                    </div>\n\n                    <div className=\"flex items-center justify-between p-4 rounded-lg border\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Globe className=\"h-5 w-5 text-gray-600\" />\n                        <div>\n                          <Label className=\"font-medium\">Devise</Label>\n                          <p className=\"text-sm text-gray-600\">Monnaie pour les abonnements</p>\n                        </div>\n                      </div>\n                      <select\n                        className=\"px-3 py-2 border rounded-md\"\n                        value={preferences.currency}\n                        onChange={e => setPreferences({ ...preferences, currency: e.target.value })}\n                      >\n                        <option value=\"EUR\">Euro (€)</option>\n                        <option value=\"USD\">Dollar ($)</option>\n                        <option value=\"GBP\">Livre (£)</option>\n                        <option value=\"CAD\">Dollar canadien</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <Button\n                  onClick={handleSavePreferences}\n                  disabled={loading}\n                  className=\"w-full bg-purple-600 hover:bg-purple-700\"\n                >\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  {loading ? 'Sauvegarde...' : 'Sauvegarder les préférences'}\n                </Button>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"names":["__iconNode","Globe","createLucideIcon","Palette","Smartphone","useWearableSync","isLoading","setIsLoading","useState","lastSyncTime","setLastSyncTime","syncError","setSyncError","toast","useToast","isAppleHealthAvailable","useCallback","_a","isGoogleFitAvailable","syncAppleHealth","resolve","mockHealthData","errorMessage","syncGoogleFit","mockFitData","syncAll","results","appleResult","googleResult","appleData","googleData","scheduleSync","intervalMinutes","interval","getCachedData","cachedData","parsed","session","cacheData","data","AnalyticsService","userId","error","supabase","minConfidence","limit","barcode","days","acc","log","context","goalId","newValue","goal","fetchError","currentHistory","newHistoryEntry","updatedHistory","mealId","file","fileName","uploadError","urlData","updateError","pillarType","prompt","source","steps","date","heartRateReadings","recordedAt","records","rate","sleepData","workoutData","startDate","endDate","stepsResult","heartRateResult","sleepResult","stats","sum","record","heartRateData","qualityScores","score","Label","React.forwardRef","className","props","ref","jsx","cn","SWITCH_NAME","createSwitchContext","createSwitchScope","createContextScope","SwitchProvider","useSwitchContext","Switch","forwardedRef","__scopeSwitch","name","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","form","switchProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","checked","setChecked","useControllableState","jsxs","Primitive","getState","composeEventHandlers","event","prevChecked","SwitchBubbleInput","THUMB_NAME","SwitchThumb","thumbProps","BUBBLE_INPUT_NAME","control","bubbles","usePrevious","controlSize","useSize","React.useEffect","input","inputProto","Root","Thumb","SwitchPrimitives.Root","SwitchPrimitives.Thumb","Separator","orientation","decorative","Settings","location","setLocation","useLocation","appStoreUser","setAppStoreUser","clearStore","appStore","wearableLoading","loading","setLoading","activeTab","setActiveTab","autoSyncEnabled","setAutoSyncEnabled","syncInterval","setSyncInterval","lastCachedData","setLastCachedData","isDeleting","setIsDeleting","profileData","setProfileData","notifications","setNotifications","privacy","setPrivacy","preferences","setPreferences","handleDeleteAccount","tablesToClean","table","authError","rpcError","loadSettings","prefs","cached","savedAutoSync","savedInterval","handleSaveProfile","handleSaveNotifications","handleSavePreferences","handleSavePrivacy","handleAppleHealthSync","handleGoogleFitSync","handleSyncAll","toggleAutoSync","formatLastSync","diffMinutes","getPersonalizedMessage","useEffect","tabs","User","Bell","Shield","UniformHeader","Button","Tabs","Card","CardContent","TabsList","tab","TabIcon","TabsTrigger","TabsContent","CardHeader","CardTitle","CardDescription","Input","e","Textarea","Save","key","Clock","Badge","AlertCircle","Heart","RefreshCw","Activity","Eye","CheckCircle","Trash2"],"mappings":"68BAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,SAAU,CAAE,GAAI,KAAM,GAAI,KAAM,EAAG,KAAM,IAAK,SAAU,EACzD,CAAC,OAAQ,CAAE,EAAG,kDAAmD,IAAK,QAAQ,CAAE,EAChF,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,CAC3C,EACMC,GAAQC,GAAiB,QAASF,EAAU,ECdlD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CACE,OACA,CACE,EAAG,kHACH,IAAK,QACX,CACA,EACE,CAAC,SAAU,CAAE,GAAI,OAAQ,GAAI,MAAO,EAAG,KAAM,KAAM,eAAgB,IAAK,QAAQ,CAAE,EAClF,CAAC,SAAU,CAAE,GAAI,OAAQ,GAAI,OAAQ,EAAG,KAAM,KAAM,eAAgB,IAAK,QAAQ,CAAE,EACnF,CAAC,SAAU,CAAE,GAAI,MAAO,GAAI,OAAQ,EAAG,KAAM,KAAM,eAAgB,IAAK,QAAQ,CAAE,EAClF,CAAC,SAAU,CAAE,GAAI,MAAO,GAAI,MAAO,EAAG,KAAM,KAAM,eAAgB,IAAK,QAAQ,CAAE,CACnF,EACMG,GAAUD,GAAiB,UAAWF,EAAU,ECtBtD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,OAAQ,CAAE,MAAO,KAAM,OAAQ,KAAM,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,SAAU,EACvF,CAAC,OAAQ,CAAE,EAAG,aAAc,IAAK,QAAQ,CAAE,CAC7C,EACMI,GAAaF,GAAiB,aAAcF,EAAU,EC6C/CK,GAAkB,IAAM,CACnC,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1C,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAAsB,IAAI,EAC5D,CAACG,EAAWC,CAAY,EAAIJ,EAAAA,SAAwB,IAAI,EACxD,CAAE,MAAAK,CAAA,EAAUC,GAAA,EAGZC,EAAyBC,EAAAA,YAAY,IAAe,OAGxD,OACE,OAAO,OAAW,KAAe,OAAO,UAAUC,EAAA,OAAO,OAAO,kBAAd,YAAAA,EAA+B,UAErF,EAAG,CAAA,CAAE,EAGCC,EAAuBF,EAAAA,YAAY,IAAe,OAGtD,OAAO,OAAO,OAAW,KAAe,OAAO,QAAQC,EAAA,OAAO,KAAK,SAAZ,YAAAA,EAAoB,QAC7E,EAAG,CAAA,CAAE,EAGCE,EAAkBH,EAAAA,YAAY,SAA0C,CAC5E,GAAI,CAACD,IACH,OAAAH,EAAa,oDAAoD,EAC1D,KAGT,GAAI,CACFL,EAAa,EAAI,EACjBK,EAAa,IAAI,EAGjB,MAAM,IAAI,QAAQQ,GAAW,WAAWA,EAAS,GAAI,CAAC,EAGtD,MAAMC,EAA+B,CACnC,MAAO,KAAK,MAAM,KAAK,OAAA,EAAW,GAAK,EAAI,IAC3C,UAAW,MAAM,KAAK,CAAE,OAAQ,EAAA,EAAM,IAAM,KAAK,MAAM,KAAK,OAAA,EAAW,EAAE,EAAI,EAAE,EAC/E,cAAe,CACb,CACE,GAAI,IACJ,UAAW,IAAI,KAAK,KAAK,MAAQ,EAAI,GAAK,GAAK,GAAI,EACnD,QAAS,IAAI,KAAK,KAAK,MAAQ,GAAK,GAAK,GAAI,EAC7C,SAAU,IACV,QAAS,OACT,kBAAmB,IACnB,iBAAkB,GAClB,WAAY,CAAA,CACd,EAEF,aAAc,KACd,eAAgB,KAAK,MAAM,KAAK,OAAA,EAAW,GAAG,EAAI,IAClD,SAAU,KAAK,MAAM,KAAK,OAAA,EAAW,GAAI,EAAI,IAC7C,cAAe,KAAK,MAAM,KAAK,OAAA,EAAW,GAAG,EAAI,EAAA,EAGnD,OAAAX,EAAgB,IAAI,IAAM,EAE1BG,EAAM,CACJ,MAAO,0BACP,YAAa,iDACb,QAAS,SAAA,CACV,EAEMQ,CACT,MAAQ,CACN,MAAMC,EACJ,iBAAiB,MAAQ,MAAM,QAAU,yCAC3C,OAAAV,EAAaU,CAAY,EAEzBT,EAAM,CACJ,MAAO,4BACP,YAAaS,EACb,QAAS,aAAA,CACV,EAEM,IACT,QAAA,CACEf,EAAa,EAAK,CACpB,CACF,EAAG,CAACQ,EAAwBF,CAAK,CAAC,EAG5BU,EAAgBP,EAAAA,YAAY,SAA0C,CAC1E,GAAI,CAACE,IACH,OAAAN,EAAa,kDAAkD,EACxD,KAGT,GAAI,CACFL,EAAa,EAAI,EACjBK,EAAa,IAAI,EAGjB,MAAM,IAAI,QAAQQ,GAAW,WAAWA,EAAS,GAAI,CAAC,EAGtD,MAAMI,EAA4B,CAChC,MAAO,KAAK,MAAM,KAAK,OAAA,EAAW,IAAK,EAAI,IAC3C,UAAW,MAAM,KAAK,CAAE,OAAQ,EAAA,EAAM,IAAM,KAAK,MAAM,KAAK,OAAA,EAAW,EAAE,EAAI,EAAE,EAC/E,cAAe,CACb,CACE,GAAI,IACJ,UAAW,IAAI,KAAK,KAAK,MAAQ,EAAI,GAAK,GAAK,GAAI,EACnD,QAAS,IAAI,KAAK,KAAK,MAAQ,GAAK,GAAK,GAAI,EAC7C,SAAU,IACV,QAAS,YACT,kBAAmB,IACnB,iBAAkB,IAClB,WAAY,CAAA,CACd,EAEF,aAAc,KACd,eAAgB,KAAK,MAAM,KAAK,OAAA,EAAW,GAAG,EAAI,IAClD,SAAU,KAAK,MAAM,KAAK,OAAA,EAAW,GAAI,EAAI,IAC7C,cAAe,KAAK,MAAM,KAAK,OAAA,EAAW,GAAG,EAAI,EAAA,EAGnD,OAAAd,EAAgB,IAAI,IAAM,EAE1BG,EAAM,CACJ,MAAO,0BACP,YAAa,+CACb,QAAS,SAAA,CACV,EAEMW,CACT,MAAQ,CACN,MAAMF,EACJ,iBAAiB,MAAQ,MAAM,QAAU,uCAC3C,OAAAV,EAAaU,CAAY,EAEzBT,EAAM,CACJ,MAAO,4BACP,YAAaS,EACb,QAAS,aAAA,CACV,EAEM,IACT,QAAA,CACEf,EAAa,EAAK,CACpB,CACF,EAAG,CAACW,EAAsBL,CAAK,CAAC,EAG1BY,EAAUT,EAAAA,YAAY,SAA0C,CACpE,MAAMU,EAAU,MAAM,QAAQ,WAAW,CAACP,EAAA,EAAmBI,EAAA,CAAe,CAAC,EAEvEI,EAAcD,EAAQ,CAAC,EACvBE,EAAeF,EAAQ,CAAC,EAG9B,GAAIC,EAAY,SAAW,aAAeC,EAAa,SAAW,YAAa,CAC7E,MAAMC,EAAYF,EAAY,MACxBG,EAAaF,EAAa,MAEhC,GAAIC,GAAaC,EAYf,MAVmC,CACjC,MAAO,KAAK,IAAID,EAAU,MAAOC,EAAW,KAAK,EACjD,UAAW,CAAC,GAAGD,EAAU,UAAW,GAAGC,EAAW,SAAS,EAC3D,cAAe,CAAC,GAAGD,EAAU,cAAe,GAAGC,EAAW,aAAa,EACvE,aAAc,KACd,eAAgB,KAAK,IAAID,EAAU,gBAAkB,EAAGC,EAAW,gBAAkB,CAAC,EACtF,SAAU,KAAK,IAAID,EAAU,UAAY,EAAGC,EAAW,UAAY,CAAC,EACpE,cAAe,KAAK,IAAID,EAAU,eAAiB,EAAGC,EAAW,eAAiB,CAAC,CAAA,CAKzF,CAGA,OAAIH,EAAY,SAAW,aAAeA,EAAY,MAC7CA,EAAY,MAEjBC,EAAa,SAAW,aAAeA,EAAa,MAC/CA,EAAa,MAGf,IACT,EAAG,CAACT,EAAiBI,CAAa,CAAC,EAG7BQ,EAAef,EAAAA,YACnB,CAACgB,EAA0B,KAAO,CAChC,MAAMC,EAAW,YACf,SAAY,CACV,GAAI,CACF,MAAMR,EAAA,CACR,MAAQ,CACN,QAAQ,MAAM,gDAAiD,KAAK,CACtE,CACF,EACAO,EAAkB,GAAK,GAAA,EAGzB,MAAO,IAAM,cAAcC,CAAQ,CACrC,EACA,CAACR,CAAO,CAAA,EAIJS,EAAgBlB,EAAAA,YAAY,IAA2B,CAC3D,GAAI,CACF,MAAMmB,EAAa,aAAa,QAAQ,cAAc,EACtD,GAAIA,EAAY,CACd,MAAMC,EAAS,KAAK,MAAMD,CAAU,EACpC,MAAO,CACL,GAAGC,EACH,SAAU,IAAI,KAAKA,EAAO,QAAQ,EAClC,cAAeA,EAAO,cAAc,IAAKC,IAAkB,CACzD,GAAGA,EACH,UAAW,IAAI,KAAKA,EAAQ,SAAS,EACrC,QAAS,IAAI,KAAKA,EAAQ,OAAO,CAAA,EACjC,CAAA,CAEN,CACF,MAAQ,CACN,QAAQ,MAAM,wDAAyD,KAAK,CAC9E,CACA,OAAO,IACT,EAAG,CAAA,CAAE,EAGCC,EAAYtB,cAAauB,GAAuB,CACpD,GAAI,CACF,aAAa,QAAQ,eAAgB,KAAK,UAAUA,CAAI,CAAC,CAC3D,MAAQ,CACN,QAAQ,MAAM,qDAAsD,KAAK,CAC3E,CACF,EAAG,CAAA,CAAE,EAEL,MAAO,CACL,UAAAjC,EACA,aAAAG,EACA,UAAAE,EACA,uBAAwBI,EAAA,EACxB,qBAAsBG,EAAA,EACtB,gBAAAC,EACA,cAAAI,EACA,QAAAE,EACA,aAAAM,EACA,cAAAG,EACA,UAAAI,CAAA,CAEJ,EC/SO,MAAME,EAAiB,CAE5B,aAAa,gBAAgBC,EAAgB,CAC3C,KAAM,CAAE,MAAAC,GAAU,MAAMC,EACrB,KAAK,eAAe,EACpB,OAAO,CACN,WAAY,IAAI,KAAA,EAAO,YAAA,CAAY,CACpC,EACA,GAAG,KAAMF,CAAM,EAEdC,GAAO,QAAQ,MAAM,4BAA6BA,CAAK,CAC7D,CAGA,aAAa,iCAAiCD,EAAgBG,EAAgB,GAAK,CACjF,KAAM,CAAE,KAAAL,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,oBAAoB,EACzB,OAAO,GAAG,EACV,GAAG,UAAWF,CAAM,EACpB,IAAI,mBAAoBG,CAAa,EACrC,GAAG,aAAc,EAAK,EACtB,MAAM,mBAAoB,CAAE,UAAW,GAAO,EAEjD,MAAO,CAAE,KAAAL,EAAM,MAAAG,CAAA,CACjB,CAGA,aAAa,2BAA2BG,EAAQ,GAAI,CAClD,KAAM,CAAE,KAAAN,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,UAAU,EACf,OAAO,4BAA4B,EACnC,GAAG,cAAe,EAAI,EACtB,MAAM,aAAc,CAAE,UAAW,EAAA,CAAO,EACxC,MAAME,CAAK,EAEd,MAAO,CAAE,KAAAN,EAAM,MAAAG,CAAA,CACjB,CAGA,aAAa,iBAAiBI,EAAiB,CAC7C,KAAM,CAAE,KAAAP,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,eAAe,EACpB,OAAO,GAAG,EACV,GAAG,UAAWG,CAAO,EACrB,OAAA,EAEH,MAAO,CAAE,KAAAP,EAAM,MAAAG,CAAA,CACjB,CAGA,aAAa,qBAAqBD,EAAgBM,EAAO,GAAI,CAC3D,KAAM,CAAE,KAAAR,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,gBAAgB,EACrB,OAAO,GAAG,EACV,GAAG,UAAWF,CAAM,EACpB,IAAI,aAAc,IAAI,KAAK,KAAK,IAAA,EAAQM,EAAO,GAAK,GAAK,GAAK,GAAI,EAAE,YAAA,CAAa,EACjF,MAAM,aAAc,CAAE,UAAW,GAAO,EAE3C,OAAIR,EAYK,CAAE,KAVgBA,EAAK,IAAIF,GAAA,OAAY,OAC5C,KAAMA,EAAQ,WACd,QAASA,EAAQ,eACjB,SAAUA,EAAQ,iBAClB,OAAQA,EAAQ,iBAEhB,sBACGpB,EAAAoB,EAAQ,mBAAR,YAAApB,EAA0B,oBAAqBoB,EAAQ,iBAAoB,GAAA,EAC9E,EAE+B,MAAO,IAAA,EAGnC,CAAE,KAAM,KAAM,MAAAK,CAAA,CACvB,CAGA,aAAa,qBAAqBD,EAAgBM,EAAO,EAAG,CAC1D,KAAM,CAAE,KAAAR,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,gBAAgB,EACrB,OAAO,GAAG,EACV,GAAG,UAAWF,CAAM,EACpB,IAAI,WAAY,IAAI,KAAK,KAAK,IAAA,EAAQM,EAAO,GAAK,GAAK,GAAK,GAAI,EAAE,YAAA,CAAa,EAC/E,MAAM,YAAa,CAAE,UAAW,GAAM,EAEzC,OAAIR,EAgBK,CAAE,KAdYA,EAAK,OACxB,CAACS,EAAKC,IAAQ,CACZ,MAAMC,EAAUD,EAAI,kBACpB,OAAKD,EAAIE,CAAO,IACdF,EAAIE,CAAO,EAAI,CAAE,MAAO,EAAG,MAAO,EAAG,QAAS,CAAA,GAEhDF,EAAIE,CAAO,EAAE,OAASD,EAAI,UAC1BD,EAAIE,CAAO,EAAE,OAAS,EACtBF,EAAIE,CAAO,EAAE,QAAUF,EAAIE,CAAO,EAAE,MAAQF,EAAIE,CAAO,EAAE,MAClDF,CACT,EACA,CAAA,CAAC,EAG0B,MAAO,IAAA,EAG/B,CAAE,KAAM,KAAM,MAAAN,CAAA,CACvB,CAGA,aAAa,mBAAmBS,EAAgBC,EAAkB,CAEhE,KAAM,CAAE,KAAMC,EAAM,MAAOC,CAAA,EAAe,MAAMX,EAC7C,KAAK,YAAY,EACjB,OAAO,GAAG,EACV,GAAG,KAAMQ,CAAM,EACf,OAAA,EAEH,GAAIG,GAAc,CAACD,EAAM,MAAO,CAAE,MAAOC,CAAA,EAGzC,MAAMC,EAAkBF,EAAK,kBAA8B,CAAA,EACrDG,EAAkB,CACtB,KAAM,IAAI,KAAA,EAAO,YAAA,EACjB,MAAOJ,EACP,WAAaA,EAAWC,EAAK,aAAgB,GAAA,EAGzCI,EAAiB,CAAC,GAAGF,EAAgBC,CAAe,EAGpD,CAAE,MAAAd,GAAU,MAAMC,EACrB,KAAK,YAAY,EACjB,OAAO,CACN,cAAeS,EACf,iBAAkBK,EAElB,YAAaL,GAAYC,EAAK,iBAAmB,KAAA,EAAO,cAAgB,IAAA,CACzE,EACA,GAAG,KAAMF,CAAM,EAElB,MAAO,CAAE,MAAAT,CAAA,CACX,CAGA,aAAa,mBAAmBD,EAAgB,CAC9C,KAAM,CAAE,KAAAF,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,eAAe,EACpB,OAAO,qBAAqB,EAC5B,GAAG,KAAMF,CAAM,EACf,OAAA,EAEH,OAAIC,EAAc,CAAE,WAAY,GAAO,OAAQ,MAAA,EAGxC,CAAE,WADS,CAAC,UAAW,MAAO,YAAY,EAAE,SAASH,EAAK,mBAAmB,EACpD,OAAQA,EAAK,mBAAA,CAC/C,CAGA,aAAa,gBAAgBmB,EAAgBC,EAAY,CAEvD,MAAMC,EAAW,SAASF,CAAM,IAAI,KAAK,KAAK,IAAIC,EAAK,IAAI,GACrD,CAAE,MAAOE,CAAA,EAAgB,MAAMlB,EAAS,QAC3C,KAAK,aAAa,EAClB,OAAOiB,EAAUD,CAAI,EAExB,GAAIE,EAAa,MAAO,CAAE,MAAOA,CAAA,EAGjC,KAAM,CAAE,KAAMC,CAAA,EAAYnB,EAAS,QAAQ,KAAK,aAAa,EAAE,aAAaiB,CAAQ,EAG9E,CAAE,MAAOG,CAAA,EAAgB,MAAMpB,EAClC,KAAK,OAAO,EACZ,OAAO,CAAE,eAAgBmB,EAAQ,SAAA,CAAW,EAC5C,GAAG,KAAMJ,CAAM,EAElB,MAAO,CAAE,MAAOK,EAAa,IAAKD,EAAQ,SAAA,CAC5C,CAGA,aAAa,gBACXrB,EACAuB,EACAC,EACAC,EAAiB,MACjBhB,EACA,CACA,KAAM,CAAE,KAAAX,EAAM,MAAAG,GAAU,MAAMC,EAC3B,KAAK,aAAa,EAClB,OAAO,CACN,QAASF,EACT,YAAauB,EACb,OAAAC,EACA,OAAAC,EACA,QAAAhB,EACA,OAAQ,SAAA,CACT,EACA,OAAA,EACA,OAAA,EAEH,MAAO,CAAE,KAAAX,EAAM,MAAAG,CAAA,CACjB,CAGA,aAAa,kBAAkBD,EAAgB0B,EAAeC,EAAa,IAAI,KAAQ,CACrF,KAAM,CAAE,MAAA1B,CAAA,EAAU,MAAMC,EAAS,KAAK,gBAAgB,EAAE,OACtD,CACE,QAASF,EACT,MAAA0B,EACA,KAAMC,EAAK,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,EACrC,UAAW,IAAI,KAAA,EAAO,YAAA,CAAY,EAEpC,CACE,WAAY,eAAA,CACd,EAGF,OAAI1B,GAAO,QAAQ,MAAM,2BAA4BA,CAAK,EACnD,CAAE,MAAAA,CAAA,CACX,CAEA,aAAa,kBACXD,EACA4B,EACAC,EAAmB,IAAI,KACvB,CACA,MAAMC,EAAUF,EAAkB,IAAIG,IAAS,CAC7C,QAAS/B,EACT,WAAY+B,EACZ,YAAaF,EAAW,YAAA,EACxB,UAAW,IAAI,KAAA,EAAO,YAAA,CAAY,EAClC,EAEI,CAAE,MAAA5B,GAAU,MAAMC,EAAS,KAAK,iBAAiB,EAAE,OAAO4B,CAAO,EAEvE,OAAI7B,GAAO,QAAQ,MAAM,gCAAiCA,CAAK,EACxD,CAAE,MAAAA,CAAA,CACX,CAEA,aAAa,iBACXD,EACAgC,EASA,CACA,KAAM,CAAE,MAAA/B,GAAU,MAAMC,EAAS,KAAK,gBAAgB,EAAE,OAAO,CAC7D,QAASF,EACT,WAAYgC,EAAU,UAAU,YAAA,EAChC,SAAUA,EAAU,QAAQ,YAAA,EAC5B,iBAAkBA,EAAU,SAC5B,cAAeA,EAAU,QACzB,mBAAoBA,EAAU,kBAC9B,kBAAmBA,EAAU,iBAC7B,iBAAkBA,EAAU,WAC5B,UAAW,IAAI,KAAA,EAAO,YAAA,CAAY,CACnC,EAED,OAAI/B,GAAO,QAAQ,MAAM,mCAAoCA,CAAK,EAC3D,CAAE,MAAAA,CAAA,CACX,CAEA,aAAa,oBACXD,EACAiC,EAQA,CACA,KAAM,CAAE,MAAAhC,GAAU,MAAMC,EAAS,KAAK,mBAAmB,EAAE,OAAO,CAChE,QAASF,EACT,aAAciC,EAAY,KAC1B,WAAYA,EAAY,UAAU,YAAA,EAClC,SAAUA,EAAY,QAAQ,YAAA,EAC9B,gBAAiBA,EAAY,SAC7B,gBAAiBA,EAAY,SAC7B,YAAaA,EAAY,OACzB,UAAW,IAAI,KAAA,EAAO,YAAA,CAAY,CACnC,EAED,OAAIhC,GAAO,QAAQ,MAAM,sCAAuCA,CAAK,EAC9D,CAAE,MAAAA,CAAA,CACX,CAGA,aAAa,iBAAiBD,EAAgBkC,EAAiBC,EAAe,CAC5E,KAAM,CAAE,KAAArC,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,gBAAgB,EACrB,OAAO,GAAG,EACV,GAAG,UAAWF,CAAM,EACpB,IAAI,OAAQkC,EAAU,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,CAAC,EACjD,IAAI,OAAQC,EAAQ,cAAc,MAAM,GAAG,EAAE,CAAC,CAAC,EAC/C,MAAM,OAAQ,CAAE,UAAW,GAAM,EAEpC,MAAO,CAAE,KAAArC,EAAM,MAAAG,CAAA,CACjB,CAEA,aAAa,iBAAiBD,EAAgBkC,EAAiBC,EAAe,CAC5E,KAAM,CAAE,KAAArC,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,iBAAiB,EACtB,OAAO,GAAG,EACV,GAAG,UAAWF,CAAM,EACpB,IAAI,cAAekC,EAAU,YAAA,CAAa,EAC1C,IAAI,cAAeC,EAAQ,YAAA,CAAa,EACxC,MAAM,cAAe,CAAE,UAAW,GAAM,EAE3C,MAAO,CAAE,KAAArC,EAAM,MAAAG,CAAA,CACjB,CAEA,aAAa,iBAAiBD,EAAgBkC,EAAiBC,EAAe,CAC5E,KAAM,CAAE,KAAArC,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,gBAAgB,EACrB,OAAO,GAAG,EACV,GAAG,UAAWF,CAAM,EACpB,IAAI,aAAckC,EAAU,YAAA,CAAa,EACzC,IAAI,WAAYC,EAAQ,YAAA,CAAa,EACrC,MAAM,aAAc,CAAE,UAAW,GAAM,EAE1C,MAAO,CAAE,KAAArC,EAAM,MAAAG,CAAA,CACjB,CAEA,aAAa,oBAAoBD,EAAgBkC,EAAiBC,EAAe,CAC/E,KAAM,CAAE,KAAArC,EAAM,MAAAG,CAAA,EAAU,MAAMC,EAC3B,KAAK,mBAAmB,EACxB,OAAO,GAAG,EACV,GAAG,UAAWF,CAAM,EACpB,IAAI,aAAckC,EAAU,YAAA,CAAa,EACzC,IAAI,WAAYC,EAAQ,YAAA,CAAa,EACrC,MAAM,aAAc,CAAE,UAAW,GAAM,EAE1C,MAAO,CAAE,KAAArC,EAAM,MAAAG,CAAA,CACjB,CAGA,aAAa,iBAAiBD,EAAgBM,EAAe,EAAG,CAC9D,MAAM6B,MAAc,KACdD,EAAY,IAAI,KAAKC,EAAQ,QAAA,EAAY7B,EAAO,GAAK,GAAK,GAAK,GAAI,EAEnE,CAAC8B,EAAaC,EAAiBC,CAAW,EAAI,MAAM,QAAQ,WAAW,CAC3E,KAAK,iBAAiBtC,EAAQkC,EAAWC,CAAO,EAChD,KAAK,iBAAiBnC,EAAQkC,EAAWC,CAAO,EAChD,KAAK,iBAAiBnC,EAAQkC,EAAWC,CAAO,CAAA,CACjD,EAEKI,EAAQ,CACZ,WAAY,EACZ,aAAc,EACd,iBAAkB,EAClB,gBAAiB,EACjB,cAAe,EACf,SAAU,IAAA,EASZ,GALIH,EAAY,SAAW,aAAeA,EAAY,MAAM,OAC1DG,EAAM,WAAaH,EAAY,MAAM,KAAK,OAAO,CAACI,EAAKC,IAAWD,EAAMC,EAAO,MAAO,CAAC,GAIrFJ,EAAgB,SAAW,aAAeA,EAAgB,MAAM,KAAM,CACxE,MAAMK,EAAgBL,EAAgB,MAAM,KACxCK,EAAc,OAAS,IACzBH,EAAM,aACJG,EAAc,OAAO,CAACF,EAAKC,IAAWD,EAAMC,EAAO,WAAY,CAAC,EAAIC,EAAc,OAExF,CAGA,GAAIJ,EAAY,SAAW,aAAeA,EAAY,MAAM,KAAM,CAChE,MAAMN,EAAYM,EAAY,MAAM,KACpC,GAAIN,EAAU,OAAS,EAAG,CACxBO,EAAM,iBACJP,EAAU,OAAO,CAACQ,EAAKC,IAAWD,EAAMC,EAAO,iBAAkB,CAAC,EAAIT,EAAU,OAGlF,MAAMW,EAAgBX,EAAU,IAAIS,GAAU,CAC5C,OAAQA,EAAO,cAAA,CACb,IAAK,YACH,MAAO,GACT,IAAK,OACH,MAAO,GACT,IAAK,OACH,MAAO,GACT,IAAK,OACH,MAAO,GACT,QACE,MAAO,EAAA,CAEb,CAAC,EACDF,EAAM,gBACJI,EAAc,OAAO,CAACH,EAAKI,IAAUJ,EAAMI,EAAO,CAAC,EAAID,EAAc,MACzE,CACF,CAEA,OAAOJ,CACT,CAGF,CCnZA,MAAMM,EAAQC,EAAAA,WAA+C,CAAC,CAAE,UAAAC,EAAW,GAAGC,CAAA,EAASC,IACrFC,EAAAA,IAAC,QAAA,CACC,IAAAD,EACA,UAAWE,EACT,6FACAJ,CAAA,EAED,GAAGC,CAAA,CACN,CACD,EACDH,EAAM,YAAc,QCJpB,IAAIO,EAAc,SACd,CAACC,GAAqBC,EAAiB,EAAIC,GAAmBH,CAAW,EACzE,CAACI,GAAgBC,EAAgB,EAAIJ,GAAoBD,CAAW,EACpEM,GAASZ,EAAAA,WACX,CAACE,EAAOW,IAAiB,CACvB,KAAM,CACJ,cAAAC,EACA,KAAAC,EACA,QAASC,EACT,eAAAC,EACA,SAAAC,EACA,SAAAC,EACA,MAAAC,EAAQ,KACR,gBAAAC,EACA,KAAAC,EACA,GAAGC,CACT,EAAQrB,EACE,CAACsB,EAAQC,CAAS,EAAIC,EAAAA,SAAe,IAAI,EACzCC,EAAeC,GAAgBf,EAAegB,GAASJ,EAAUI,CAAI,CAAC,EACtEC,EAAmCC,EAAAA,OAAa,EAAK,EACrDC,EAAgBR,EAASF,GAAQ,CAAC,CAACE,EAAO,QAAQ,MAAM,EAAI,GAC5D,CAACS,EAASC,CAAU,EAAIC,GAAqB,CACjD,KAAMnB,EACN,YAAaC,GAAkB,GAC/B,SAAUI,EACV,OAAQf,CACd,CAAK,EACD,OAAuB8B,EAAAA,KAAK1B,GAAgB,CAAE,MAAOI,EAAe,QAAAmB,EAAS,SAAAd,EAAU,SAAU,CAC/Ef,EAAAA,IACdiC,GAAU,OACV,CACE,KAAM,SACN,KAAM,SACN,eAAgBJ,EAChB,gBAAiBf,EACjB,aAAcoB,GAASL,CAAO,EAC9B,gBAAiBd,EAAW,GAAK,OACjC,SAAAA,EACA,MAAAC,EACA,GAAGG,EACH,IAAKI,EACL,QAASY,GAAqBrC,EAAM,QAAUsC,GAAU,CACtDN,EAAYO,GAAgB,CAACA,CAAW,EACpCT,IACFF,EAAiC,QAAUU,EAAM,qBAAoB,EAChEV,EAAiC,SAASU,EAAM,gBAAe,EAExE,CAAC,CACX,CACA,EACMR,GAAiC5B,EAAAA,IAC/BsC,GACA,CACE,QAASlB,EACT,QAAS,CAACM,EAAiC,QAC3C,KAAAf,EACA,MAAAK,EACA,QAAAa,EACA,SAAAf,EACA,SAAAC,EACA,KAAAG,EACA,MAAO,CAAE,UAAW,mBAAmB,CACjD,CACA,CACA,EAAO,CACL,CACF,EACAV,GAAO,YAAcN,EACrB,IAAIqC,GAAa,cACbC,GAAc5C,EAAAA,WAChB,CAACE,EAAOW,IAAiB,CACvB,KAAM,CAAE,cAAAC,EAAe,GAAG+B,CAAU,EAAK3C,EACnCvC,EAAUgD,GAAiBgC,GAAY7B,CAAa,EAC1D,OAAuBV,EAAAA,IACrBiC,GAAU,KACV,CACE,aAAcC,GAAS3E,EAAQ,OAAO,EACtC,gBAAiBA,EAAQ,SAAW,GAAK,OACzC,GAAGkF,EACH,IAAKhC,CACb,CACA,CACE,CACF,EACA+B,GAAY,YAAcD,GAC1B,IAAIG,GAAoB,oBACpBJ,GAAoB1C,EAAAA,WACtB,CAAC,CACC,cAAAc,EACA,QAAAiC,EACA,QAAAd,EACA,QAAAe,EAAU,GACV,GAAG9C,CACP,EAAKW,IAAiB,CAClB,MAAMV,EAAM4B,EAAAA,OAAa,IAAI,EACvBJ,EAAeC,GAAgBzB,EAAKU,CAAY,EAChD4B,EAAcQ,GAAYhB,CAAO,EACjCiB,EAAcC,GAAQJ,CAAO,EACnCK,OAAAA,EAAAA,UAAgB,IAAM,CACpB,MAAMC,EAAQlD,EAAI,QAClB,GAAI,CAACkD,EAAO,OACZ,MAAMC,EAAa,OAAO,iBAAiB,UAKrCpB,EAJa,OAAO,yBACxBoB,EACA,SACR,EACoC,IAC9B,GAAIb,IAAgBR,GAAWC,EAAY,CACzC,MAAMM,EAAQ,IAAI,MAAM,QAAS,CAAE,QAAAQ,CAAO,CAAE,EAC5Cd,EAAW,KAAKmB,EAAOpB,CAAO,EAC9BoB,EAAM,cAAcb,CAAK,CAC3B,CACF,EAAG,CAACC,EAAaR,EAASe,CAAO,CAAC,EACX5C,EAAAA,IACrB,QACA,CACE,KAAM,WACN,cAAe,GACf,eAAgB6B,EAChB,GAAG/B,EACH,SAAU,GACV,IAAKyB,EACL,MAAO,CACL,GAAGzB,EAAM,MACT,GAAGgD,EACH,SAAU,WACV,cAAe,OACf,QAAS,EACT,OAAQ,CAClB,CACA,CACA,CACE,CACF,EACAR,GAAkB,YAAcI,GAChC,SAASR,GAASL,EAAS,CACzB,OAAOA,EAAU,UAAY,WAC/B,CACA,IAAIsB,GAAO3C,GACP4C,GAAQZ,GClJZ,MAAMhC,EAASZ,EAAAA,WAGb,CAAC,CAAE,UAAAC,EAAW,GAAGC,CAAA,EAASC,IAC1BC,EAAAA,IAACqD,GAAA,CACC,UAAWpD,EACT,qXACAJ,CAAA,EAED,GAAGC,EACJ,IAAAC,EAEA,SAAAC,EAAAA,IAACsD,GAAA,CACC,UAAWrD,EACT,4KAAA,CACF,CAAA,CACF,CACF,CACD,EACDO,EAAO,YAAc6C,GAAsB,YChB3C,MAAME,GAAY3D,EAAAA,WAChB,CAAC,CAAE,UAAAC,EAAW,YAAA2D,EAAc,aAAc,WAAAC,EAAa,GAAM,GAAG3D,GAASC,IACvEC,EAAAA,IAAC,MAAA,CACC,IAAAD,EACA,KAAM0D,EAAa,OAAS,YAC5B,mBAAkBA,EAAa,OAAYD,EAC3C,UAAWvD,EACT,uBACAuD,IAAgB,aAAe,iBAAmB,iBAClD3D,CAAA,EAED,GAAGC,CAAA,CAAA,CAGV,EACAyD,GAAU,YAAc,YCkCxB,MAAMG,GAAqB,IAAM,QAC/B,KAAM,CAACC,EAAUC,CAAW,EAAIC,GAAA,EAC1B,CAAE,MAAA3I,CAAA,EAAUC,GAAA,EACZ,CAAE,aAAA2I,EAAc,gBAAAC,EAAiB,WAAAC,CAAA,EAAeC,GAAA,EAEhD,CACJ,UAAWC,EACX,aAAApJ,EACA,UAAAE,EACA,uBAAAI,EACA,qBAAAG,EACA,gBAAAC,EACA,cAAAI,EACA,QAAAE,EACA,aAAAM,EACA,cAAAG,EACA,UAAAI,CAAA,EACEjC,GAAA,EAEE,CAACyJ,EAASC,CAAU,EAAIvJ,EAAAA,SAAS,EAAK,EACtC,CAACwJ,EAAWC,CAAY,EAAIzJ,EAAAA,SAAS,SAAS,EAC9C,CAAC0J,EAAiBC,EAAkB,EAAI3J,EAAAA,SAAS,EAAK,EACtD,CAAC4J,EAAcC,EAAe,EAAI7J,EAAAA,SAAS,EAAE,EAC7C,CAAC8J,EAAgBC,CAAiB,EAAI/J,EAAAA,SAAc,IAAI,EACxD,CAACgK,GAAYC,EAAa,EAAIjK,EAAAA,SAAS,EAAK,EAG5C,CAACkK,EAAaC,CAAc,EAAInK,WAAS,CAC7C,WAAWiJ,GAAA,YAAAA,EAAc,YAAa,GACtC,UAAUA,GAAA,YAAAA,EAAc,WAAY,GACpC,OAAOA,GAAA,YAAAA,EAAc,QAAS,GAC9B,OAAOA,GAAA,YAAAA,EAAc,QAAS,GAC9B,KAAKA,GAAA,YAAAA,EAAc,MAAO,GAC1B,MAAMA,GAAA,YAAAA,EAAc,OAAQ,GAC5B,SAASA,GAAA,YAAAA,EAAc,UAAW,EAAA,CACnC,EAGK,CAACmB,EAAeC,EAAgB,EAAIrK,WAA+B,CACvE,kBAAmB,GACnB,oBAAqB,GACrB,eAAgB,GAChB,gBAAiB,GACjB,mBAAoB,GACpB,eAAgB,GAChB,iBAAkB,EAAA,CACnB,EAGK,CAACsK,EAASC,EAAU,EAAIvK,WAA0B,CACtD,eAAgB,GAChB,YAAa,GACb,sBAAuB,GACvB,cAAe,EAAA,CAChB,EAGK,CAACwK,EAAaC,CAAc,EAAIzK,WAAS,CAC7C,SAAU,KACV,MAAO,QACP,MAAO,SACP,SAAU,KAAA,CACX,EAGK0K,GAAsBlK,EAAAA,YAAY,SAAY,CAclD,GAbI,EAACyI,GAAA,MAAAA,EAAc,KAOf,CAJiB,OAAO,QAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAA,GASE,CAJkB,OAAO,QAC3B;AAAA;AAAA,gHAAA,EAGkB,OAMpB,GAJ0B,OAAO,OAC/B,wEAAA,IAGwB,YAAa,CACrC5I,EAAM,CACJ,MAAO,sBACP,YAAa,+CAAA,CACd,EACD,MACF,CAEA4J,GAAc,EAAI,EAElB,GAAI,CAEF,MAAMhI,EAASgH,EAAa,GAGtB0B,EAAgB,CACpB,gBACA,iBACA,iBACA,aACA,iBACA,mBACA,0BACA,oBACA,qBACA,eAAA,EAGF,UAAWC,KAASD,EAAe,CACjC,KAAM,CAAE,MAAAzI,EAAAA,EAAU,MAAMC,EAAS,KAAKyI,CAAK,EAAE,OAAA,EAAS,GAAG,UAAW3I,CAAM,EAEtEC,IACF,QAAQ,KAAK,sBAAsB0I,CAAK,IAAK1I,EAAK,CAEtD,CAGA,KAAM,CAAE,MAAO2I,IAAc,MAAM1I,EAAS,KAAK,MAAM,WAAWF,CAAM,EAExE,GAAI4I,GAAW,CAEb,KAAM,CAAE,MAAOC,CAAA,EAAa,MAAM3I,EAAS,IAAI,sBAAuB,CACpE,QAASF,CAAA,CACV,EAED,GAAI6I,EACF,MAAM,IAAI,MAAM,sCAAwCA,EAAS,OAAO,CAE5E,CAGA3B,EAAA,EAGA,aAAa,MAAA,EACb,eAAe,MAAA,EAGX,OAAO,OAAW,KAAe,OAAO,MAC1C,OAAO,KAAK,QAAS,kBAAmB,CACtC,QAASlH,EACT,UAAW,IAAI,KAAA,EAAO,YAAA,CAAY,CACnC,EAIH,MAAME,EAAS,KAAK,QAAA,EAEpB9B,EAAM,CACJ,MAAO,kBACP,YACE,4FACF,SAAU,GAAA,CACX,EAGD,WAAW,IAAM,CACf0I,EAAY,UAAU,CACxB,EAAG,GAAI,CACT,MAAQ,CACN,QAAQ,MAAM,6BAA8B,KAAK,EACjD1I,EAAM,CACJ,MAAO,wBACP,YACE,gGACF,QAAS,cACT,SAAU,GAAA,CACX,CACH,QAAA,CACE4J,GAAc,EAAK,CACrB,CACF,EAAG,CAAChB,GAAA,YAAAA,EAAc,GAAIE,EAAYJ,EAAa1I,CAAK,CAAC,EAG/C0K,GAAevK,EAAAA,YAAY,SAAY,CAC3C,GAAKyI,GAAA,MAAAA,EAAc,GAEnB,GAAI,CAEF,KAAM,CAAE,KAAM+B,EAAO,MAAA9I,GAAU,MAAMC,EAClC,KAAK,kBAAkB,EACvB,OAAO,GAAG,EACV,GAAG,UAAW8G,EAAa,EAAE,EAC7B,OAAA,EAEC,CAAC/G,GAAS8I,IACZX,GAAiBW,EAAM,eAAiBZ,CAAa,EACrDG,GAAWS,EAAM,SAAWV,CAAO,EACnCG,EAAeO,EAAM,iBAAmBR,CAAW,GAIrD,MAAMS,EAASvJ,EAAA,EACXuJ,GACFlB,EAAkBkB,CAAM,EAI1B,MAAMC,EAAgB,aAAa,QAAQ,iBAAiB,EACtDC,EAAgB,aAAa,QAAQ,cAAc,EAErDD,GACFvB,GAAmB,KAAK,MAAMuB,CAAa,CAAC,EAE1CC,GACFtB,GAAgB,SAASsB,CAAa,CAAC,CAE3C,MAAQ,CACN,QAAQ,MAAM,gCAAiC,KAAK,CACtD,CACF,EAAG,CAAClC,GAAA,YAAAA,EAAc,GAAIvH,EAAe0I,EAAeE,EAASE,CAAW,CAAC,EAGnEY,GAAoB5K,EAAAA,YAAY,SAAY,CAChD,GAAKyI,GAAA,MAAAA,EAAc,GAEnB,CAAAM,EAAW,EAAI,EACf,GAAI,CACF,KAAM,CAAE,MAAArH,GAAU,MAAMC,EACrB,KAAK,eAAe,EACpB,OAAO,CACN,GAAG+H,EACH,WAAY,IAAI,KAAA,EAAO,YAAA,CAAY,CACpC,EACA,GAAG,KAAMjB,EAAa,EAAE,EAE3B,GAAI/G,EAAO,MAAMA,EAEjBgH,EAAgB,CAAE,GAAGD,EAAc,GAAGiB,EAAa,EAEnD7J,EAAM,CACJ,MAAO,oBACP,YAAa,oDAAA,CACd,EAGG,OAAO,OAAW,KAAe,OAAO,MAC1C,OAAO,KAAK,QAAS,kBAAmB,CACtC,QAAS4I,EAAa,GACtB,QAAS,UAAA,CACV,CAEL,MAAQ,CACN,QAAQ,MAAM,4BAA6B,KAAK,EAChD5I,EAAM,CACJ,MAAO,SACP,YAAa,uCACb,QAAS,aAAA,CACV,CACH,QAAA,CACEkJ,EAAW,EAAK,CAClB,EACF,EAAG,CAACN,EAAciB,EAAahB,EAAiB7I,CAAK,CAAC,EAGhDgL,GAA0B7K,EAAAA,YAAY,SAAY,CACtD,GAAKyI,GAAA,MAAAA,EAAc,GAEnB,CAAAM,EAAW,EAAI,EACf,GAAI,CACF,KAAM,CAAE,MAAArH,CAAAA,EAAU,MAAMC,EAAS,KAAK,kBAAkB,EAAE,OACxD,CACE,QAAS8G,EAAa,GACtB,cAAAmB,EACA,WAAY,IAAI,KAAA,EAAO,YAAA,CAAY,EAErC,CACE,WAAY,UACZ,iBAAkB,EAAA,CACpB,EAGF,GAAIlI,EAAO,MAAMA,EAEjB7B,EAAM,CACJ,MAAO,6BACP,YAAa,uDAAA,CACd,CACH,MAAQ,CACN,QAAQ,MAAM,mCAAoC,KAAK,EACvDA,EAAM,CACJ,MAAO,SACP,YAAa,+CACb,QAAS,aAAA,CACV,CACH,QAAA,CACEkJ,EAAW,EAAK,CAClB,EACF,EAAG,CAACN,GAAA,YAAAA,EAAc,GAAImB,EAAe/J,CAAK,CAAC,EAGrCiL,GAAwB9K,EAAAA,YAAY,SAAY,CACpD,GAAKyI,GAAA,MAAAA,EAAc,GAEnB,CAAAM,EAAW,EAAI,EACf,GAAI,CACF,KAAM,CAAE,MAAArH,CAAAA,EAAU,MAAMC,EAAS,KAAK,kBAAkB,EAAE,OACxD,CACE,QAAS8G,EAAa,GACtB,gBAAiBuB,EACjB,WAAY,IAAI,KAAA,EAAO,YAAA,CAAY,EAErC,CACE,WAAY,UACZ,iBAAkB,EAAA,CACpB,EAGF,GAAItI,EAAO,MAAMA,EAEjB7B,EAAM,CACJ,MAAO,2BACP,YAAa,qDAAA,CACd,CACH,MAAQ,CACN,QAAQ,MAAM,iCAAkC,KAAK,EACrDA,EAAM,CACJ,MAAO,SACP,YAAa,6CACb,QAAS,aAAA,CACV,CACH,QAAA,CACEkJ,EAAW,EAAK,CAClB,EACF,EAAG,CAACN,GAAA,YAAAA,EAAc,GAAIuB,EAAanK,CAAK,CAAC,EAGnCkL,GAAoB/K,EAAAA,YAAY,SAAY,CAChD,GAAKyI,GAAA,MAAAA,EAAc,GAEnB,CAAAM,EAAW,EAAI,EACf,GAAI,CACF,KAAM,CAAE,MAAArH,CAAAA,EAAU,MAAMC,EAAS,KAAK,kBAAkB,EAAE,OACxD,CACE,QAAS8G,EAAa,GACtB,QAAAqB,EACA,WAAY,IAAI,KAAA,EAAO,YAAA,CAAY,EAErC,CACE,WAAY,UACZ,iBAAkB,EAAA,CACpB,EAGF,GAAIpI,EAAO,MAAMA,EAEjB7B,EAAM,CACJ,MAAO,8BACP,YAAa,wDAAA,CACd,CACH,MAAQ,CACN,QAAQ,MAAM,qCAAsC,KAAK,EACzDA,EAAM,CACJ,MAAO,SACP,YAAa,gDACb,QAAS,aAAA,CACV,CACH,QAAA,CACEkJ,EAAW,EAAK,CAClB,EACF,EAAG,CAACN,GAAA,YAAAA,EAAc,GAAIqB,EAASjK,CAAK,CAAC,EAG/BmL,GAAwBhL,EAAAA,YAAY,SAAY,CACpD,MAAMuB,EAAO,MAAMpB,EAAA,EACfoB,IAAQkH,GAAA,MAAAA,EAAc,MACxBnH,EAAUC,CAAI,EACdgI,EAAkBhI,CAAI,EAGlBA,EAAK,OACP,MAAMC,GAAiB,kBAAkBiH,EAAa,GAAIlH,EAAK,KAAK,EAElEA,EAAK,WAAaA,EAAK,UAAU,OAAS,GAC5C,MAAMC,GAAiB,kBAAkBiH,EAAa,GAAIlH,EAAK,SAAS,EAG1E1B,EAAM,CACJ,MAAO,2BACP,YAAa,mCAAA,CACd,EAEL,EAAG,CAACM,EAAiBmB,EAAWmH,GAAA,YAAAA,EAAc,GAAI5I,CAAK,CAAC,EAElDoL,GAAsBjL,EAAAA,YAAY,SAAY,CAClD,MAAMuB,EAAO,MAAMhB,EAAA,EACfgB,IAAQkH,GAAA,MAAAA,EAAc,MACxBnH,EAAUC,CAAI,EACdgI,EAAkBhI,CAAI,EAEtB1B,EAAM,CACJ,MAAO,yBACP,YAAa,mCAAA,CACd,EAEL,EAAG,CAACU,EAAee,EAAWmH,GAAA,YAAAA,EAAc,GAAI5I,CAAK,CAAC,EAEhDqL,GAAgBlL,EAAAA,YAAY,SAAY,CAC5C,MAAMuB,EAAO,MAAMd,EAAA,EACfc,IAAQkH,GAAA,MAAAA,EAAc,MACxBnH,EAAUC,CAAI,EACdgI,EAAkBhI,CAAI,EAEtB1B,EAAM,CACJ,MAAO,2BACP,YAAa,0CAAA,CACd,EAEL,EAAG,CAACY,EAASa,EAAWmH,GAAA,YAAAA,EAAc,GAAI5I,CAAK,CAAC,EAE1CsL,GAAiBnL,EAAAA,YAAY,IAAM,CACvC,MAAMoC,EAAW,CAAC8G,EAClBC,GAAmB/G,CAAQ,EAC3B,aAAa,QAAQ,kBAAmB,KAAK,UAAUA,CAAQ,CAAC,EAEhEvC,EAAM,CACJ,MAAOuC,EAAW,mBAAqB,sBACvC,YAAaA,EACT,8BAA8BgH,CAAY,WAC1C,gDAAA,CACL,CACH,EAAG,CAACF,EAAiBE,EAAcvJ,CAAK,CAAC,EAEnCuL,GAAiBpL,cAAaoD,GAAsB,CACxD,GAAI,CAACA,EAAM,MAAO,SAElB,MAAMiI,EAAc,KAAK,WADT,KAAA,EACoB,UAAYjI,EAAK,QAAA,IAAc,IAAO,GAAG,EAE7E,OAAIiI,EAAc,EAAU,cACxBA,EAAc,GAAW,UAAUA,CAAW,OAC9CA,EAAc,KAAa,UAAU,KAAK,MAAMA,EAAc,EAAE,CAAC,IAC9D,UAAU,KAAK,MAAMA,EAAc,IAAI,CAAC,GACjD,EAAG,CAAA,CAAE,EAECC,GAAyBtL,EAAAA,YAAY,IAElC,wCADUyI,GAAA,YAAAA,EAAc,cAAcA,GAAA,YAAAA,EAAc,WAAY,UACjB,GACrD,CAACA,CAAY,CAAC,EAEjB8C,EAAAA,UAAU,IAAM,CACdhB,GAAA,CACF,EAAG,CAACA,EAAY,CAAC,EAGjBgB,EAAAA,UAAU,IAAM,CACd,GAAIrC,EAEF,OADgBnI,EAAaqI,CAAY,CAG7C,EAAG,CAACF,EAAiBE,EAAcrI,CAAY,CAAC,EAEhD,MAAMyK,GAAO,CACX,CAAE,GAAI,UAAW,MAAO,SAAU,KAAMC,CAAA,EACxC,CAAE,GAAI,gBAAiB,MAAO,gBAAiB,KAAMC,EAAA,EACrD,CAAE,GAAI,YAAa,MAAO,YAAa,KAAMtM,EAAA,EAC7C,CAAE,GAAI,UAAW,MAAO,kBAAmB,KAAMuM,EAAA,EACjD,CAAE,GAAI,cAAe,MAAO,cAAe,KAAMxM,EAAA,CAAQ,EAG3D,OACEwH,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAhC,EAAAA,IAACiH,GAAA,CACC,MAAM,aACN,SAAUN,GAAA,EACV,eAAgB,GAChB,SAAU,GACV,aACE3E,EAAAA,KAACkF,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAMtD,EAAY,UAAU,EACrC,UAAU,+BAEV,SAAA,CAAA5D,EAAAA,IAAC8G,EAAA,CAAK,UAAU,cAAA,CAAe,EAAE,QAAA,CAAA,CAAA,CAEnC,CAAA,EAIJ9G,EAAAA,IAAC,MAAA,CAAI,UAAU,kCAEb,SAAAgC,EAAAA,KAACmF,GAAA,CAAK,MAAO9C,EAAW,cAAeC,EAAc,UAAU,YAC7D,SAAA,CAAAtE,EAAAA,IAACoH,EAAA,CACC,SAAApH,EAAAA,IAACqH,EAAA,CAAY,UAAU,MACrB,SAAArH,EAAAA,IAACsH,GAAA,CAAS,UAAU,0BACjB,SAAAT,GAAK,IAAIU,GAAO,CACf,MAAMC,EAAUD,EAAI,KACpB,OACEvF,EAAAA,KAACyF,GAAA,CAEC,MAAOF,EAAI,GACX,UAAU,8BAEV,SAAA,CAAAvH,EAAAA,IAACwH,EAAA,CAAQ,UAAU,SAAA,CAAU,EAC7BxH,EAAAA,IAAC,OAAA,CAAK,UAAU,mBAAoB,WAAI,KAAA,CAAM,CAAA,CAAA,EALzCuH,EAAI,EAAA,CAQf,CAAC,CAAA,CACH,CAAA,CACF,EACF,EAGAvH,MAAC0H,EAAA,CAAY,MAAM,UACjB,gBAACN,EAAA,CACC,SAAA,CAAApF,OAAC2F,EAAA,CACC,SAAA,CAAA3H,EAAAA,IAAC4H,GAAU,SAAA,wBAAA,CAAsB,EACjC5H,EAAAA,IAAC6H,GAAgB,SAAA,wCAAA,CAAsC,CAAA,EACzD,EACA7F,EAAAA,KAACqF,EAAA,CAAY,UAAU,YACrB,SAAA,CAAArF,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAhC,EAAAA,IAACL,EAAA,CAAM,QAAQ,YAAY,SAAA,cAAW,EACtCK,EAAAA,IAAC8H,EAAA,CACC,GAAG,YACH,MAAO/C,EAAY,UACnB,SAAUgD,GAAK/C,EAAe,CAAE,GAAGD,EAAa,UAAWgD,EAAE,OAAO,MAAO,EAC3E,YAAY,mBAAA,CAAA,CACd,EACF,EACA/F,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAhC,EAAAA,IAACL,EAAA,CAAM,QAAQ,WAAW,SAAA,oBAAiB,EAC3CK,EAAAA,IAAC8H,EAAA,CACC,GAAG,WACH,MAAO/C,EAAY,SACnB,SAAUgD,GAAK/C,EAAe,CAAE,GAAGD,EAAa,SAAUgD,EAAE,OAAO,MAAO,EAC1E,YAAY,0BAAA,CAAA,CACd,CAAA,CACF,CAAA,EACF,EAEA/F,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAhC,EAAAA,IAACL,EAAA,CAAM,QAAQ,QAAQ,SAAA,QAAK,EAC5BK,EAAAA,IAAC8H,EAAA,CACC,GAAG,QACH,KAAK,QACL,MAAO/C,EAAY,MACnB,SAAUgD,GAAK/C,EAAe,CAAE,GAAGD,EAAa,MAAOgD,EAAE,OAAO,MAAO,EACvE,YAAY,iBAAA,CAAA,CACd,EACF,EACA/F,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAhC,EAAAA,IAACL,EAAA,CAAM,QAAQ,QAAQ,SAAA,YAAS,EAChCK,EAAAA,IAAC8H,EAAA,CACC,GAAG,QACH,KAAK,MACL,MAAO/C,EAAY,MACnB,SAAUgD,GAAK/C,EAAe,CAAE,GAAGD,EAAa,MAAOgD,EAAE,OAAO,MAAO,EACvE,YAAY,mBAAA,CAAA,CACd,CAAA,CACF,CAAA,EACF,EAEA/F,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAhC,EAAAA,IAACL,EAAA,CAAM,QAAQ,MAAM,SAAA,MAAG,EACxBK,EAAAA,IAACgI,GAAA,CACC,GAAG,MACH,MAAOjD,EAAY,IACnB,SAAUgD,GAAK/C,EAAe,CAAE,GAAGD,EAAa,IAAKgD,EAAE,OAAO,MAAO,EACrE,YAAY,wCACZ,KAAM,CAAA,CAAA,CACR,EACF,EAEA/F,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAhC,EAAAA,IAACL,EAAA,CAAM,QAAQ,OAAO,SAAA,QAAK,EAC3BK,EAAAA,IAAC8H,EAAA,CACC,GAAG,OACH,MAAO/C,EAAY,KACnB,SAAUgD,GAAK/C,EAAe,CAAE,GAAGD,EAAa,KAAMgD,EAAE,OAAO,MAAO,EACtE,YAAY,aAAA,CAAA,CACd,EACF,EACA/F,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAhC,EAAAA,IAACL,EAAA,CAAM,QAAQ,UAAU,SAAA,OAAI,EAC7BK,EAAAA,IAAC8H,EAAA,CACC,GAAG,UACH,MAAO/C,EAAY,QACnB,SAAUgD,GAAK/C,EAAe,CAAE,GAAGD,EAAa,QAASgD,EAAE,OAAO,MAAO,EACzE,YAAY,YAAA,CAAA,CACd,CAAA,CACF,CAAA,EACF,EAEA/F,EAAAA,KAACkF,EAAA,CACC,QAASjB,GACT,SAAU9B,EACV,UAAU,yCAEV,SAAA,CAAAnE,EAAAA,IAACiI,EAAA,CAAK,UAAU,cAAA,CAAe,EAC9B9D,EAAU,gBAAkB,uBAAA,CAAA,CAAA,CAC/B,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAGAnE,MAAC0H,EAAA,CAAY,MAAM,gBACjB,gBAACN,EAAA,CACC,SAAA,CAAApF,OAAC2F,EAAA,CACC,SAAA,CAAA3H,EAAAA,IAAC4H,GAAU,SAAA,8BAAA,CAA4B,EACvC5H,EAAAA,IAAC6H,GAAgB,SAAA,0DAAA,CAEjB,CAAA,EACF,EACA7F,EAAAA,KAACqF,EAAA,CAAY,UAAU,YACpB,SAAA,CAAA,OAAO,QAAQpC,CAAa,EAAE,IAAI,CAAC,CAACiD,EAAKlH,CAAK,IAC7CgB,EAAAA,KAAC,MAAA,CAEC,UAAU,0DAEV,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAACrC,EAAA,CAAM,QAASuI,EAAK,UAAU,cAC5B,SAAA,CAAAA,IAAQ,qBAAuB,yBAC/BA,IAAQ,uBAAyB,wBACjCA,IAAQ,kBAAoB,mBAC5BA,IAAQ,mBAAqB,qBAC7BA,IAAQ,sBAAwB,sBAChCA,IAAQ,kBAAoB,sBAC5BA,IAAQ,oBAAsB,kBAAA,EACjC,EACAlG,EAAAA,KAAC,IAAA,CAAE,UAAU,wBACV,SAAA,CAAAkG,IAAQ,qBACP,wDACDA,IAAQ,uBACP,4CACDA,IAAQ,kBAAoB,6BAC5BA,IAAQ,mBAAqB,6CAC7BA,IAAQ,sBACP,+CACDA,IAAQ,kBACP,mDACDA,IAAQ,oBACP,+CAAA,CAAA,CACJ,CAAA,EACF,EACAlI,EAAAA,IAACQ,EAAA,CACC,GAAI0H,EACJ,QAASlH,EACT,gBAAiBa,GACfqD,GAAiB,CAAE,GAAGD,EAAe,CAACiD,CAAG,EAAGrG,CAAA,CAAS,CAAA,CAAA,CAEzD,CAAA,EAlCKqG,CAAA,CAoCR,EAEDlG,EAAAA,KAACkF,EAAA,CACC,QAAShB,GACT,SAAU/B,EACV,UAAU,uCAEV,SAAA,CAAAnE,EAAAA,IAACiI,EAAA,CAAK,UAAU,cAAA,CAAe,EAC9B9D,EAAU,gBAAkB,+BAAA,CAAA,CAAA,CAC/B,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAGAnE,EAAAA,IAAC0H,GAAY,MAAM,YACjB,eAAC,MAAA,CAAI,UAAU,YAEb,SAAA1F,EAAAA,KAACoF,EAAA,CACC,SAAA,CAAApH,MAAC2H,EAAA,CACC,SAAA3F,EAAAA,KAAC4F,EAAA,CAAU,UAAU,oBACnB,SAAA,CAAA5H,EAAAA,IAACvF,GAAA,CAAW,UAAU,OAAO,KAAM,GAAI,EAAE,qBAAA,CAAA,CAE3C,CAAA,CACF,EACAuH,EAAAA,KAACqF,EAAA,CAAY,UAAU,YAErB,SAAA,CAAArF,EAAAA,KAAC,MAAA,CAAI,UAAU,8DACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAhC,EAAAA,IAACmI,GAAA,CAAM,UAAU,gBAAgB,KAAM,GAAI,SAC1C,MAAA,CACC,SAAA,CAAAnI,EAAAA,IAAC,IAAA,CAAE,UAAU,sBAAsB,SAAA,2BAAwB,QAC1D,IAAA,CAAE,UAAU,wBAAyB,SAAAyG,GAAe3L,CAAY,CAAA,CAAE,CAAA,CAAA,CACrE,CAAA,EACF,EACAkF,EAAAA,IAACoI,IAAM,QAAStN,EAAe,UAAY,YACxC,SAAAA,EAAe,cAAgB,oBAAA,CAClC,CAAA,EACF,EAGCE,GACCgH,EAAAA,KAAC,MAAA,CAAI,UAAU,6EACb,SAAA,CAAAhC,EAAAA,IAACqI,GAAA,CAAY,UAAU,eAAe,KAAM,GAAI,SAC/C,MAAA,CACC,SAAA,CAAArI,EAAAA,IAAC,IAAA,CAAE,UAAU,mCAAmC,SAAA,4BAEhD,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,uBAAwB,SAAAhF,CAAA,CAAU,CAAA,CAAA,CACjD,CAAA,EACF,EAIFgH,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAACkF,EAAA,CACC,QAASb,GACT,SAAU,CAACjL,GAA0B8I,EACrC,QAAS9I,EAAyB,UAAY,UAC9C,UAAU,8BAEV,SAAA,CAAA4E,EAAAA,IAACsI,GAAA,CAAM,UAAU,eAAe,KAAM,GAAI,EAC1CtI,EAAAA,IAAC,QAAK,SAAA,cAAA,CAAY,EACjBkE,GAAmBlE,EAAAA,IAACuI,GAAA,CAAU,UAAU,eAAe,KAAM,EAAA,CAAI,CAAA,CAAA,CAAA,EAGpEvG,EAAAA,KAACkF,EAAA,CACC,QAASZ,GACT,SAAU,CAAC/K,GAAwB2I,EACnC,QAAS3I,EAAuB,UAAY,UAC5C,UAAU,8BAEV,SAAA,CAAAyE,EAAAA,IAACwI,GAAA,CAAS,UAAU,iBAAiB,KAAM,GAAI,EAC/CxI,EAAAA,IAAC,QAAK,SAAA,YAAA,CAAU,EACfkE,GAAmBlE,EAAAA,IAACuI,GAAA,CAAU,UAAU,eAAe,KAAM,EAAA,CAAI,CAAA,CAAA,CAAA,EAGpEvG,EAAAA,KAACkF,EAAA,CACC,QAASX,GACT,SACG,CAACnL,GAA0B,CAACG,GAAyB2I,EAExD,UAAU,gEAEV,SAAA,CAAAlE,MAACuI,IAAU,UAAWrE,EAAkB,eAAiB,GAAI,KAAM,GAAI,EACvElE,EAAAA,IAAC,QAAK,SAAA,mBAAA,CAAiB,CAAA,CAAA,CAAA,CACzB,EACF,QAGCuD,GAAA,EAAU,EAEXvB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAhC,EAAAA,IAACL,EAAA,CAAM,UAAU,cAAc,SAAA,8BAA2B,EAC1DK,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,4CAAA,CAErC,CAAA,EACF,EACAA,EAAAA,IAACQ,EAAA,CAAO,QAAS+D,EAAiB,gBAAiBiC,EAAA,CAAgB,CAAA,EACrE,EAECjC,UACE,MAAA,CACC,SAAA,CAAAvE,EAAAA,IAACL,EAAA,CAAM,UAAU,UAAU,SAAA,uBAAoB,EAC/CK,EAAAA,IAAC,MAAA,CAAI,UAAU,sBACZ,SAAA,CAAC,GAAI,GAAI,GAAI,GAAG,EAAE,IAAI1D,GACrB0F,EAAAA,KAACkF,EAAA,CAEC,QAASzC,IAAiBnI,EAAW,UAAY,UACjD,KAAK,KACL,QAAS,IAAMoI,GAAgBpI,CAAQ,EAEtC,SAAA,CAAAA,EAAS,KAAA,CAAA,EALLA,CAAA,CAOR,CAAA,CACH,CAAA,CAAA,CACF,CAAA,EAEJ,EAGCqI,GACC3C,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAhC,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,kCAE/C,EACAgC,EAAAA,KAAC,MAAA,CAAI,UAAU,gDACb,SAAA,CAAAhC,MAAC,MAAA,CACC,SAAAgC,EAAAA,KAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,CAAA,UACrB1G,GAAAqJ,EAAe,QAAf,YAAArJ,GAAsB,mBAAoB,CAAA,CAAA,CAClD,CAAA,CACF,EACA0E,MAAC,MAAA,CACC,SAAAgC,EAAAA,KAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,CAAA,aAChB2C,EAAe,gBAAkB,CAAA,CAAA,CAC9C,CAAA,CACF,EACA3E,MAAC,MAAA,CACC,SAAAgC,EAAAA,KAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,CAAA,WAClB2C,EAAe,cAAgB,EAAE,MAAA,CAAA,CAC5C,CAAA,CACF,EACA3E,MAAC,MAAA,CACC,SAAAgC,EAAAA,KAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,CAAA,oBACT2C,EAAe,eAAiB,CAAA,CAAA,CACpD,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,EACF,EACF,EAGA3E,MAAC0H,EAAA,CAAY,MAAM,UACjB,gBAACN,EAAA,CACC,SAAA,CAAApF,OAAC2F,EAAA,CACC,SAAA,CAAA3H,EAAAA,IAAC4H,GAAU,SAAA,6BAAA,CAA2B,EACtC5H,EAAAA,IAAC6H,GAAgB,SAAA,6CAAA,CAA2C,CAAA,EAC9D,EACA7F,EAAAA,KAACqF,EAAA,CAAY,UAAU,YACpB,SAAA,CAAA,OAAO,QAAQlC,CAAO,EAAE,IAAI,CAAC,CAAC+C,EAAKlH,CAAK,IACvCgB,EAAAA,KAAC,MAAA,CAEC,UAAU,0DAEV,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAkG,IAAQ,kBAAoBlI,EAAAA,IAACyI,GAAA,CAAI,UAAU,gBAAgB,KAAM,GAAI,EACrEP,IAAQ,eAAiBlI,EAAAA,IAACwI,IAAS,UAAU,gBAAgB,KAAM,GAAI,EACvEN,IAAQ,yBACPlI,EAAAA,IAAC8G,GAAK,UAAU,gBAAgB,KAAM,GAAI,EAE3CoB,IAAQ,iBACPlI,EAAAA,IAAC0I,IAAY,UAAU,gBAAgB,KAAM,GAAI,SAElD,MAAA,CACC,SAAA,CAAA1G,EAAAA,KAACrC,EAAA,CAAM,QAASuI,EAAK,UAAU,cAC5B,SAAA,CAAAA,IAAQ,kBAAoB,gBAC5BA,IAAQ,eAAiB,4BACzBA,IAAQ,yBAA2B,kBACnCA,IAAQ,iBAAmB,qBAAA,EAC9B,EACAlG,EAAAA,KAAC,IAAA,CAAE,UAAU,wBACV,SAAA,CAAAkG,IAAQ,kBACP,sDACDA,IAAQ,eAAiB,+CACzBA,IAAQ,yBACP,2DACDA,IAAQ,iBAAmB,2CAAA,CAAA,CAC9B,CAAA,CAAA,CACF,CAAA,EACF,EACAlI,EAAAA,IAACQ,EAAA,CACC,GAAI0H,EACJ,QAASlH,EACT,gBAAiBa,GAAWuD,GAAW,CAAE,GAAGD,EAAS,CAAC+C,CAAG,EAAGrG,CAAA,CAAS,CAAA,CAAA,CACvE,CAAA,EAjCKqG,CAAA,CAmCR,EAEDlG,EAAAA,KAACkF,EAAA,CACC,QAASd,GACT,SAAUjC,EACV,UAAU,uCAEV,SAAA,CAAAnE,EAAAA,IAACiI,EAAA,CAAK,UAAU,cAAA,CAAe,EAC9B9D,EAAU,gBAAkB,gCAAA,CAAA,CAAA,QAG9BZ,GAAA,EAAU,EAGXvB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,+CACZ,SAAA,CAAAhC,EAAAA,IAACqI,GAAA,CAAY,UAAU,OAAO,KAAM,GAAI,EAAE,gBAAA,EAE5C,EACArG,EAAAA,KAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAA,EAAAA,KAAC,IAAA,CAAE,UAAU,4BAA4B,SAAA,CAAA,MACpChC,EAAAA,IAAC,UAAO,SAAA,aAAA,CAAW,EAAS,gKAEOA,EAAAA,IAAC,UAAO,SAAA,cAAA,CAAY,EAAS,GAAA,EACrE,EACAgC,EAAAA,KAACkF,EAAA,CACC,QAAQ,cACR,UAAU,SACV,QAAS3B,GACT,SAAUV,GAEV,SAAA,CAAA7E,EAAAA,IAAC2I,GAAA,CAAO,UAAU,cAAA,CAAe,EAChC9D,GACG,0BACA,qCAAA,CAAA,CAAA,CACN,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAGA7E,MAAC0H,EAAA,CAAY,MAAM,cACjB,gBAACN,EAAA,CACC,SAAA,CAAApF,OAAC2F,EAAA,CACC,SAAA,CAAA3H,EAAAA,IAAC4H,GAAU,SAAA,8BAAA,CAA4B,EACvC5H,EAAAA,IAAC6H,GAAgB,SAAA,0CAAA,CAAwC,CAAA,EAC3D,EACA7F,EAAAA,KAACqF,EAAA,CAAY,UAAU,YACrB,SAAA,CAAArF,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0DACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAhC,EAAAA,IAAC1F,GAAA,CAAM,UAAU,uBAAA,CAAwB,SACxC,MAAA,CACC,SAAA,CAAA0F,EAAAA,IAACL,EAAA,CAAM,UAAU,cAAc,SAAA,SAAM,EACrCK,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,kCAAA,CAAgC,CAAA,CAAA,CACvE,CAAA,EACF,EACAgC,EAAAA,KAAC,SAAA,CACC,UAAU,8BACV,MAAOqD,EAAY,SACnB,SAAU0C,GAAKzC,EAAe,CAAE,GAAGD,EAAa,SAAU0C,EAAE,OAAO,MAAO,EAE1E,SAAA,CAAA/H,EAAAA,IAAC,SAAA,CAAO,MAAM,KAAK,SAAA,WAAQ,EAC3BA,EAAAA,IAAC,SAAA,CAAO,MAAM,KAAK,SAAA,UAAO,EAC1BA,EAAAA,IAAC,SAAA,CAAO,MAAM,KAAK,SAAA,UAAO,EAC1BA,EAAAA,IAAC,SAAA,CAAO,MAAM,KAAK,SAAA,SAAA,CAAO,CAAA,CAAA,CAAA,CAC5B,EACF,EAEAgC,EAAAA,KAAC,MAAA,CAAI,UAAU,0DACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAhC,EAAAA,IAACxF,GAAA,CAAQ,UAAU,uBAAA,CAAwB,SAC1C,MAAA,CACC,SAAA,CAAAwF,EAAAA,IAACL,EAAA,CAAM,UAAU,cAAc,SAAA,QAAK,EACpCK,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,4BAAA,CAA0B,CAAA,CAAA,CACjE,CAAA,EACF,EACAgC,EAAAA,KAAC,SAAA,CACC,UAAU,8BACV,MAAOqD,EAAY,MACnB,SAAU0C,GAAKzC,EAAe,CAAE,GAAGD,EAAa,MAAO0C,EAAE,OAAO,MAAO,EAEvE,SAAA,CAAA/H,EAAAA,IAAC,SAAA,CAAO,MAAM,QAAQ,SAAA,QAAK,EAC3BA,EAAAA,IAAC,SAAA,CAAO,MAAM,OAAO,SAAA,SAAM,EAC3BA,EAAAA,IAAC,SAAA,CAAO,MAAM,SAAS,SAAA,SAAA,CAAO,CAAA,CAAA,CAAA,CAChC,CAAA,CACF,CAAA,EACF,EAEAgC,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,0DACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAhC,EAAAA,IAACwI,GAAA,CAAS,UAAU,uBAAA,CAAwB,SAC3C,MAAA,CACC,SAAA,CAAAxI,EAAAA,IAACL,EAAA,CAAM,UAAU,cAAc,SAAA,SAAM,EACrCK,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,mBAAA,CAAiB,CAAA,CAAA,CACxD,CAAA,EACF,EACAgC,EAAAA,KAAC,SAAA,CACC,UAAU,8BACV,MAAOqD,EAAY,MACnB,SAAU0C,GAAKzC,EAAe,CAAE,GAAGD,EAAa,MAAO0C,EAAE,OAAO,MAAO,EAEvE,SAAA,CAAA/H,EAAAA,IAAC,SAAA,CAAO,MAAM,SAAS,SAAA,oBAAiB,EACxCA,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,oBAAA,CAAkB,CAAA,CAAA,CAAA,CAC7C,EACF,EAEAgC,EAAAA,KAAC,MAAA,CAAI,UAAU,0DACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAhC,EAAAA,IAAC1F,GAAA,CAAM,UAAU,uBAAA,CAAwB,SACxC,MAAA,CACC,SAAA,CAAA0F,EAAAA,IAACL,EAAA,CAAM,UAAU,cAAc,SAAA,SAAM,EACrCK,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,8BAAA,CAA4B,CAAA,CAAA,CACnE,CAAA,EACF,EACAgC,EAAAA,KAAC,SAAA,CACC,UAAU,8BACV,MAAOqD,EAAY,SACnB,SAAU0C,GAAKzC,EAAe,CAAE,GAAGD,EAAa,SAAU0C,EAAE,OAAO,MAAO,EAE1E,SAAA,CAAA/H,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,WAAQ,EAC5BA,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,aAAU,EAC9BA,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,YAAS,EAC7BA,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,iBAAA,CAAe,CAAA,CAAA,CAAA,CACrC,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAEAgC,EAAAA,KAACkF,EAAA,CACC,QAASf,GACT,SAAUhC,EACV,UAAU,2CAEV,SAAA,CAAAnE,EAAAA,IAACiI,EAAA,CAAK,UAAU,cAAA,CAAe,EAC9B9D,EAAU,gBAAkB,6BAAA,CAAA,CAAA,CAC/B,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ","x_google_ignoreList":[0,1,2,6]}