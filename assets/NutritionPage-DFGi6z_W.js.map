{"version":3,"file":"NutritionPage-DFGi6z_W.js","sources":["../../node_modules/lucide-react/dist/esm/icons/apple.js","../../src/features/nutrition/pages/NutritionPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.541.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 6.528V3a1 1 0 0 1 1-1h0\", key: \"11qiee\" }],\n  [\n    \"path\",\n    {\n      d: \"M18.237 21A15 15 0 0 0 22 11a6 6 0 0 0-10-4.472A6 6 0 0 0 2 11a15.1 15.1 0 0 0 3.763 10 3 3 0 0 0 3.648.648 5.5 5.5 0 0 1 5.178 0A3 3 0 0 0 18.237 21\",\n      key: \"110c12\"\n    }\n  ]\n];\nconst Apple = createLucideIcon(\"apple\", __iconNode);\n\nexport { __iconNode, Apple as default };\n//# sourceMappingURL=apple.js.map\n","// client/src/pages/Nutrition.tsx\nimport React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// D√©claration globale pour window.gtag\ndeclare global {\n  interface Window {\n    gtag?: (\n      command: 'event',\n      action: string,\n      parameters: {\n        meal_type?: string;\n        meal_name?: string;\n        sport?: string;\n        user_id?: string;\n        event_category?: string;\n        event_label?: string;\n        value?: number;\n      }\n    ) => void;\n  }\n}\n\nimport {\n  Target,\n  Coffee,\n  Sun,\n  Moon as MoonIcon,\n  Apple,\n  Zap,\n  Info,\n  Dumbbell,\n  Footprints,\n  Trophy,\n  AlertTriangle,\n  Plus,\n  Calendar,\n  TrendingUp,\n  ChevronDown,\n  ChevronUp,\n  Eye,\n  EyeOff,\n  Brain,\n  ChevronRight,\n} from 'lucide-react';\nimport { appStore } from '@/store/appStore';\nimport { useToast } from '@/shared/hooks/use-toast';\nimport AIIntelligence from '@/features/ai-coach/components/AIIntelligence';\nimport { UniformHeader } from '@/features/profile/components/UniformHeader';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { supabase } from '@/lib/supabase';\n\n// --- TYPES & INTERFACES ---\ntype Sport = 'strength' | 'basketball' | 'american_football' | 'tennis' | 'endurance' | 'football';\n\ninterface MealSuggestion {\n  name: string;\n  icon: React.ElementType;\n  meal_type_db: string;\n  calories?: number;\n  description?: string;\n  priority: 'high' | 'medium' | 'low';\n}\n\ninterface SportNutritionConfig {\n  emoji: string;\n  calorieModifier: number;\n  proteinMultiplier: number;\n  carbMultiplier: number;\n  dailyTip: string;\n  hydrationTip: string;\n  mealSuggestions: { [key: string]: MealSuggestion };\n}\n\ninterface NutritionGoals {\n  calories: number;\n  protein: number;\n  carbs: number;\n  fat: number;\n  water: number;\n}\n\ninterface DailyNutritionData {\n  calories: number;\n  protein: number;\n  carbs: number;\n  fat: number;\n  water: number;\n  lastUpdated: Date;\n}\n\n// --- CONFIGURATION NUTRITIONNELLE PAR SPORT ---\nconst sportsNutritionData: Record<Sport, SportNutritionConfig> = {\n  strength: {\n    emoji: 'üí™',\n    calorieModifier: 300,\n    proteinMultiplier: 1.5,\n    carbMultiplier: 1.0,\n    dailyTip:\n      \"Priorisez les prot√©ines dans les 90 minutes apr√®s l'entra√Ænement pour maximiser la r√©paration et la croissance musculaire.\",\n    hydrationTip: 'Une bonne hydratation est cruciale pour la force. Visez au moins 2.5L par jour.',\n    mealSuggestions: {\n      breakfast: {\n        name: 'Petit-d√©jeuner Prot√©in√©',\n        icon: Coffee,\n        meal_type_db: 'breakfast',\n        calories: 450,\n        description: '≈íufs, avoine, fruits',\n        priority: 'high',\n      },\n      post_workout: {\n        name: 'Post-Entra√Ænement',\n        icon: Dumbbell,\n        meal_type_db: 'snack',\n        calories: 250,\n        description: 'Prot√©ine + glucides rapides',\n        priority: 'high',\n      },\n      lunch: {\n        name: 'D√©jeuner Force',\n        icon: Sun,\n        meal_type_db: 'lunch',\n        calories: 650,\n        description: 'Viande maigre, riz, l√©gumes',\n        priority: 'medium',\n      },\n      dinner: {\n        name: 'D√Æner R√©cup√©ration',\n        icon: MoonIcon,\n        meal_type_db: 'dinner',\n        calories: 600,\n        description: 'Poisson, quinoa, l√©gumes verts',\n        priority: 'medium',\n      },\n    },\n  },\n  basketball: {\n    emoji: 'üèÄ',\n    calorieModifier: 250,\n    proteinMultiplier: 1.2,\n    carbMultiplier: 1.3,\n    dailyTip:\n      \"Les glucides √† action rapide 1-2h avant un match peuvent vous donner l'√©nergie explosive n√©cessaire.\",\n    hydrationTip:\n      \"L'hydratation est la cl√© de l'endurance. Buvez r√©guli√®rement tout au long de la journ√©e.\",\n    mealSuggestions: {\n      pre_game: {\n        name: 'Repas pr√©-match',\n        icon: Zap,\n        meal_type_db: 'lunch',\n        calories: 550,\n        description: 'P√¢tes, sauce tomate, blanc de poulet',\n        priority: 'high',\n      },\n      snack: {\n        name: 'Collation √©nerg√©tique',\n        icon: Apple,\n        meal_type_db: 'snack',\n        calories: 200,\n        description: 'Fruits secs, eau de coco',\n        priority: 'high',\n      },\n      breakfast: {\n        name: 'Petit-d√©jeuner √ânergie',\n        icon: Coffee,\n        meal_type_db: 'breakfast',\n        calories: 400,\n        description: \"Banane, flocons d'avoine, miel\",\n        priority: 'medium',\n      },\n      dinner: {\n        name: 'D√Æner de r√©cup√©ration',\n        icon: MoonIcon,\n        meal_type_db: 'dinner',\n        calories: 650,\n        description: 'Saumon, patate douce, brocolis',\n        priority: 'medium',\n      },\n    },\n  },\n  american_football: {\n    emoji: 'üèà',\n    calorieModifier: 500,\n    proteinMultiplier: 1.6,\n    carbMultiplier: 1.1,\n    dailyTip:\n      'Un apport calorique √©lev√© et riche en prot√©ines est essentiel pour construire et maintenir la masse musculaire.',\n    hydrationTip:\n      \"Ne sous-estimez pas les pertes d'eau sous l'√©quipement. Buvez plus que votre soif.\",\n    mealSuggestions: {\n      breakfast: {\n        name: 'Petit-d√©jeuner de Masse',\n        icon: Coffee,\n        meal_type_db: 'breakfast',\n        calories: 600,\n        description: '≈íufs brouill√©s, bacon, pain complet',\n        priority: 'high',\n      },\n      snack: {\n        name: 'Collation Masse',\n        icon: Apple,\n        meal_type_db: 'snack',\n        calories: 350,\n        description: 'Shake prot√©in√©, noix',\n        priority: 'high',\n      },\n      lunch: {\n        name: 'D√©jeuner Riche',\n        icon: Sun,\n        meal_type_db: 'lunch',\n        calories: 800,\n        description: 'B≈ìuf, riz, avocat',\n        priority: 'medium',\n      },\n      dinner: {\n        name: 'D√Æner Puissance',\n        icon: MoonIcon,\n        meal_type_db: 'dinner',\n        calories: 750,\n        description: 'Steak, pommes de terre, √©pinards',\n        priority: 'medium',\n      },\n    },\n  },\n  tennis: {\n    emoji: 'üéæ',\n    calorieModifier: 150,\n    proteinMultiplier: 1.1,\n    carbMultiplier: 1.2,\n    dailyTip:\n      'Pendant un long match, des collations faciles √† dig√©rer comme une banane peuvent maintenir votre √©nergie.',\n    hydrationTip:\n      'Pensez aux √©lectrolytes ! Ajoutez une pinc√©e de sel et un peu de jus de citron √† votre eau.',\n    mealSuggestions: {\n      on_court_snack: {\n        name: 'Collation Court',\n        icon: Apple,\n        meal_type_db: 'snack',\n        calories: 150,\n        description: 'Banane, gel √©nerg√©tique',\n        priority: 'high',\n      },\n      breakfast: {\n        name: 'Petit-d√©jeuner L√©ger',\n        icon: Coffee,\n        meal_type_db: 'breakfast',\n        calories: 350,\n        description: 'Yaourt grec, fruits, granola',\n        priority: 'high',\n      },\n      lunch: {\n        name: 'D√©jeuner √âquilibr√©',\n        icon: Sun,\n        meal_type_db: 'lunch',\n        calories: 500,\n        description: 'Salade de quinoa, l√©gumes',\n        priority: 'medium',\n      },\n      dinner: {\n        name: 'D√Æner R√©cup√©ration',\n        icon: MoonIcon,\n        meal_type_db: 'dinner',\n        calories: 550,\n        description: 'Poisson blanc, l√©gumes vapeur',\n        priority: 'medium',\n      },\n    },\n  },\n  endurance: {\n    emoji: 'üèÉ‚Äç‚ôÇÔ∏è',\n    calorieModifier: 400,\n    proteinMultiplier: 1.2,\n    carbMultiplier: 1.5,\n    dailyTip:\n      'Les glucides complexes (avoine, riz complet, patates douces) sont votre meilleur carburant.',\n    hydrationTip:\n      \"Commencez √† vous hydrater bien avant une longue sortie. L'hydratation de la veille est importante.\",\n    mealSuggestions: {\n      breakfast: {\n        name: 'Petit-d√©jeuner √ânergie',\n        icon: Coffee,\n        meal_type_db: 'breakfast',\n        calories: 500,\n        description: 'Porridge, banane, miel',\n        priority: 'high',\n      },\n      snack: {\n        name: 'Collation Endurance',\n        icon: Apple,\n        meal_type_db: 'snack',\n        calories: 250,\n        description: 'Dattes, amandes',\n        priority: 'high',\n      },\n      lunch: {\n        name: 'Repas Glucides Complexes',\n        icon: Footprints,\n        meal_type_db: 'lunch',\n        calories: 650,\n        description: 'P√¢tes compl√®tes, l√©gumes',\n        priority: 'medium',\n      },\n      dinner: {\n        name: 'D√Æner de R√©cup√©ration',\n        icon: MoonIcon,\n        meal_type_db: 'dinner',\n        calories: 600,\n        description: 'Saumon, patate douce',\n        priority: 'medium',\n      },\n    },\n  },\n  football: {\n    emoji: '‚öΩ',\n    calorieModifier: 200,\n    proteinMultiplier: 1.1,\n    carbMultiplier: 1.4,\n    dailyTip:\n      \"L'endurance n√©cessite des r√©serves de glycog√®ne pleines. Mangez des glucides complexes 3-4h avant les matchs.\",\n    hydrationTip:\n      \"Pendant les 90 minutes de jeu, votre corps perd beaucoup d'eau. Hydratez-vous avant, pendant et apr√®s.\",\n    mealSuggestions: {\n      pre_match: {\n        name: 'Repas pr√©-match',\n        icon: Zap,\n        meal_type_db: 'lunch',\n        calories: 600,\n        description: 'Riz, poulet, l√©gumes',\n        priority: 'high',\n      },\n      half_time: {\n        name: 'Mi-temps',\n        icon: Apple,\n        meal_type_db: 'snack',\n        calories: 100,\n        description: 'Orange, eau',\n        priority: 'high',\n      },\n      breakfast: {\n        name: 'Petit-d√©jeuner Foot',\n        icon: Coffee,\n        meal_type_db: 'breakfast',\n        calories: 400,\n        description: 'C√©r√©ales, lait, fruits',\n        priority: 'medium',\n      },\n      dinner: {\n        name: 'R√©cup√©ration',\n        icon: MoonIcon,\n        meal_type_db: 'dinner',\n        calories: 650,\n        description: 'Poisson, quinoa, l√©gumes',\n        priority: 'medium',\n      },\n    },\n  },\n};\n\nconst Nutrition: React.FC = () => {\n  // --- HOOKS ET STATE ---\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const { appStoreUser } = appStore();\n\n  const [dailyData, setDailyData] = useState<DailyNutritionData>({\n    calories: 850,\n    protein: 45,\n    carbs: 120,\n    fat: 25,\n    water: 1200,\n    lastUpdated: new Date(),\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [profileIncomplete, setProfileIncomplete] = useState(false);\n  const [showDetailedView, setShowDetailedView] = useState(false);\n  const [showCoachingModal, setShowCoachingModal] = useState(false);\n  const [showAllMeals, setShowAllMeals] = useState(false);\n\n  // --- MAPPING SPORT UTILISATEUR ---\n  const getSportCategory = useCallback((sport: string): Sport => {\n    const mappings: Record<string, Sport> = {\n      basketball: 'basketball',\n      tennis: 'tennis',\n      american_football: 'american_football',\n      football: 'football',\n      running: 'endurance',\n      cycling: 'endurance',\n      swimming: 'endurance',\n      'course √† pied': 'endurance',\n      musculation: 'strength',\n      powerlifting: 'strength',\n      crossfit: 'strength',\n      weightlifting: 'strength',\n    };\n    return mappings[sport?.toLowerCase()] || 'strength';\n  }, []);\n\n  const userSport = getSportCategory(appStoreUser.sport || 'none');\n  const sportConfig = sportsNutritionData[userSport];\n\n  // --- CALCULS PERSONNALIS√âS S√âCURIS√âS ---\n  const personalizedGoals = useMemo((): NutritionGoals => {\n    const weight = appStoreUser?.weight ?? 70;\n    const height = appStoreUser?.height ?? 170;\n    const age = appStoreUser?.age ?? 30;\n    const gender = appStoreUser?.gender ?? 'male';\n\n    // V√©rifier si le profil est complet\n    const isIncomplete = !appStoreUser?.weight || !appStoreUser?.height || !appStoreUser?.age;\n    setProfileIncomplete(isIncomplete);\n\n    let baseCalories = appStoreUser?.daily_calories || 0;\n\n    // Calcul BMR avec formule Harris-Benedict\n    if (!baseCalories && weight && height && age) {\n      const bmr =\n        gender === 'male'\n          ? 88.362 + 13.397 * weight + 4.799 * height - 5.677 * age\n          : 447.593 + 9.247 * weight + 3.098 * height - 4.33 * age;\n\n      const activityFactor =\n        {\n          student: 1.4,\n          office_worker: 1.3,\n          physical_job: 1.6,\n          retired: 1.2,\n        }[appStoreUser?.lifestyle as string] ?? 1.4;\n\n      baseCalories = Math.round(bmr * activityFactor);\n    }\n\n    // Valeur de s√©curit√© si calcul impossible\n    if (!baseCalories) {\n      baseCalories = gender === 'male' ? 2200 : 1800;\n    }\n\n    // Ajustements selon objectifs\n    let calorieAdjustment = 0;\n    if (appStoreUser?.primary_goals?.includes('weight_loss')) calorieAdjustment -= 300;\n    if (appStoreUser?.primary_goals?.includes('muscle_gain')) calorieAdjustment += 400;\n\n    const finalCalories = baseCalories + sportConfig.calorieModifier + calorieAdjustment;\n\n    return {\n      calories: finalCalories,\n      protein: Math.round(((finalCalories * 0.15) / 4) * sportConfig.proteinMultiplier),\n      carbs: Math.round(((finalCalories * 0.5) / 4) * sportConfig.carbMultiplier),\n      fat: Math.round((finalCalories * 0.3) / 9),\n      water: Math.round(weight * 35), // 35ml par kg de poids\n    };\n  }, [appStoreUser, sportConfig]);\n\n  // --- CHARGEMENT DES DONN√âES NUTRITIONNELLES ---\n  const loadNutritionData = useCallback(async () => {\n    if (!appStoreUser?.id) return;\n\n    setIsLoading(true);\n    try {\n      const today = new Date().toISOString().split('T')[0];\n\n      const { data, error } = await supabase\n        .from('daily_stats')\n        .select('total_calories, total_protein, total_carbs, total_fat, water_intake_ml')\n        .eq('user_id', appStoreUser.id)\n        .eq('stat_date', today)\n        .single();\n\n      if (!error && data) {\n        setDailyData({\n          calories: (data as any).total_calories || 0,\n          protein: (data as any).total_protein || 0,\n          carbs: (data as any).total_carbs || 0,\n          fat: (data as any).total_fat || 0,\n          water: (data as any).water_intake_ml || 0,\n          lastUpdated: new Date(),\n        });\n      }\n    } catch {\n      console.error('Erreur chargement nutrition:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [appStoreUser?.id]);\n\n  // --- HANDLERS ---\n  const handleOpenMeal = useCallback(\n    (mealTypeDb: string, mealName: string) => {\n      // Analytics\n      if (typeof window !== 'undefined' && window.gtag) {\n        window.gtag('event', 'meal_suggestion_clicked', {\n          meal_type: mealTypeDb,\n          meal_name: mealName,\n          sport: userSport,\n          user_id: appStoreUser?.id,\n        });\n      }\n\n      // Navigation vers la page de d√©tail du repas\n      navigate(`/meals/${mealTypeDb}`, {\n        state: {\n          suggestionName: mealName,\n          sportOptimized: true,\n          userSport,\n        },\n      });\n    },\n    [navigate, userSport, appStoreUser?.id]\n  );\n\n  const handleCompleteProfile = useCallback(() => {\n    navigate('/profile/complete');\n  }, [navigate]);\n\n  const handleAddFood = useCallback(() => {\n    navigate('/meals/add');\n  }, [navigate]);\n\n  // --- CALCULS POURCENTAGES ---\n  const caloriesPercentage = Math.min((dailyData.calories / personalizedGoals.calories) * 100, 100);\n  const proteinPercentage = Math.min((dailyData.protein / personalizedGoals.protein) * 100, 100);\n  const carbsPercentage = Math.min((dailyData.carbs / personalizedGoals.carbs) * 100, 100);\n  const fatPercentage = Math.min((dailyData.fat / personalizedGoals.fat) * 100, 100);\n  const waterPercentage = Math.min((dailyData.water / personalizedGoals.water) * 100, 100);\n\n  // --- COMPOSANTS ---\n  const MacroCard = ({\n    title,\n    current,\n    goal,\n    unit,\n    color,\n    percentage,\n    tip,\n    compact = false,\n  }: {\n    title: string;\n    current: number;\n    goal: number;\n    unit: string;\n    color: string;\n    percentage: number;\n    tip?: string;\n    compact?: boolean;\n  }) => (\n    <Card className=\"bg-white border-gray-100\">\n      <CardContent className={compact ? 'p-3' : 'p-4'}>\n        <div className=\"flex items-center justify-between mb-2\">\n          <h4 className={`font-medium text-gray-600 ${compact ? 'text-xs' : 'text-sm'}`}>\n            {title}\n          </h4>\n          <Badge variant=\"outline\" className=\"text-xs\">\n            {Math.round(percentage)}%\n          </Badge>\n        </div>\n        <div className=\"flex items-baseline space-x-1 mb-2\">\n          <span className={`font-bold text-gray-800 ${compact ? 'text-base' : 'text-lg'}`}>\n            {Math.round(current)}\n          </span>\n          <span className={`text-gray-500 ${compact ? 'text-xs' : 'text-sm'}`}>\n            / {goal} {unit}\n          </span>\n        </div>\n        <Progress value={percentage} className={`mb-2 ${compact ? 'h-1' : 'h-2'}`} />\n        {tip && !compact && (\n          <div className=\"text-xs text-gray-500 bg-gray-50 p-2 rounded-md\">\n            <Info size={12} className=\"inline mr-1\" />\n            {tip}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  // --- MESSAGES PERSONNALIS√âS ---\n  const getPersonalizedMessage = useCallback(() => {\n    const progress = (dailyData.calories / personalizedGoals.calories) * 100;\n    const userName = appStoreUser?.first_name || appStoreUser?.username || 'Champion';\n\n    if (progress >= 90) {\n      return `üéØ Parfait ${userName} ! Objectif nutritionnel atteint`;\n    } else if (progress >= 70) {\n      return `üí™ Excellent ${userName}, tu nourris bien ton corps !`;\n    } else if (progress >= 50) {\n      return `‚ö° Bien jou√© ${userName}, continue !`;\n    } else {\n      return `üçé ${userName}, ton corps a besoin de plus de carburant !`;\n    }\n  }, [dailyData.calories, personalizedGoals.calories, appStoreUser]);\n\n  // Repas prioritaires\n  const getPriorityMeals = useCallback(() => {\n    const meals = Object.entries(sportConfig.mealSuggestions);\n    const highPriority = meals.filter(([_, meal]) => meal.priority === 'high');\n    return highPriority.slice(0, 2); // Top 2 repas prioritaires\n  }, [sportConfig.mealSuggestions]);\n\n  // --- EFFECTS ---\n  useEffect(() => {\n    loadNutritionData();\n  }, [loadNutritionData]);\n\n  useEffect(() => {\n    if (profileIncomplete) {\n      toast.warning('Compl√©tez votre profil pour des recommandations nutritionnelles pr√©cises');\n    }\n  }, [profileIncomplete, toast, handleCompleteProfile]);\n\n  const priorityMeals = getPriorityMeals();\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"px-4 py-6 space-y-6 max-w-2xl mx-auto\">\n        {/* Header Uniforme */}\n        <UniformHeader\n          title=\"Nutrition\"\n          subtitle={`${sportConfig.emoji} ${getPersonalizedMessage()}`}\n          showBackButton={true}\n          showSettings={true}\n          showNotifications={true}\n          showProfile={true}\n          gradient={true}\n        />\n\n        {/* Alerte Profil Incomplet */}\n        {profileIncomplete && (\n          <Card className=\"border-amber-200 bg-amber-50\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-start space-x-3\">\n                <AlertTriangle className=\"h-5 w-5 text-amber-600 mt-0.5\" />\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-amber-800 mb-1\">Profil incomplet</h3>\n                  <p className=\"text-amber-700 text-sm mb-3\">\n                    Renseignez votre poids, taille et √¢ge pour des calculs nutritionnels pr√©cis.\n                  </p>\n                  <Button\n                    size=\"sm\"\n                    onClick={handleCompleteProfile}\n                    className=\"bg-amber-600 hover:bg-amber-700\"\n                  >\n                    Compl√©ter mon profil\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Calories avec Objectif Personnalis√© - FOCUS */}\n        <Card className=\"bg-gradient-to-r from-green-600 to-teal-600 text-white\">\n          <CardContent className=\"p-5\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"font-semibold text-lg\">Calories aujourd'hui</h3>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowDetailedView(!showDetailedView)}\n                  className=\"text-white hover:bg-white/20\"\n                >\n                  {showDetailedView ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                </Button>\n                <Target size={24} />\n              </div>\n            </div>\n            <div className=\"text-center mb-4\">\n              <div className=\"text-4xl font-bold mb-1\">{dailyData.calories}</div>\n              <div className=\"text-white/80\">\n                sur {personalizedGoals.calories} kcal ({appStoreUser?.sport || 'sport'})\n              </div>\n              <div className=\"text-sm text-white/70 mt-1\">\n                {personalizedGoals.calories - dailyData.calories > 0\n                  ? `${personalizedGoals.calories - dailyData.calories} kcal restantes`\n                  : 'Objectif atteint ! üéâ'}\n              </div>\n            </div>\n            <div className=\"w-full bg-white/20 rounded-full h-3 mb-4\">\n              <div\n                className=\"bg-white rounded-full h-3 transition-all duration-500\"\n                style={{ width: `${caloriesPercentage}%` }}\n              />\n            </div>\n            <div className=\"flex justify-center\">\n              <Button\n                onClick={handleAddFood}\n                variant=\"secondary\"\n                size=\"sm\"\n                className=\"bg-white/20 hover:bg-white/30 text-white border-white/30\"\n              >\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Ajouter un aliment\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Macronutriments - MODE COMPACT/D√âTAILL√â */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-gray-800\">Vos Macros</h2>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant={showDetailedView ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setShowDetailedView(!showDetailedView)}\n                className=\"text-xs\"\n              >\n                {showDetailedView ? 'Vue Simple' : 'Vue D√©taill√©e'}\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={() => navigate('/nutrition/details')}>\n                <TrendingUp className=\"h-4 w-4 mr-2\" />\n                Historique\n              </Button>\n            </div>\n          </div>\n\n          {showDetailedView ? (\n            // Vue d√©taill√©e avec tabs\n            <Tabs defaultValue=\"macros\" className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-2\">\n                <TabsTrigger value=\"macros\">Macronutriments</TabsTrigger>\n                <TabsTrigger value=\"hydration\">Hydratation</TabsTrigger>\n              </TabsList>\n              <TabsContent value=\"macros\" className=\"space-y-3\">\n                <div className=\"grid grid-cols-1 gap-3\">\n                  <MacroCard\n                    title=\"Prot√©ines\"\n                    current={dailyData.protein}\n                    goal={personalizedGoals.protein}\n                    unit=\"g\"\n                    color=\"bg-red-500\"\n                    percentage={proteinPercentage}\n                    tip={\n                      userSport === 'strength'\n                        ? 'Crucial pour la masse musculaire'\n                        : 'Important pour la r√©cup√©ration'\n                    }\n                  />\n                  <MacroCard\n                    title=\"Glucides\"\n                    current={dailyData.carbs}\n                    goal={personalizedGoals.carbs}\n                    unit=\"g\"\n                    color=\"bg-blue-500\"\n                    percentage={carbsPercentage}\n                    tip={\n                      userSport === 'endurance'\n                        ? 'Votre carburant principal'\n                        : \"√ânergie pour l'entra√Ænement\"\n                    }\n                  />\n                  <MacroCard\n                    title=\"Lipides\"\n                    current={dailyData.fat}\n                    goal={personalizedGoals.fat}\n                    unit=\"g\"\n                    color=\"bg-yellow-500\"\n                    percentage={fatPercentage}\n                    tip=\"Essentiels pour les hormones et l'absorption des vitamines\"\n                  />\n                </div>\n              </TabsContent>\n              <TabsContent value=\"hydration\">\n                <MacroCard\n                  title=\"Hydratation\"\n                  current={dailyData.water / 1000}\n                  goal={personalizedGoals.water / 1000}\n                  unit=\"L\"\n                  color=\"bg-blue-500\"\n                  percentage={waterPercentage}\n                  tip={sportConfig.hydrationTip}\n                />\n              </TabsContent>\n            </Tabs>\n          ) : (\n            // Vue compacte\n            <div className=\"grid grid-cols-2 gap-3\">\n              <MacroCard\n                title=\"Prot√©ines\"\n                current={dailyData.protein}\n                goal={personalizedGoals.protein}\n                unit=\"g\"\n                color=\"bg-red-500\"\n                percentage={proteinPercentage}\n                compact={true}\n              />\n              <MacroCard\n                title=\"Glucides\"\n                current={dailyData.carbs}\n                goal={personalizedGoals.carbs}\n                unit=\"g\"\n                color=\"bg-blue-500\"\n                percentage={carbsPercentage}\n                compact={true}\n              />\n              <MacroCard\n                title=\"Lipides\"\n                current={dailyData.fat}\n                goal={personalizedGoals.fat}\n                unit=\"g\"\n                color=\"bg-yellow-500\"\n                percentage={fatPercentage}\n                compact={true}\n              />\n              <Card className=\"bg-white border-gray-100\">\n                <CardContent className=\"p-3\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Trophy size={14} className=\"text-purple-600\" />\n                    <span className=\"text-xs font-medium text-purple-600\">Hydratation</span>\n                  </div>\n                  <div className=\"flex items-baseline space-x-1 mb-2\">\n                    <span className=\"text-base font-bold text-gray-800\">\n                      {Math.round((dailyData.water / 1000) * 10) / 10}L\n                    </span>\n                    <span className=\"text-xs text-gray-500\">\n                      / {Math.round((personalizedGoals.water / 1000) * 10) / 10}L\n                    </span>\n                  </div>\n                  <Progress value={waterPercentage} className=\"h-1\" />\n                </CardContent>\n              </Card>\n            </div>\n          )}\n        </div>\n\n        {/* Repas Recommand√©s - PRIORITAIRES UNIQUEMENT */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-lg font-semibold text-gray-800\">Repas Recommand√©s</h2>\n            <Badge variant=\"outline\" className=\"text-xs\">\n              Optimis√© {sportConfig.emoji}\n            </Badge>\n          </div>\n\n          <div className=\"space-y-3\">\n            {priorityMeals.map(([key, meal]) => (\n              <Card key={key} className=\"hover:shadow-md transition-shadow\">\n                <CardContent className=\"p-0\">\n                  <button\n                    onClick={() => handleOpenMeal(meal.meal_type_db, meal.name)}\n                    className=\"w-full text-left p-4 flex items-center space-x-3 hover:bg-gray-50 transition-colors rounded-lg\"\n                    aria-label={`Voir le d√©tail du ${meal.name}`}\n                  >\n                    <div className=\"p-2 rounded-lg bg-green-100 text-green-600\">\n                      {React.createElement(meal.icon, { size: 20 })}\n                    </div>\n                    <div className=\"flex-1\">\n                      <h3 className=\"font-semibold text-gray-800\">{meal.name}</h3>\n                      <p className=\"text-sm text-gray-500\">{meal.description}</p>\n                      {meal.calories && (\n                        <p className=\"text-xs text-gray-400 mt-1\">~{meal.calories} kcal</p>\n                      )}\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        Priorit√©\n                      </Badge>\n                      <span className=\"text-gray-400\">‚Üí</span>\n                    </div>\n                  </button>\n                </CardContent>\n              </Card>\n            ))}\n\n            {/* Voir tous les repas */}\n            <Collapsible open={showAllMeals} onOpenChange={setShowAllMeals}>\n              <CollapsibleTrigger asChild>\n                <Button variant=\"ghost\" className=\"w-full text-sm\">\n                  {showAllMeals\n                    ? 'Voir moins'\n                    : `Voir tous les repas (${Object.keys(sportConfig.mealSuggestions).length - 2} autres)`}\n                  {showAllMeals ? (\n                    <ChevronUp className=\"h-4 w-4 ml-2\" />\n                  ) : (\n                    <ChevronDown className=\"h-4 w-4 ml-2\" />\n                  )}\n                </Button>\n              </CollapsibleTrigger>\n              <CollapsibleContent className=\"space-y-3 mt-3\">\n                {Object.entries(sportConfig.mealSuggestions)\n                  .filter(([_, meal]) => meal.priority !== 'high')\n                  .map(([key, meal]) => (\n                    <Card key={key} className=\"hover:shadow-md transition-shadow\">\n                      <CardContent className=\"p-0\">\n                        <button\n                          onClick={() => handleOpenMeal(meal.meal_type_db, meal.name)}\n                          className=\"w-full text-left p-4 flex items-center space-x-3 hover:bg-gray-50 transition-colors rounded-lg\"\n                        >\n                          <div className=\"p-2 rounded-lg bg-gray-100 text-gray-600\">\n                            {React.createElement(meal.icon, { size: 20 })}\n                          </div>\n                          <div className=\"flex-1\">\n                            <h3 className=\"font-semibold text-gray-800\">{meal.name}</h3>\n                            <p className=\"text-sm text-gray-500\">{meal.description}</p>\n                            {meal.calories && (\n                              <p className=\"text-xs text-gray-400 mt-1\">~{meal.calories} kcal</p>\n                            )}\n                          </div>\n                          <span className=\"text-gray-400\">‚Üí</span>\n                        </button>\n                      </CardContent>\n                    </Card>\n                  ))}\n              </CollapsibleContent>\n            </Collapsible>\n          </div>\n        </div>\n\n        {/* Conseil du jour Personnalis√© */}\n        <Card className=\"bg-blue-50 border-blue-100\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-start space-x-3\">\n              <div className=\"p-2 bg-blue-500 rounded-full\">\n                <Zap size={16} className=\"text-white\" />\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-blue-800 mb-1\">\n                  Conseil pour {appStoreUser?.sport?.replace('_', ' ') || 'votre sport'}\n                </h3>\n                <p className=\"text-blue-700 text-sm\">{sportConfig.dailyTip}</p>\n                <div className=\"mt-2 p-2 bg-blue-100 rounded-md\">\n                  <p className=\"text-xs text-blue-800\">\n                    <strong>Hydratation:</strong> {sportConfig.hydrationTip}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Analyse Personnalis√©e - MODAL */}\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <Brain className=\"h-5 w-5 text-purple-600\" />\n                <div>\n                  <h3 className=\"font-semibold text-gray-800 text-sm\">Analyse Nutritionnelle</h3>\n                  <p className=\"text-xs text-gray-600\">IA personnalis√©e et conseils</p>\n                </div>\n              </div>\n              <Dialog open={showCoachingModal} onOpenChange={setShowCoachingModal}>\n                <DialogTrigger asChild>\n                  <Button variant=\"outline\" size=\"sm\">\n                    Ouvrir <ChevronRight className=\"h-3 w-3 ml-1\" />\n                  </Button>\n                </DialogTrigger>\n                <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\n                  <DialogHeader>\n                    <DialogTitle>Analyse Nutritionnelle IA</DialogTitle>\n                  </DialogHeader>\n                  <AIIntelligence\n                    pillar=\"nutrition\"\n                    showPredictions={true}\n                    showCoaching={true}\n                    showRecommendations={true}\n                  />\n                </DialogContent>\n              </Dialog>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Actions rapides */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-sm flex items-center\">\n              <Calendar className=\"h-4 w-4 mr-2\" />\n              Actions rapides\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"p-4 pt-0\">\n            <div className=\"grid grid-cols-2 gap-3\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => navigate('/meals/history')}\n                className=\"w-full\"\n              >\n                <Calendar className=\"h-4 w-4 mr-2\" />\n                Historique\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => navigate('/nutrition/goals')}\n                className=\"w-full\"\n              >\n                <Target className=\"h-4 w-4 mr-2\" />\n                Objectifs\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Nutrition;\n"],"names":["__iconNode","Apple","createLucideIcon","sportsNutritionData","Coffee","Dumbbell","Sun","MoonIcon","Zap","Footprints","Nutrition","navigate","useNavigate","toast","useToast","appStoreUser","appStore","dailyData","setDailyData","useState","isLoading","setIsLoading","profileIncomplete","setProfileIncomplete","showDetailedView","setShowDetailedView","showCoachingModal","setShowCoachingModal","showAllMeals","setShowAllMeals","userSport","useCallback","sport","sportConfig","personalizedGoals","useMemo","weight","height","age","gender","isIncomplete","baseCalories","bmr","activityFactor","calorieAdjustment","_a","_b","finalCalories","loadNutritionData","today","data","error","supabase","handleOpenMeal","mealTypeDb","mealName","handleCompleteProfile","handleAddFood","caloriesPercentage","proteinPercentage","carbsPercentage","fatPercentage","waterPercentage","MacroCard","title","current","goal","unit","color","percentage","tip","compact","jsx","Card","CardContent","jsxs","Badge","Progress","Info","getPersonalizedMessage","progress","userName","getPriorityMeals","_","meal","useEffect","priorityMeals","UniformHeader","AlertTriangle","Button","EyeOff","Eye","Target","Plus","TrendingUp","Tabs","TabsList","TabsTrigger","TabsContent","Trophy","key","React","Collapsible","CollapsibleTrigger","ChevronUp","ChevronDown","CollapsibleContent","Brain","Dialog","DialogTrigger","ChevronRight","DialogContent","DialogHeader","DialogTitle","AIIntelligence","CardHeader","CardTitle","Calendar"],"mappings":"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","x_google_ignoreList":[0]}