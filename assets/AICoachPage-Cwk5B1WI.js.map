{"version":3,"file":"AICoachPage-Cwk5B1WI.js","sources":["../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../src/features/ai-coach/pages/AICoachPage.tsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  ChangeEvent,\n  KeyboardEvent,\n  memo,\n  FC,\n} from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport clsx from 'clsx';\nimport { AiOutlineSend, AiOutlineLoading3Quarters } from 'react-icons/ai';\nimport { toast } from 'sonner';\n\n/* --- TYPES --- */\n\ntype AIMessageRole = 'user' | 'assistant';\ninterface AIChatMessage {\n  role: AIMessageRole;\n  content: string;\n}\n\ninterface ExerciseAnalysisResult {\n  postureScore: number;\n  warning: string;\n  caloriesBurned: number;\n}\n\ninterface PersonalPlan {\n  workouts: string[];\n  nutrition: { calories: number; macros: { protein: number; carbs: number; fat: number } };\n  hydration: { dailyLiters: number };\n  sleep: { hours: number };\n}\n\ntype QuickActionType = 'planJour' | 'ajusterCharge' | 'analyserForme';\n\n/* --- API SIMULATIONS --- */\n\nasync function fetchAICoachResponse(params: { messages: AIChatMessage[] }): Promise<string> {\n  // Simule un stream ou un délai\n  await new Promise(r => setTimeout(r, 1500));\n  return 'Réponse IA simulée basée sur le contexte et messages...';\n}\n\nasync function fetchExerciseAnalysis(videoElem: HTMLVideoElement): Promise<ExerciseAnalysisResult> {\n  // Simule analyse vidéo\n  await new Promise(r => setTimeout(r, 1000));\n  return {\n    postureScore: 85,\n    warning: '',\n    caloriesBurned: 12,\n  };\n}\n\nasync function fetchPersonalizedPlan(): Promise<PersonalPlan> {\n  return {\n    workouts: ['Séance full body', 'Cardio HIIT'],\n    nutrition: { calories: 2200, macros: { protein: 150, carbs: 250, fat: 70 } },\n    hydration: { dailyLiters: 2.5 },\n    sleep: { hours: 7.5 },\n  };\n}\n\n/* --- HOOK VOICE INPUT/OUTPUT --- */\n\nconst useVoice = () => {\n  const [text, setText] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef<SpeechRecognition | null>(null);\n  const voiceSupported = Boolean(\n    window.SpeechRecognition || (window as any).webkitSpeechRecognition\n  );\n\n  useEffect(() => {\n    if (!voiceSupported) return;\n    const SpeechRecognitionClass = (window.SpeechRecognition ||\n      (window as any).webkitSpeechRecognition) as typeof SpeechRecognition;\n    recognitionRef.current = new SpeechRecognitionClass();\n    recognitionRef.current.continuous = false;\n    recognitionRef.current.interimResults = false;\n    recognitionRef.current.lang = 'fr-FR';\n\n    recognitionRef.current.onresult = event => {\n      if (event.results.length > 0) {\n        const transcript = event.results[0][0].transcript;\n        setText(transcript);\n      }\n    };\n    recognitionRef.current.onend = () => setIsListening(false);\n    recognitionRef.current.onerror = e => {\n      console.error('Recognition error', e);\n      toast.error('Erreur micro, veuillez réessayer.');\n      setIsListening(false);\n    };\n  }, [voiceSupported]);\n\n  const listen = useCallback(() => {\n    if (!voiceSupported || !recognitionRef.current) return;\n    setText('');\n    setIsListening(true);\n    recognitionRef.current.start();\n  }, [voiceSupported]);\n\n  const stopListening = useCallback(() => {\n    if (!voiceSupported || !recognitionRef.current) return;\n    recognitionRef.current.stop();\n    setIsListening(false);\n  }, [voiceSupported]);\n\n  return {\n    text,\n    isListening,\n    listen,\n    stopListening,\n    voiceSupported,\n  };\n};\n\n/* --- COMPOSANTS SECONDAIRES --- */\n\ninterface UniformHeaderProps {\n  title: string;\n  subtitle?: string;\n}\nconst UniformHeader: FC<UniformHeaderProps> = memo(({ title, subtitle }) => (\n  <header className=\"bg-blue-700 dark:bg-blue-900 text-white p-4 shadow-md sticky top-0 z-30\">\n    <h1 className=\"text-3xl font-semibold\">{title}</h1>\n    {subtitle && <p className=\"text-sm opacity-80\">{subtitle}</p>}\n  </header>\n));\n\ninterface SkeletonProps {\n  count: number;\n  className?: string;\n}\nconst Skeleton: FC<SkeletonProps> = ({ count, className }) => (\n  <>\n    {Array.from({ length: count }).map((_, i) => (\n      <div key={i} className={clsx('bg-gray-300 animate-pulse rounded-md my-1', className)} />\n    ))}\n  </>\n);\n\ninterface ChatMessageProps {\n  role: AIMessageRole;\n  content: string;\n}\nconst ChatMessage: FC<ChatMessageProps> = ({ role, content }) => {\n  const isUser = role === 'user';\n  return (\n    <motion.div\n      initial={{ opacity: 0, x: isUser ? 50 : -50 }}\n      animate={{ opacity: 1, x: 0 }}\n      exit={{ opacity: 0 }}\n      className={clsx(\n        'max-w-[75%] p-3 rounded-lg mb-2 whitespace-pre-wrap',\n        isUser ? 'bg-blue-600 text-white self-end' : 'bg-gray-200 text-gray-900 self-start',\n        'shadow-sm'\n      )}\n      role=\"article\"\n      aria-label={isUser ? 'Message utilisateur' : 'Message assistant AI'}\n    >\n      {content}\n    </motion.div>\n  );\n};\n\ninterface QuickActionsProps {\n  onAction: (action: QuickActionType) => void;\n}\nconst QuickActions: FC<QuickActionsProps> = ({ onAction }) => (\n  <section\n    aria-label=\"Actions rapides pour coach IA\"\n    className=\"flex justify-around bg-gray-100 dark:bg-gray-800 p-3 rounded-lg shadow-inner\"\n  >\n    <button\n      onClick={() => onAction('planJour')}\n      className=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 focus:ring-2 focus:ring-green-400\"\n      aria-label=\"Générer plan du jour\"\n    >\n      Plan du jour\n    </button>\n    <button\n      onClick={() => onAction('ajusterCharge')}\n      className=\"bg-yellow-600 text-white px-4 py-2 rounded-md hover:bg-yellow-700 focus:ring-2 focus:ring-yellow-400\"\n      aria-label=\"Ajuster charge\"\n    >\n      Ajuster charge\n    </button>\n    <button\n      onClick={() => onAction('analyserForme')}\n      className=\"bg-purple-600 text-white px-4 py-2 rounded-md hover:bg-purple-700 focus:ring-2 focus:ring-purple-400\"\n      aria-label=\"Analyser forme\"\n    >\n      Analyser forme\n    </button>\n  </section>\n);\n\ninterface VideoAnalyserProps {\n  videoRef: React.RefObject<HTMLVideoElement>;\n  exerciseAnalysis: ExerciseAnalysisResult | null;\n  isLiveCoaching: boolean;\n}\nconst VideoAnalyser: FC<VideoAnalyserProps> = ({ videoRef, exerciseAnalysis, isLiveCoaching }) => (\n  <div className=\"flex flex-col items-center\">\n    <video\n      ref={videoRef}\n      autoPlay\n      muted\n      playsInline\n      className=\"rounded-lg shadow-md border w-full max-w-md aspect-video bg-black\"\n      aria-label=\"Flux vidéo pour analyse de la forme\"\n    />\n    {isLiveCoaching ? (\n      <p className=\"mt-2 text-green-600 font-semibold\">Coaching live activé</p>\n    ) : (\n      <p className=\"mt-2 text-gray-500 italic\">Coaching live désactivé</p>\n    )}\n    {exerciseAnalysis && (\n      <div className=\"mt-4 text-sm bg-gray-100 dark:bg-gray-800 p-3 rounded-lg w-full max-w-md shadow-inner\">\n        <p>\n          <strong>Score posture:</strong> {exerciseAnalysis.postureScore}%\n        </p>\n        {exerciseAnalysis.warning && (\n          <p className=\"text-red-600 font-semibold\">⚠️ {exerciseAnalysis.warning}</p>\n        )}\n        <p>\n          <strong>Calories estimées brûlées:</strong> {exerciseAnalysis.caloriesBurned}\n        </p>\n      </div>\n    )}\n  </div>\n);\n\n/* --- HOOK LOGIQUE PRINCIPALE --- */\n\nconst useAICoachLogic = () => {\n  const [messages, setMessages] = useState<AIChatMessage[]>([]);\n  const [input, setInput] = useState('');\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [exerciseAnalysis, setExerciseAnalysis] = useState<ExerciseAnalysisResult | null>(null);\n  const [personalPlan, setPersonalPlan] = useState<PersonalPlan | null>(null);\n  const [isLiveCoaching, setIsLiveCoaching] = useState(false);\n\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  // Voice input/output\n  const { text: voiceText, isListening, listen, stopListening, voiceSupported } = useVoice();\n\n  // Append user message and get AI response\n  const sendMessage = useCallback(\n    async (content: string) => {\n      if (!content.trim()) return;\n      const newUserMsg: AIChatMessage = { role: 'user', content };\n      setMessages(prev => [...prev, newUserMsg]);\n      setIsStreaming(true);\n      try {\n        const response = await fetchAICoachResponse({ messages: [...messages, newUserMsg] });\n        setMessages(prev => [...prev, { role: 'assistant', content: response }]);\n      } catch {\n        toast.error('Erreur communication IA.');\n      } finally {\n        setIsStreaming(false);\n      }\n    },\n    [messages]\n  );\n\n  // On voice text change and listen stopped, send voice as message\n  useEffect(() => {\n    if (voiceText && !isListening) {\n      sendMessage(voiceText);\n      setInput('');\n    }\n  }, [voiceText, isListening, sendMessage]);\n\n  // Input handlers\n  const onChangeInput = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value);\n  }, []);\n  const onKeyDownInput = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter' && input.trim()) {\n        sendMessage(input);\n        setInput('');\n      }\n    },\n    [input, sendMessage]\n  );\n\n  // Quick actions\n  const onExecuteQuickAction = useCallback(async (action: QuickActionType) => {\n    if (action === 'planJour') {\n      try {\n        const plan = await fetchPersonalizedPlan();\n        setPersonalPlan(plan);\n        toast.success('Plan personnalisé généré.');\n      } catch {\n        toast.error('Erreur lors génération plan.');\n      }\n    } else if (action === 'ajusterCharge') {\n      toast.info('Fonction Ajuster Charge en développement.');\n    } else if (action === 'analyserForme') {\n      if (!videoRef.current) {\n        toast.error('Vidéo non disponible.');\n        return;\n      }\n      try {\n        const analysis = await fetchExerciseAnalysis(videoRef.current);\n        setExerciseAnalysis(analysis);\n        toast.success('Analyse forme terminée.');\n      } catch {\n        toast.error('Erreur analyse video.');\n      }\n    }\n  }, []);\n\n  // Live coaching - cycle analyse vidéo continu\n  useEffect(() => {\n    let animationId: number | null = null;\n\n    const analyseLoop = async () => {\n      if (!videoRef.current) return;\n      try {\n        const analysis = await fetchExerciseAnalysis(videoRef.current);\n        setExerciseAnalysis(analysis);\n      } catch {\n        // Silence error buffering\n      }\n      animationId = requestAnimationFrame(analyseLoop);\n    };\n\n    if (isLiveCoaching) analyseLoop();\n    else if (animationId) cancelAnimationFrame(animationId);\n\n    return () => {\n      if (animationId) cancelAnimationFrame(animationId);\n    };\n  }, [isLiveCoaching]);\n\n  const toggleLiveCoaching = useCallback(() => setIsLiveCoaching(v => !v), []);\n\n  return {\n    messages,\n    input,\n    isStreaming,\n    onChangeInput,\n    onKeyDownInput,\n    sendMessage,\n    voiceSupported,\n    isListening,\n    listen,\n    stopListening,\n    onExecuteQuickAction,\n    exerciseAnalysis,\n    personalPlan,\n    videoRef,\n    isLiveCoaching,\n    toggleLiveCoaching,\n  };\n};\n\n/* --- PAGE PRINCIPALE AICoachPage --- */\n\nconst AICoachPage: FC = () => {\n  const {\n    messages,\n    input,\n    isStreaming,\n    onChangeInput,\n    onKeyDownInput,\n    voiceSupported,\n    isListening,\n    listen,\n    stopListening,\n    onExecuteQuickAction,\n    exerciseAnalysis,\n    personalPlan,\n    videoRef,\n    isLiveCoaching,\n    toggleLiveCoaching,\n  } = useAICoachLogic();\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 flex flex-col\">\n      <UniformHeader title=\"AI Coach\" subtitle=\"Votre coach fitness intelligent\" />\n      <main className=\"flex-grow max-w-4xl mx-auto p-4 grid gap-8\">\n        <QuickActions onAction={onExecuteQuickAction} />\n\n        <section\n          aria-label=\"Chat conversation avec AI Coach\"\n          className=\"flex flex-col border rounded-lg p-4 min-h-[400px] bg-white dark:bg-gray-900 shadow\"\n          role=\"log\"\n          aria-live=\"polite\"\n          aria-relevant=\"additions\"\n        >\n          <div className=\"flex-1 overflow-y-auto space-y-4 scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-200 dark:scrollbar-thumb-gray-700 dark:scrollbar-track-gray-800\">\n            {messages.length === 0 && !isStreaming && (\n              <Skeleton count={3} className=\"h-10 rounded-md\" />\n            )}\n            <AnimatePresence initial={false}>\n              {messages.map((m, i) => (\n                <ChatMessage key={i} role={m.role} content={m.content} />\n              ))}\n              {isStreaming && (\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                  className=\"italic text-gray-500 dark:text-gray-400\"\n                  aria-live=\"assertive\"\n                >\n                  <AiOutlineLoading3Quarters className=\"inline animate-spin mr-1\" />\n                  L'IA rédige...\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              if (input.trim()) onExecuteQuickAction('planJour');\n            }}\n            className=\"flex items-center mt-2\"\n            aria-label=\"Envoyer un message au coach AI\"\n          >\n            <input\n              type=\"text\"\n              aria-label=\"Votre question ou message\"\n              placeholder=\"Posez une question ou dites quelque chose...\"\n              value={input}\n              onChange={onChangeInput}\n              onKeyDown={onKeyDownInput}\n              disabled={isStreaming}\n              className=\"flex-grow p-2 border border-gray-300 dark:border-gray-600 rounded-l-md dark:bg-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n            {voiceSupported && (\n              <button\n                type=\"button\"\n                aria-pressed={isListening}\n                onClick={isListening ? stopListening : listen}\n                title={isListening ? \"Arrêter l'écoute vocale\" : \"Activer l'écoute vocale\"}\n                className={clsx(\n                  'px-3 py-2 border border-l-0 rounded-r-md focus:outline-none',\n                  isListening ? 'bg-red-600 text-white' : 'bg-gray-300 dark:bg-gray-700'\n                )}\n              >\n                🎤\n              </button>\n            )}\n            <button\n              type=\"submit\"\n              disabled={isStreaming || input.trim() === ''}\n              aria-disabled={isStreaming || input.trim() === ''}\n              title=\"Envoyer\"\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-r-md hover:bg-blue-700 focus:ring-2 focus:ring-blue-500\"\n            >\n              <AiOutlineSend size={20} />\n            </button>\n          </form>\n        </section>\n\n        <section\n          aria-label=\"Analyse vidéo de la forme d'exercice\"\n          className=\"border rounded-lg p-4 bg-white dark:bg-gray-900 shadow flex flex-col items-center\"\n        >\n          <h2 className=\"text-lg font-semibold mb-2\">Analyse vidéo</h2>\n          <VideoAnalyser\n            videoRef={videoRef}\n            exerciseAnalysis={exerciseAnalysis}\n            isLiveCoaching={isLiveCoaching}\n          />\n          <button\n            onClick={toggleLiveCoaching}\n            aria-pressed={isLiveCoaching}\n            className={clsx(\n              'mt-3 px-4 py-2 rounded-md focus:outline-none',\n              isLiveCoaching ? 'bg-green-600 text-white' : 'bg-gray-300 dark:bg-gray-700'\n            )}\n          >\n            {isLiveCoaching ? 'Arrêter le coaching live' : 'Démarrer coaching live'}\n          </button>\n        </section>\n\n        {personalPlan && (\n          <section\n            aria-label=\"Plan personnalisé généré\"\n            className=\"border rounded-lg p-4 bg-white dark:bg-gray-900 shadow max-w-4xl overflow-auto\"\n          >\n            <h2 className=\"text-lg font-semibold mb-2\">Plan personnalisé</h2>\n            <pre className=\"text-xs whitespace-pre-wrap\">\n              {JSON.stringify(personalPlan, null, 2)}\n            </pre>\n          </section>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default memo(AICoachPage);\n"],"names":["PopChildMeasure","React.Component","prevProps","element","size","PopChild","children","isPresent","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","width","height","top","left","style","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","isComplete","context","useMemo","_","key","React.useEffect","PresenceContext","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","safeToRemove","usePresence","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","exitingChildren","nextChildren","forceRender","LayoutGroupContext","Fragment","onExit","isEveryExitComplete","isExitComplete","fetchAICoachResponse","params","r","fetchExerciseAnalysis","videoElem","fetchPersonalizedPlan","useVoice","text","setText","isListening","setIsListening","recognitionRef","voiceSupported","useEffect","SpeechRecognitionClass","event","transcript","e","toast","listen","stopListening","UniformHeader","memo","title","subtitle","jsxs","Skeleton","count","className","clsx","ChatMessage","role","content","isUser","motion","QuickActions","onAction","VideoAnalyser","videoRef","exerciseAnalysis","isLiveCoaching","useAICoachLogic","messages","setMessages","input","setInput","isStreaming","setIsStreaming","setExerciseAnalysis","personalPlan","setPersonalPlan","setIsLiveCoaching","voiceText","sendMessage","newUserMsg","prev","response","onChangeInput","onKeyDownInput","onExecuteQuickAction","action","plan","analysis","animationId","analyseLoop","toggleLiveCoaching","v","AICoachPage","m","AiOutlineLoading3Quarters","AiOutlineSend","AICoachPage$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}