{"version":3,"mappings":"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","names":["e","t","n","i","s","o","r","c","a","d","__publicField","_a","h","f","u","l","m","p","v","g","y","E","b","L","P","T","_","M","w","C","I","F","k","_b","A","B","S","N","q","x","H","O","$","supabaseUrl","supabaseAnonKey","supabase","createClient","pwaConfig","appStore","create","subscribeWithSelector","persist","set","_get","user","newState","state","newPreferences","cacheKey","data","_state","sync","syncId","useUSLocation","location","setLocation","useState","isLoading","setIsLoading","error","setError","getUSLocation","useCallback","position","resolve","reject","feature","context","city","zip","_c","timezone","getTimezoneFromState","useUSUnits","preferences","isImperial","convertWeight","value","fromUnit","toUnit","targetUnit","convertHeight","feet","inches","totalInches","convertDistance","convertVolume","convertTemperature","useConversationalAI","isProcessing","setIsProcessing","onboarding","updateOnboarding","sendMessage","message","response","userMessage","aiMessage","err","errorMessage","generateRecommendations","type","recommendations","useOfflineSync","ui","addPendingSync","removePendingSync","isSyncing","setIsSyncing","syncPendingData","addToSyncQueue","useEffect","handleOnline","OnboardingPage","lazy","__vitePreload","DashboardPage","NotFoundPage","AppLoadingSpinner","AppErrorBoundary","appRoutes","AuthGuard","children","requiresAuth","requiresOnboarding","isAuthenticated","useLocation","session","userData","userError","subscription","event","jsx","MyFitHeroIndex","isInitialized","setIsInitialized","appVersion","buildNumber","registration","updateOnlineStatus","onCLS","onINP","onFCP","onLCP","onTTFB","route","metaDescription","jsxs","Suspense","Router","path","Component","Route","index","React"],"ignoreList":[0],"sources":["../../node_modules/web-vitals/dist/web-vitals.js","../../src/pages/index.tsx"],"sourcesContent":["let e=-1;const t=t=>{addEventListener(\"pageshow\",(n=>{n.persisted&&(e=n.timeStamp,t(n))}),!0)},n=(e,t,n,i)=>{let s,o;return r=>{t.value>=0&&(r||i)&&(o=t.value-(s??0),(o||void 0===s)&&(s=t.value,t.delta=o,t.rating=((e,t)=>e>t[1]?\"poor\":e>t[0]?\"needs-improvement\":\"good\")(t.value,n),e(t)))}},i=e=>{requestAnimationFrame((()=>requestAnimationFrame((()=>e()))))},s=()=>{const e=performance.getEntriesByType(\"navigation\")[0];if(e&&e.responseStart>0&&e.responseStart<performance.now())return e},o=()=>{const e=s();return e?.activationStart??0},r=(t,n=-1)=>{const i=s();let r=\"navigate\";e>=0?r=\"back-forward-cache\":i&&(document.prerendering||o()>0?r=\"prerender\":document.wasDiscarded?r=\"restore\":i.type&&(r=i.type.replace(/_/g,\"-\")));return{name:t,value:n,rating:\"good\",delta:0,entries:[],id:`v5-${Date.now()}-${Math.floor(8999999999999*Math.random())+1e12}`,navigationType:r}},c=new WeakMap;function a(e,t){return c.get(e)||c.set(e,new t),c.get(e)}class d{t;i=0;o=[];h(e){if(e.hadRecentInput)return;const t=this.o[0],n=this.o.at(-1);this.i&&t&&n&&e.startTime-n.startTime<1e3&&e.startTime-t.startTime<5e3?(this.i+=e.value,this.o.push(e)):(this.i=e.value,this.o=[e]),this.t?.(e)}}const h=(e,t,n={})=>{try{if(PerformanceObserver.supportedEntryTypes.includes(e)){const i=new PerformanceObserver((e=>{Promise.resolve().then((()=>{t(e.getEntries())}))}));return i.observe({type:e,buffered:!0,...n}),i}}catch{}},f=e=>{let t=!1;return()=>{t||(e(),t=!0)}};let u=-1;const l=new Set,m=()=>\"hidden\"!==document.visibilityState||document.prerendering?1/0:0,p=e=>{if(\"hidden\"===document.visibilityState){if(\"visibilitychange\"===e.type)for(const e of l)e();isFinite(u)||(u=\"visibilitychange\"===e.type?e.timeStamp:0,removeEventListener(\"prerenderingchange\",p,!0))}},v=()=>{if(u<0){const e=o(),n=document.prerendering?void 0:globalThis.performance.getEntriesByType(\"visibility-state\").filter((t=>\"hidden\"===t.name&&t.startTime>e))[0]?.startTime;u=n??m(),addEventListener(\"visibilitychange\",p,!0),addEventListener(\"prerenderingchange\",p,!0),t((()=>{setTimeout((()=>{u=m()}))}))}return{get firstHiddenTime(){return u},onHidden(e){l.add(e)}}},g=e=>{document.prerendering?addEventListener(\"prerenderingchange\",(()=>e()),!0):e()},y=[1800,3e3],E=(e,s={})=>{g((()=>{const c=v();let a,d=r(\"FCP\");const f=h(\"paint\",(e=>{for(const t of e)\"first-contentful-paint\"===t.name&&(f.disconnect(),t.startTime<c.firstHiddenTime&&(d.value=Math.max(t.startTime-o(),0),d.entries.push(t),a(!0)))}));f&&(a=n(e,d,y,s.reportAllChanges),t((t=>{d=r(\"FCP\"),a=n(e,d,y,s.reportAllChanges),i((()=>{d.value=performance.now()-t.timeStamp,a(!0)}))})))}))},b=[.1,.25],L=(e,s={})=>{const o=v();E(f((()=>{let c,f=r(\"CLS\",0);const u=a(s,d),l=e=>{for(const t of e)u.h(t);u.i>f.value&&(f.value=u.i,f.entries=u.o,c())},m=h(\"layout-shift\",l);m&&(c=n(e,f,b,s.reportAllChanges),o.onHidden((()=>{l(m.takeRecords()),c(!0)})),t((()=>{u.i=0,f=r(\"CLS\",0),c=n(e,f,b,s.reportAllChanges),i((()=>c()))})),setTimeout(c))})))};let P=0,T=1/0,_=0;const M=e=>{for(const t of e)t.interactionId&&(T=Math.min(T,t.interactionId),_=Math.max(_,t.interactionId),P=_?(_-T)/7+1:0)};let w;const C=()=>w?P:performance.interactionCount??0,I=()=>{\"interactionCount\"in performance||w||(w=h(\"event\",M,{type:\"event\",buffered:!0,durationThreshold:0}))};let F=0;class k{u=[];l=new Map;m;p;v(){F=C(),this.u.length=0,this.l.clear()}L(){const e=Math.min(this.u.length-1,Math.floor((C()-F)/50));return this.u[e]}h(e){if(this.m?.(e),!e.interactionId&&\"first-input\"!==e.entryType)return;const t=this.u.at(-1);let n=this.l.get(e.interactionId);if(n||this.u.length<10||e.duration>t.P){if(n?e.duration>n.P?(n.entries=[e],n.P=e.duration):e.duration===n.P&&e.startTime===n.entries[0].startTime&&n.entries.push(e):(n={id:e.interactionId,entries:[e],P:e.duration},this.l.set(n.id,n),this.u.push(n)),this.u.sort(((e,t)=>t.P-e.P)),this.u.length>10){const e=this.u.splice(10);for(const t of e)this.l.delete(t.id)}this.p?.(n)}}}const A=e=>{const t=globalThis.requestIdleCallback||setTimeout;\"hidden\"===document.visibilityState?e():(e=f(e),addEventListener(\"visibilitychange\",e,{once:!0,capture:!0}),t((()=>{e(),removeEventListener(\"visibilitychange\",e,{capture:!0})})))},B=[200,500],S=(e,i={})=>{if(!globalThis.PerformanceEventTiming||!(\"interactionId\"in PerformanceEventTiming.prototype))return;const s=v();g((()=>{I();let o,c=r(\"INP\");const d=a(i,k),f=e=>{A((()=>{for(const t of e)d.h(t);const t=d.L();t&&t.P!==c.value&&(c.value=t.P,c.entries=t.entries,o())}))},u=h(\"event\",f,{durationThreshold:i.durationThreshold??40});o=n(e,c,B,i.reportAllChanges),u&&(u.observe({type:\"first-input\",buffered:!0}),s.onHidden((()=>{f(u.takeRecords()),o(!0)})),t((()=>{d.v(),c=r(\"INP\"),o=n(e,c,B,i.reportAllChanges)})))}))};class N{m;h(e){this.m?.(e)}}const q=[2500,4e3],x=(e,s={})=>{g((()=>{const c=v();let d,u=r(\"LCP\");const l=a(s,N),m=e=>{s.reportAllChanges||(e=e.slice(-1));for(const t of e)l.h(t),t.startTime<c.firstHiddenTime&&(u.value=Math.max(t.startTime-o(),0),u.entries=[t],d())},p=h(\"largest-contentful-paint\",m);if(p){d=n(e,u,q,s.reportAllChanges);const o=f((()=>{m(p.takeRecords()),p.disconnect(),d(!0)})),c=e=>{e.isTrusted&&(A(o),removeEventListener(e.type,c,{capture:!0}))};for(const e of[\"keydown\",\"click\",\"visibilitychange\"])addEventListener(e,c,{capture:!0});t((t=>{u=r(\"LCP\"),d=n(e,u,q,s.reportAllChanges),i((()=>{u.value=performance.now()-t.timeStamp,d(!0)}))}))}}))},H=[800,1800],O=e=>{document.prerendering?g((()=>O(e))):\"complete\"!==document.readyState?addEventListener(\"load\",(()=>O(e)),!0):setTimeout(e)},$=(e,i={})=>{let c=r(\"TTFB\"),a=n(e,c,H,i.reportAllChanges);O((()=>{const d=s();d&&(c.value=Math.max(d.responseStart-o(),0),c.entries=[d],a(!0),t((()=>{c=r(\"TTFB\",0),a=n(e,c,H,i.reportAllChanges),a(!0)})))}))};export{b as CLSThresholds,y as FCPThresholds,B as INPThresholds,q as LCPThresholds,H as TTFBThresholds,L as onCLS,E as onFCP,S as onINP,x as onLCP,$ as onTTFB};\n","// ====================================================================\n// MyFitHero - Index Principal - Architecturé pour le Marché US\n// ====================================================================\n\nimport React, {\n  useState,\n  useCallback,\n  useEffect,\n  lazy,\n  Suspense,\n  ReactNode,\n} from 'react';\nimport { Router, Route, useLocation } from 'wouter';\nimport { createClient } from '@supabase/supabase-js';\nimport { create } from 'zustand';\nimport { persist, subscribeWithSelector } from 'zustand/middleware';\nimport { onCLS, onFCP, onLCP, onTTFB, onINP } from 'web-vitals';\n\n// ====================================================================\n// Configuration et Types de Base\n// ====================================================================\n\n// Interfaces pour les données de géolocalisation\ninterface GeolocationContext {\n  id: string;\n  short_code?: string;\n  text?: string;\n}\n\n// Configuration Supabase optimisée pour le marché US\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL as string;\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY as string;\n\n// Instance Supabase pour usage interne - pour export, voir /lib/supabase.ts\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    storageKey: 'myfithero-auth',\n    storage: window.localStorage,\n    autoRefreshToken: true,\n    detectSessionInUrl: true,\n  },\n  realtime: {\n    params: {\n      eventsPerSecond: 10,\n    },\n  },\n  global: {\n    headers: {\n      'X-Client-Info': 'myfithero@1.0.0',\n    },\n  },\n});\n\n// Types TypeScript complets pour l'application\ninterface User {\n  id: string;\n  email: string;\n  username?: string;\n  avatar_url?: string;\n  full_name?: string;\n  created_at: string;\n  updated_at: string;\n  // Profil US-spécifique\n  preferred_units: 'imperial' | 'metric';\n  timezone: string;\n  location?: {\n    state: string;\n    city: string;\n    zip_code: string;\n  };\n  fitness_profile?: FitnessProfile;\n  subscription_tier: 'free' | 'premium' | 'elite';\n}\n\ninterface FitnessProfile {\n  // Données anthropométriques (US units par défaut)\n  weight_lbs: number;\n  height_ft: number;\n  height_in: number;\n  age: number;\n  gender: 'male' | 'female' | 'null';\n  body_fat_percentage?: number;\n\n  // Sports US populaires\n  primary_sport: USMainSports;\n  secondary_sports: USMainSports[];\n  position?: string;\n  experience_level: 'beginner' | 'intermediate' | 'advanced' | 'professional';\n\n  // Objectifs fitness\n  fitness_goals: FitnessGoal[];\n  target_weight_lbs?: number;\n  weekly_workout_frequency: number;\n\n  // Équipements disponibles\n  available_equipment: Equipment[];\n  gym_membership: boolean;\n  home_gym_setup: boolean;\n\n  // Préférences nutritionnelles US\n  dietary_restrictions: DietaryRestriction[];\n  calorie_goal_daily: number;\n  protein_goal_grams: number;\n\n  // Objectifs d'hydratation (fl oz)\n  daily_water_goal_floz: number;\n\n  // Préférences de sommeil\n  target_sleep_hours: number;\n  sleep_schedule: {\n    bedtime: string; // Format HH:MM\n    wake_time: string; // Format HH:MM\n  };\n\n  // Préférences sociales\n  privacy_level: 'public' | 'friends' | 'private';\n  share_workouts: boolean;\n  join_challenges: boolean;\n}\n\ntype USMainSports =\n  | 'basketball'\n  | 'football'\n  | 'baseball'\n  | 'soccer'\n  | 'tennis'\n  | 'swimming'\n  | 'running'\n  | 'cycling'\n  | 'weightlifting'\n  | 'crossfit'\n  | 'yoga'\n  | 'pilates'\n  | 'martial_arts'\n  | 'rock_climbing'\n  | 'skiing'\n  | 'snowboarding'\n  | 'surfing'\n  | 'golf'\n  | 'volleyball'\n  | 'gymnastics';\n\ntype FitnessGoal =\n  | 'weight_loss'\n  | 'muscle_gain'\n  | 'strength_building'\n  | 'endurance_improvement'\n  | 'flexibility_increase'\n  | 'sport_performance'\n  | 'general_fitness'\n  | 'rehabilitation'\n  | 'stress_relief'\n  | 'better_sleep';\n\ntype Equipment =\n  | 'dumbbells'\n  | 'barbell'\n  | 'kettlebells'\n  | 'resistance_bands'\n  | 'pull_up_bar'\n  | 'yoga_mat'\n  | 'treadmill'\n  | 'stationary_bike'\n  | 'rowing_machine'\n  | 'squat_rack'\n  | 'bench'\n  | 'cable_machine'\n  | 'medicine_ball'\n  | 'foam_roller'\n  | 'jump_rope';\n\ntype DietaryRestriction =\n  | 'vegetarian'\n  | 'vegan'\n  | 'pescatarian'\n  | 'keto'\n  | 'paleo'\n  | 'gluten_free'\n  | 'dairy_free'\n  | 'nut_free'\n  | 'low_carb'\n  | 'low_fat'\n  | 'mediterranean'\n  | 'intermittent_fasting'\n  | 'none';\n\n// Types pour l'onboarding conversationnel\ninterface OnboardingState {\n  currentStep: number;\n  totalSteps: number;\n  completedModules: OnboardingModule[];\n  userData: Partial<User>;\n  conversationHistory: ConversationMessage[];\n  aiRecommendations: AIRecommendation[];\n  isCompleted: boolean;\n}\n\ninterface OnboardingModule {\n  id: string;\n  name: string;\n  type: 'sport' | 'nutrition' | 'sleep' | 'hydration' | 'mental_wellness' | 'social';\n  icon: string;\n  isCompleted: boolean;\n  isOptional: boolean;\n  estimatedMinutes: number;\n  usRelevance: number; // Score de pertinence pour le marché US (0-10)\n}\n\ninterface ConversationMessage {\n  id: string;\n  type: 'ai' | 'user';\n  content: string;\n  timestamp: Date;\n  context?: Record<string, string | number | boolean> | undefined;\n  suggestedResponses?: string[];\n}\n\ninterface AIRecommendation {\n  id: string;\n  type: 'workout' | 'nutrition' | 'hydration' | 'sleep' | 'mental_health';\n  title: string;\n  description: string;\n  confidence: number;\n  usContext: string; // Contexte spécifique au marché US\n  actionable: boolean;\n  priority: 'low' | 'medium' | 'high';\n}\n\n// Types pour les workouts\ninterface Workout {\n  id: string;\n  user_id: string;\n  name: string;\n  type: WorkoutType;\n  duration_minutes: number;\n  exercises: Exercise[];\n  created_at: string;\n  completed_at?: string;\n  calories_burned?: number;\n  notes?: string;\n  rating?: number; // 1-5 stars\n  us_sport_specific?: boolean;\n  equipment_used: Equipment[];\n}\n\ninterface Exercise {\n  id: string;\n  name: string;\n  category: ExerciseCategory;\n  muscle_groups: MuscleGroup[];\n  sets: ExerciseSet[];\n  instructions: string[];\n  video_url?: string;\n  thumbnail_url?: string;\n  difficulty_level: 'beginner' | 'intermediate' | 'advanced';\n  us_sport_relevance: USMainSports[];\n  equipment_required: Equipment[];\n  alternative_exercises: string[];\n}\n\ninterface ExerciseSet {\n  id: string;\n  exercise_id: string;\n  set_number: number;\n  reps?: number;\n  weight_lbs?: number;\n  duration_seconds?: number;\n  distance_miles?: number;\n  rest_seconds: number;\n  perceived_exertion?: number; // RPE 1-10\n  notes?: string;\n  is_warmup: boolean;\n  is_failure: boolean;\n}\n\ntype WorkoutType =\n  | 'strength'\n  | 'cardio'\n  | 'hiit'\n  | 'yoga'\n  | 'pilates'\n  | 'sport_specific'\n  | 'flexibility'\n  | 'rehabilitation'\n  | 'circuit'\n  | 'crossfit';\n\ntype ExerciseCategory =\n  | 'compound'\n  | 'isolation'\n  | 'cardio'\n  | 'plyometric'\n  | 'stability'\n  | 'flexibility'\n  | 'core'\n  | 'functional';\n\ntype MuscleGroup =\n  | 'chest'\n  | 'back'\n  | 'shoulders'\n  | 'biceps'\n  | 'triceps'\n  | 'forearms'\n  | 'core'\n  | 'quadriceps'\n  | 'hamstrings'\n  | 'glutes'\n  | 'calves'\n  | 'full_body';\n\n// Types pour la nutrition\ninterface NutritionEntry {\n  id: string;\n  user_id: string;\n  date: string;\n  meals: Meal[];\n  daily_totals: NutritionTotals;\n  water_intake_floz: number;\n  supplements: Supplement[];\n  notes?: string;\n}\n\ninterface Meal {\n  id: string;\n  type: 'breakfast' | 'lunch' | 'dinner' | 'snack';\n  foods: FoodItem[];\n  time: string;\n  calories: number;\n  macros: Macronutrients;\n}\n\ninterface FoodItem {\n  id: string;\n  name: string;\n  brand?: string;\n  serving_size: string;\n  serving_unit: USFoodUnit;\n  quantity: number;\n  calories_per_serving: number;\n  macros_per_serving: Macronutrients;\n  micronutrients?: Micronutrients;\n  is_us_food: boolean; // True pour les aliments spécifiquement US\n  barcode?: string;\n}\n\ninterface Macronutrients {\n  protein_g: number;\n  carbs_g: number;\n  fat_g: number;\n  fiber_g: number;\n  sugar_g: number;\n}\n\ninterface Micronutrients {\n  vitamin_c_mg?: number;\n  vitamin_d_iu?: number;\n  calcium_mg?: number;\n  iron_mg?: number;\n  sodium_mg?: number;\n  potassium_mg?: number;\n}\n\ninterface NutritionTotals {\n  calories: number;\n  macros: Macronutrients;\n  goal_calories: number;\n  goal_macros: Macronutrients;\n  percentage_complete: number;\n}\n\ninterface Supplement {\n  id: string;\n  name: string;\n  dosage: string;\n  time_taken: string;\n  notes?: string;\n}\n\ntype USFoodUnit =\n  | 'oz'\n  | 'lb'\n  | 'cup'\n  | 'tbsp'\n  | 'tsp'\n  | 'fl_oz'\n  | 'pint'\n  | 'quart'\n  | 'gallon'\n  | 'slice'\n  | 'piece'\n  | 'serving';\n\n// Types pour le sommeil\ninterface SleepEntry {\n  id: string;\n  user_id: string;\n  date: string;\n  bedtime: string;\n  sleep_time?: string;\n  wake_time: string;\n  total_sleep_hours: number;\n  sleep_quality: number; // 1-10\n  sleep_stages?: SleepStages;\n  sleep_environment: SleepEnvironment;\n  sleep_factors: SleepFactor[];\n  notes?: string;\n}\n\ninterface SleepStages {\n  deep_sleep_minutes: number;\n  rem_sleep_minutes: number;\n  light_sleep_minutes: number;\n  awake_minutes: number;\n}\n\ninterface SleepEnvironment {\n  temperature_f: number;\n  humidity_percentage: number;\n  noise_level: 'silent' | 'quiet' | 'moderate' | 'loud';\n  light_level: 'dark' | 'dim' | 'moderate' | 'bright';\n  comfort_rating: number; // 1-10\n}\n\ntype SleepFactor =\n  | 'caffeine'\n  | 'alcohol'\n  | 'exercise'\n  | 'stress'\n  | 'medication'\n  | 'screen_time'\n  | 'meal_timing'\n  | 'room_temperature'\n  | 'noise'\n  | 'travel'\n  | 'illness';\n\n// Types pour l'hydratation\ninterface HydrationEntry {\n  id: string;\n  user_id: string;\n  date: string;\n  entries: WaterIntake[];\n  daily_goal_floz: number;\n  total_intake_floz: number;\n  percentage_complete: number;\n  reminders_sent: number;\n  climate_factor: ClimateFactor;\n}\n\ninterface WaterIntake {\n  id: string;\n  time: string;\n  amount_floz: number;\n  source: HydrationSource;\n  temperature: 'cold' | 'room' | 'warm' | 'hot';\n  notes?: string;\n}\n\ntype HydrationSource =\n  | 'water'\n  | 'sports_drink'\n  | 'tea'\n  | 'coffee'\n  | 'juice'\n  | 'soda'\n  | 'milk'\n  | 'protein_shake'\n  | 'other';\n\ninterface ClimateFactor {\n  temperature_f: number;\n  humidity_percentage: number;\n  activity_level: 'sedentary' | 'light' | 'moderate' | 'intense';\n  sweat_rate: 'low' | 'medium' | 'high';\n}\n\n// Types pour le bien-être mental\ninterface MentalWellnessEntry {\n  id: string;\n  user_id: string;\n  date: string;\n  mood_rating: number; // 1-10\n  stress_level: number; // 1-10\n  energy_level: number; // 1-10\n  anxiety_level: number; // 1-10\n  meditation_minutes: number;\n  gratitude_notes: string[];\n  mood_factors: MoodFactor[];\n  activities: WellnessActivity[];\n  notes?: string;\n}\n\ntype MoodFactor =\n  | 'work_stress'\n  | 'relationship'\n  | 'finances'\n  | 'health'\n  | 'weather'\n  | 'sleep_quality'\n  | 'exercise'\n  | 'nutrition'\n  | 'social_interaction'\n  | 'achievement'\n  | 'relaxation'\n  | 'other';\n\ninterface WellnessActivity {\n  id: string;\n  type: WellnessActivityType;\n  duration_minutes: number;\n  rating: number; // 1-10\n  notes?: string;\n}\n\ntype WellnessActivityType =\n  | 'meditation'\n  | 'breathing_exercise'\n  | 'journaling'\n  | 'mindfulness'\n  | 'yoga'\n  | 'nature_walk'\n  | 'reading'\n  | 'music'\n  | 'art'\n  | 'social_time'\n  | 'hobby';\n\n// Types pour l'aspect social\ninterface SocialProfile {\n  id: string;\n  user_id: string;\n  display_name: string;\n  bio?: string;\n  avatar_url?: string;\n  privacy_settings: PrivacySettings;\n  stats: SocialStats;\n  badges: Badge[];\n  friends: Friend[];\n  groups: Group[];\n  challenges: Challenge[];\n}\n\ninterface PrivacySettings {\n  profile_visibility: 'public' | 'friends' | 'private';\n  workout_sharing: boolean;\n  progress_sharing: boolean;\n  location_sharing: boolean;\n  challenge_participation: boolean;\n}\n\ninterface SocialStats {\n  total_workouts: number;\n  total_calories_burned: number;\n  total_workout_minutes: number;\n  current_streak_days: number;\n  longest_streak_days: number;\n  challenges_completed: number;\n  friends_count: number;\n  groups_count: number;\n}\n\ninterface Badge {\n  id: string;\n  name: string;\n  description: string;\n  icon_url: string;\n  earned_date: string;\n  category: BadgeCategory;\n  rarity: 'common' | 'uncommon' | 'rare' | 'epic' | 'legendary';\n}\n\ntype BadgeCategory =\n  | 'workout_consistency'\n  | 'weight_loss'\n  | 'strength_gain'\n  | 'endurance'\n  | 'social'\n  | 'challenge'\n  | 'milestone'\n  | 'special_event'\n  | 'us_sport_specific';\n\ninterface Friend {\n  id: string;\n  user_id: string;\n  friend_user_id: string;\n  status: 'pending' | 'accepted' | 'blocked';\n  created_at: string;\n  friend_profile: {\n    display_name: string;\n    avatar_url?: string;\n    current_streak: number;\n    recent_activity: string;\n  };\n}\n\ninterface Group {\n  id: string;\n  name: string;\n  description: string;\n  category: GroupCategory;\n  member_count: number;\n  is_public: boolean;\n  created_by: string;\n  created_at: string;\n  us_region?: string; // Pour les groupes régionaux US\n}\n\ntype GroupCategory =\n  | 'sport_specific'\n  | 'location_based'\n  | 'goal_oriented'\n  | 'age_group'\n  | 'workout_type'\n  | 'nutrition_focused'\n  | 'beginner_friendly'\n  | 'competitive'\n  | 'support_group';\n\ninterface Challenge {\n  id: string;\n  name: string;\n  description: string;\n  type: ChallengeType;\n  goal_value: number;\n  goal_unit: string;\n  start_date: string;\n  end_date: string;\n  participants: ChallengeParticipant[];\n  prizes: Prize[];\n  is_us_themed: boolean; // Défis à thème américain\n  difficulty: 'easy' | 'medium' | 'hard' | 'extreme';\n}\n\ntype ChallengeType =\n  | 'step_count'\n  | 'workout_frequency'\n  | 'calories_burned'\n  | 'weight_loss'\n  | 'strength_gain'\n  | 'consistency'\n  | 'sport_specific'\n  | 'team_based'\n  | 'charity'\n  | 'seasonal';\n\ninterface ChallengeParticipant {\n  user_id: string;\n  display_name: string;\n  current_progress: number;\n  position: number;\n  joined_date: string;\n}\n\ninterface Prize {\n  position: number;\n  description: string;\n  value?: number;\n  sponsor?: string;\n}\n\n// Types pour les analytics et métriques\ninterface UserAnalytics {\n  user_id: string;\n  period: 'week' | 'month' | 'quarter' | 'year';\n  fitness_metrics: FitnessMetrics;\n  nutrition_metrics: NutritionMetrics;\n  sleep_metrics: SleepMetrics;\n  hydration_metrics: HydrationMetrics;\n  wellness_metrics: WellnessMetrics;\n  social_metrics: SocialMetrics;\n  generated_at: string;\n}\n\ninterface FitnessMetrics {\n  total_workouts: number;\n  total_exercise_minutes: number;\n  average_workout_duration: number;\n  calories_burned: number;\n  strength_progression: StrengthProgression[];\n  cardio_progression: CardioProgression[];\n  consistency_score: number; // 0-100\n  favorite_exercises: string[];\n  workout_frequency_by_day: Record<string, number>;\n}\n\ninterface StrengthProgression {\n  exercise_name: string;\n  start_weight_lbs: number;\n  current_weight_lbs: number;\n  max_weight_lbs: number;\n  progression_percentage: number;\n}\n\ninterface CardioProgression {\n  activity: string;\n  start_performance: number;\n  current_performance: number;\n  best_performance: number;\n  unit: string;\n  improvement_percentage: number;\n}\n\ninterface NutritionMetrics {\n  average_daily_calories: number;\n  calorie_goal_adherence: number; // Pourcentage\n  macro_distribution: Macronutrients;\n  hydration_adherence: number; // Pourcentage\n  meal_consistency: number; // Score 0-100\n  supplement_adherence: number; // Pourcentage\n  favorite_foods: string[];\n  nutrition_score: number; // Score global 0-100\n}\n\ninterface SleepMetrics {\n  average_sleep_duration: number;\n  sleep_quality_average: number;\n  bedtime_consistency: number; // Score 0-100\n  sleep_debt_hours: number;\n  best_sleep_factors: SleepFactor[];\n  worst_sleep_factors: SleepFactor[];\n  sleep_trend: 'improving' | 'stable' | 'declining';\n}\n\ninterface HydrationMetrics {\n  average_daily_intake_floz: number;\n  hydration_goal_adherence: number; // Pourcentage\n  hydration_consistency: number; // Score 0-100\n  preferred_hydration_sources: HydrationSource[];\n  dehydration_risk_days: number;\n}\n\ninterface WellnessMetrics {\n  average_mood_rating: number;\n  average_stress_level: number;\n  average_energy_level: number;\n  meditation_minutes_total: number;\n  wellness_activities_count: number;\n  mood_trend: 'improving' | 'stable' | 'declining';\n  top_mood_factors: MoodFactor[];\n}\n\ninterface SocialMetrics {\n  social_engagement_score: number; // 0-100\n  friends_added: number;\n  challenges_joined: number;\n  challenges_completed: number;\n  workout_shares: number;\n  community_interactions: number;\n  influence_score: number; // Impact sur les autres utilisateurs\n}\n\n// ====================================================================\n// Configuration PWA et Service Worker\n// ====================================================================\n\ninterface PWAConfig {\n  enableOfflineMode: boolean;\n  enablePushNotifications: boolean;\n  enableBackgroundSync: boolean;\n  cacheStrategy: 'networkFirst' | 'cacheFirst' | 'staleWhileRevalidate';\n}\n\nconst pwaConfig: PWAConfig = {\n  enableOfflineMode: true,\n  enablePushNotifications: true,\n  enableBackgroundSync: true,\n  cacheStrategy: 'staleWhileRevalidate',\n};\n\n// ====================================================================\n// Store Zustand Global pour la Gestion d'État\n// ====================================================================\n\ninterface AppState {\n  // État d'authentification\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n\n  // État d'onboarding\n  onboarding: OnboardingState;\n\n  // Préférences utilisateur\n  preferences: {\n    theme: 'light' | 'dark' | 'system';\n    language: 'en' | 'fr';\n    units: 'imperial' | 'metric';\n    notifications: NotificationSettings;\n    privacy: PrivacySettings;\n  };\n\n  // Cache des données\n  cache: {\n    workouts: Workout[];\n    exercises: Exercise[];\n    nutritionEntries: NutritionEntry[];\n    sleepEntries: SleepEntry[];\n    hydrationEntries: HydrationEntry[];\n    wellnessEntries: MentalWellnessEntry[];\n    socialData: SocialProfile | null;\n    analytics: UserAnalytics | null;\n  };\n\n  // État de l'interface\n  ui: {\n    currentPage: string;\n    isOffline: boolean;\n    lastSyncTime: string | null;\n    pendingSyncs: PendingSync[];\n  };\n\n  // Actions\n  setUser: (user: User | null) => void;\n  updateOnboarding: (state: Partial<OnboardingState>) => void;\n  updatePreferences: (preferences: Partial<AppState['preferences']>) => void;\n  updateCache: (cacheKey: keyof AppState['cache'], data: unknown) => void;\n  clearCache: () => void;\n  addPendingSync: (sync: PendingSync) => void;\n  removePendingSync: (syncId: string) => void;\n}\n\ninterface NotificationSettings {\n  workoutReminders: boolean;\n  nutritionReminders: boolean;\n  hydrationReminders: boolean;\n  sleepReminders: boolean;\n  socialNotifications: boolean;\n  challengeUpdates: boolean;\n  systemUpdates: boolean;\n  pushNotifications: boolean;\n  emailNotifications: boolean;\n}\n\ninterface PendingSync {\n  id: string;\n  type: 'workout' | 'nutrition' | 'sleep' | 'hydration' | 'wellness';\n  data: unknown;\n  timestamp: string;\n  retryCount: number;\n}\n\nconst appStore = create<AppState>()(\n  subscribeWithSelector(\n    persist(\n      (set, _get) => ({\n        // État initial\n        user: null,\n        isAuthenticated: false,\n        isLoading: true,\n\n        onboarding: {\n          currentStep: 0,\n          totalSteps: 6,\n          completedModules: [],\n          userData: {},\n          conversationHistory: [],\n          aiRecommendations: [],\n          isCompleted: false,\n        },\n\n        preferences: {\n          theme: 'system',\n          language: 'en',\n          units: 'imperial', // US par défaut\n          notifications: {\n            workoutReminders: true,\n            nutritionReminders: true,\n            hydrationReminders: true,\n            sleepReminders: true,\n            socialNotifications: true,\n            challengeUpdates: true,\n            systemUpdates: true,\n            pushNotifications: true,\n            emailNotifications: false,\n          },\n          privacy: {\n            profile_visibility: 'friends',\n            workout_sharing: true,\n            progress_sharing: true,\n            location_sharing: false,\n            challenge_participation: true,\n          },\n        },\n\n        cache: {\n          workouts: [],\n          exercises: [],\n          nutritionEntries: [],\n          sleepEntries: [],\n          hydrationEntries: [],\n          wellnessEntries: [],\n          socialData: null,\n          analytics: null,\n        },\n\n        ui: {\n          currentPage: '/',\n          isOffline: false,\n          lastSyncTime: null,\n          pendingSyncs: [],\n        },\n\n        // Actions\n        setUser: user => set({ user, isAuthenticated: !!user }),\n\n        updateOnboarding: newState =>\n          set(state => ({\n            onboarding: { ...state.onboarding, ...newState },\n          })),\n\n        updatePreferences: newPreferences =>\n          set(state => ({\n            preferences: { ...state.preferences, ...newPreferences },\n          })),\n\n        updateCache: (cacheKey, data) =>\n          set(state => ({\n            cache: { ...state.cache, [cacheKey]: data },\n          })),\n\n        clearCache: () =>\n          set(_state => ({\n            cache: {\n              workouts: [],\n              exercises: [],\n              nutritionEntries: [],\n              sleepEntries: [],\n              hydrationEntries: [],\n              wellnessEntries: [],\n              socialData: null,\n              analytics: null,\n            },\n          })),\n\n        addPendingSync: sync =>\n          set(state => ({\n            ui: {\n              ...state.ui,\n              pendingSyncs: [...state.ui.pendingSyncs, sync],\n            },\n          })),\n\n        removePendingSync: syncId =>\n          set(state => ({\n            ui: {\n              ...state.ui,\n              pendingSyncs: state.ui.pendingSyncs.filter(sync => sync.id !== syncId),\n            },\n          })),\n      }),\n      {\n        name: 'myfithero-store',\n        partialize: state => ({\n          user: state.user,\n          preferences: state.preferences,\n          onboarding: state.onboarding,\n        }),\n      }\n    )\n  )\n);\n\n// ====================================================================\n// Hooks Personnalisés pour l'Application\n// ====================================================================\n\n// Hook pour la géolocalisation US\nconst useUSLocation = () => {\n  const [location, setLocation] = useState<{\n    state: string;\n    city: string;\n    zip: string;\n    timezone: string;\n  } | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const getUSLocation = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Utiliser l'API de géolocalisation du navigateur\n      const position = await new Promise<GeolocationPosition>((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 300000, // 5 minutes\n        });\n      });\n\n      // Convertir les coordonnées en adresse US via une API de geocoding\n      const response = await fetch(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${position.coords.longitude},${position.coords.latitude}.json?access_token=${import.meta.env.VITE_MAPBOX_TOKEN}&country=us&types=place,postcode`\n      );\n\n      const data = await response.json();\n\n      if (data.features && data.features.length > 0) {\n        const feature = data.features[0];\n        const context = feature.context || [];\n\n        const state =\n          context.find((c: GeolocationContext) => c.id.startsWith('region'))?.short_code?.replace('US-', '') || '';\n        const city = feature.text || '';\n        const zip = context.find((c: GeolocationContext) => c.id.startsWith('postcode'))?.text || '';\n\n        // Déterminer le fuseau horaire basé sur l'état\n        const timezone = getTimezoneFromState(state);\n\n        setLocation({ state, city, zip, timezone });\n      }\n    } catch (err) {\n      setError('Unable to determine your location. Please ensure location services are enabled.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return { location, isLoading, error, getUSLocation };\n};\n\n// Fonction utilitaire pour déterminer le fuseau horaire\nconst getTimezoneFromState = (state: string): string => {\n  const stateTimezones: Record<string, string> = {\n    CA: 'America/Los_Angeles',\n    NY: 'America/New_York',\n    TX: 'America/Chicago',\n    FL: 'America/New_York',\n    IL: 'America/Chicago',\n    PA: 'America/New_York',\n    OH: 'America/New_York',\n    GA: 'America/New_York',\n    NC: 'America/New_York',\n    MI: 'America/New_York',\n    NJ: 'America/New_York',\n    VA: 'America/New_York',\n    WA: 'America/Los_Angeles',\n    AZ: 'America/Phoenix',\n    MA: 'America/New_York',\n    TN: 'America/Chicago',\n    IN: 'America/New_York',\n    MO: 'America/Chicago',\n    MD: 'America/New_York',\n    WI: 'America/Chicago',\n    CO: 'America/Denver',\n    MN: 'America/Chicago',\n    SC: 'America/New_York',\n    AL: 'America/Chicago',\n    LA: 'America/Chicago',\n    KY: 'America/New_York',\n    OR: 'America/Los_Angeles',\n    OK: 'America/Chicago',\n    CT: 'America/New_York',\n    UT: 'America/Denver',\n    IA: 'America/Chicago',\n    NV: 'America/Los_Angeles',\n    AR: 'America/Chicago',\n    MS: 'America/Chicago',\n    KS: 'America/Chicago',\n    NM: 'America/Denver',\n    NE: 'America/Chicago',\n    WV: 'America/New_York',\n    ID: 'America/Denver',\n    HI: 'Pacific/Honolulu',\n    AK: 'America/Anchorage',\n    NH: 'America/New_York',\n    ME: 'America/New_York',\n    MT: 'America/Denver',\n    RI: 'America/New_York',\n    DE: 'America/New_York',\n    SD: 'America/Chicago',\n    ND: 'America/Chicago',\n    DC: 'America/New_York',\n    VT: 'America/New_York',\n    WY: 'America/Denver',\n  };\n\n  return stateTimezones[state] || 'America/New_York';\n};\n\n// Hook pour les conversions d'unités US\nconst useUSUnits = () => {\n  const { preferences } = appStore();\n  const isImperial = preferences.units === 'imperial';\n\n  const convertWeight = useCallback(\n    (value: number, fromUnit: 'lbs' | 'kg', toUnit?: 'lbs' | 'kg') => {\n      const targetUnit = toUnit || (isImperial ? 'lbs' : 'kg');\n\n      if (fromUnit === targetUnit) return { value, unit: targetUnit };\n\n      if (fromUnit === 'lbs' && targetUnit === 'kg') {\n        return { value: Math.round(value * 0.453592 * 10) / 10, unit: 'kg' };\n      } else if (fromUnit === 'kg' && targetUnit === 'lbs') {\n        return { value: Math.round(value * 2.20462 * 10) / 10, unit: 'lbs' };\n      }\n\n      return { value, unit: fromUnit };\n    },\n    [isImperial]\n  );\n\n  const convertHeight = useCallback(\n    (feet: number, inches: number, targetUnit?: 'ft_in' | 'cm') => {\n      const unit = targetUnit || (isImperial ? 'ft_in' : 'cm');\n\n      if (unit === 'ft_in') {\n        return { feet, inches, unit: 'ft_in' };\n      } else {\n        const totalInches = feet * 12 + inches;\n        const cm = Math.round(totalInches * 2.54);\n        return { value: cm, unit: 'cm' };\n      }\n    },\n    [isImperial]\n  );\n\n  const convertDistance = useCallback(\n    (value: number, fromUnit: 'miles' | 'km', toUnit?: 'miles' | 'km') => {\n      const targetUnit = toUnit || (isImperial ? 'miles' : 'km');\n\n      if (fromUnit === targetUnit) return { value, unit: targetUnit };\n\n      if (fromUnit === 'miles' && targetUnit === 'km') {\n        return { value: Math.round(value * 1.60934 * 100) / 100, unit: 'km' };\n      } else if (fromUnit === 'km' && targetUnit === 'miles') {\n        return { value: Math.round(value * 0.621371 * 100) / 100, unit: 'miles' };\n      }\n\n      return { value, unit: fromUnit };\n    },\n    [isImperial]\n  );\n\n  const convertVolume = useCallback(\n    (value: number, fromUnit: 'floz' | 'ml' | 'liters', toUnit?: string) => {\n      const targetUnit = toUnit || (isImperial ? 'floz' : 'ml');\n\n      if (fromUnit === targetUnit) return { value, unit: targetUnit };\n\n      // Conversions vers fl oz\n      if (targetUnit === 'floz') {\n        if (fromUnit === 'ml')\n          return { value: Math.round(value * 0.033814 * 10) / 10, unit: 'floz' };\n        if (fromUnit === 'liters')\n          return { value: Math.round(value * 33.814 * 10) / 10, unit: 'floz' };\n      }\n\n      // Conversions vers ml\n      if (targetUnit === 'ml') {\n        if (fromUnit === 'floz') return { value: Math.round(value * 29.5735), unit: 'ml' };\n        if (fromUnit === 'liters') return { value: value * 1000, unit: 'ml' };\n      }\n\n      return { value, unit: fromUnit };\n    },\n    [isImperial]\n  );\n\n  const convertTemperature = useCallback(\n    (value: number, fromUnit: 'F' | 'C', toUnit?: 'F' | 'C') => {\n      const targetUnit = toUnit || (isImperial ? 'F' : 'C');\n\n      if (fromUnit === targetUnit) return { value, unit: targetUnit };\n\n      if (fromUnit === 'F' && targetUnit === 'C') {\n        return { value: Math.round((((value - 32) * 5) / 9) * 10) / 10, unit: 'C' };\n      } else if (fromUnit === 'C' && targetUnit === 'F') {\n        return { value: Math.round(((value * 9) / 5 + 32) * 10) / 10, unit: 'F' };\n      }\n\n      return { value, unit: fromUnit };\n    },\n    [isImperial]\n  );\n\n  return {\n    isImperial,\n    convertWeight,\n    convertHeight,\n    convertDistance,\n    convertVolume,\n    convertTemperature,\n  };\n};\n\n// Hook pour l'IA conversationnelle\nconst useConversationalAI = () => {\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { onboarding, updateOnboarding } = appStore();\n\n  const sendMessage = useCallback(\n    async (message: string, context?: Record<string, string | number | boolean>) => {\n      setIsProcessing(true);\n      setError(null);\n\n      try {\n        const response = await fetch('/api/ai/conversation', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${(await supabase.auth.getSession()).data.session?.access_token}`,\n          },\n          body: JSON.stringify({\n            message,\n            context: {\n              ...context,\n              conversationHistory: onboarding.conversationHistory,\n              currentStep: onboarding.currentStep,\n              userData: onboarding.userData,\n              usMarket: true,\n            },\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to get AI response');\n        }\n\n        const data = await response.json();\n\n        // Ajouter les messages à l'historique\n        const userMessage: ConversationMessage = {\n          id: `user_${Date.now()}`,\n          type: 'user',\n          content: message,\n          timestamp: new Date(),\n          context,\n        };\n\n        const aiMessage: ConversationMessage = {\n          id: `ai_${Date.now()}`,\n          type: 'ai',\n          content: data.response,\n          timestamp: new Date(),\n          context: data.context,\n          suggestedResponses: data.suggestedResponses,\n        };\n\n        updateOnboarding({\n          conversationHistory: [...onboarding.conversationHistory, userMessage, aiMessage],\n          aiRecommendations: data.recommendations || onboarding.aiRecommendations,\n        });\n\n        return { response: data.response, recommendations: data.recommendations };\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'AI service unavailable';\n        setError(errorMessage);\n        throw new Error(errorMessage);\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [onboarding, updateOnboarding]\n  );\n\n  const generateRecommendations = useCallback(\n    async (type: 'workout' | 'nutrition' | 'hydration' | 'sleep') => {\n      setIsProcessing(true);\n      setError(null);\n\n      try {\n        const response = await fetch('/api/ai/recommendations', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${(await supabase.auth.getSession()).data.session?.access_token}`,\n          },\n          body: JSON.stringify({\n            type,\n            userData: onboarding.userData,\n            usMarket: true,\n            preferences: {\n              units: 'imperial',\n              language: 'en',\n            },\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to generate recommendations');\n        }\n\n        const recommendations = await response.json();\n\n        updateOnboarding({\n          aiRecommendations: [...onboarding.aiRecommendations, ...recommendations],\n        });\n\n        return recommendations;\n      } catch (err) {\n        const errorMessage =\n          err instanceof Error ? err.message : 'Failed to generate recommendations';\n        setError(errorMessage);\n        throw new Error(errorMessage);\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [onboarding, updateOnboarding]\n  );\n\n  return {\n    sendMessage,\n    generateRecommendations,\n    isProcessing,\n    error,\n    conversationHistory: onboarding.conversationHistory,\n    recommendations: onboarding.aiRecommendations,\n  };\n};\n\n// Hook pour la synchronisation offline\nconst useOfflineSync = () => {\n  const { ui, addPendingSync, removePendingSync } = appStore();\n  const [isSyncing, setIsSyncing] = useState(false);\n\n  const syncPendingData = useCallback(async () => {\n    if (isSyncing || ui.pendingSyncs.length === 0) return;\n\n    setIsSyncing(true);\n\n    for (const sync of ui.pendingSyncs) {\n      try {\n        const response = await fetch(`/api/sync/${sync.type}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${(await supabase.auth.getSession()).data.session?.access_token}`,\n          },\n          body: JSON.stringify(sync.data),\n        });\n\n        if (response.ok) {\n          removePendingSync(sync.id);\n        } else {\n          // Incrémenter le compteur de retry\n          const updatedSync = { ...sync, retryCount: sync.retryCount + 1 };\n\n          // Supprimer après 3 tentatives échouées\n          if (updatedSync.retryCount >= 3) {\n            removePendingSync(sync.id);\n            console.error(`Failed to sync ${sync.type} after 3 attempts:`, sync.data);\n          }\n        }\n      } catch {\n      }\n    }\n\n    setIsSyncing(false);\n  }, [isSyncing, ui.pendingSyncs, removePendingSync]);\n\n  const addToSyncQueue = useCallback(\n    (type: PendingSync['type'], data: unknown) => {\n      const sync: PendingSync = {\n        id: `${type}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        type,\n        data,\n        timestamp: new Date().toISOString(),\n        retryCount: 0,\n      };\n\n      addPendingSync(sync);\n\n      // Essayer de synchroniser immédiatement si en ligne\n      if (navigator.onLine) {\n        syncPendingData();\n      }\n    },\n    [addPendingSync, syncPendingData]\n  );\n\n  // Écouter les changements de connectivité\n  useEffect(() => {\n    const handleOnline = () => {\n      syncPendingData();\n    };\n\n    window.addEventListener('online', handleOnline);\n    return () => window.removeEventListener('online', handleOnline);\n  }, [syncPendingData]);\n\n  return {\n    addToSyncQueue,\n    syncPendingData,\n    isSyncing,\n    pendingSyncs: ui.pendingSyncs,\n    isOffline: !navigator.onLine,\n  };\n};\n\n// ====================================================================\n// Composants Lazy-loaded pour les pages principales\n// ====================================================================\n\n// Pages principales\nconst OnboardingPage = lazy(() => import('../features/auth/pages/ProfileComplete'));\nconst DashboardPage = lazy(() => import('../features/admin/pages/AdminPage'));\nconst NotFoundPage = lazy(() => import('./NotFound'));\nconst AppLoadingSpinner = lazy(() => import('../shared/components/AppLoadingSpinner'));\nconst AppErrorBoundary = lazy(() => import('../shared/components/AppErrorBoundary'));\n\n// ====================================================================\n// Définition des Routes de l'Application\n// ====================================================================\n\n// ====================================================================\n// Configuration des Routes de l'Application\n// ====================================================================\n\ninterface RouteConfig {\n  path: string;\n  component: React.ComponentType<Record<string, unknown>>;\n  exact?: boolean;\n  requiresAuth?: boolean;\n  requiresOnboarding?: boolean;\n  title?: string;\n  description?: string;\n}\n\nconst appRoutes: RouteConfig[] = [\n  // Routes publiques\n  {\n    path: '/',\n    component: lazy(() => import('../features/landing/pages/LandingPage')),\n    exact: true,\n    title: 'MyFitHero - AI-Powered Fitness for Americans',\n    description:\n      'The ultimate US-ready fitness & wellness app with AI coaching, nutrition tracking, and social features.',\n  },\n  {\n    path: '/login',\n    component: lazy(() => import('../features/auth/pages/AuthPage')),\n    title: 'Sign In - MyFitHero',\n    description: 'Sign in to your MyFitHero account and continue your fitness journey.',\n  },\n  {\n    path: '/register',\n    component: lazy(() => import('../features/auth/pages/AuthPage')),\n    title: 'Create Account - MyFitHero',\n    description: 'Join thousands of Americans achieving their fitness goals with MyFitHero.',\n  },\n\n  // Routes d'onboarding\n  {\n    path: '/onboarding',\n    component: OnboardingPage,\n    requiresAuth: true,\n    title: 'Welcome to MyFitHero',\n    description: \"Let's personalize your fitness journey with our AI-powered onboarding.\",\n  },\n  {\n    path: '/onboarding/:step',\n    component: OnboardingPage,\n    requiresAuth: true,\n    title: 'Setup Your Profile - MyFitHero',\n    description: 'Personalized fitness setup designed specifically for Americans.',\n  },\n\n  // Routes principales de l'application\n  {\n    path: '/dashboard',\n    component: DashboardPage,\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Dashboard - MyFitHero',\n    description: 'Your personalized fitness dashboard with AI insights and progress tracking.',\n  },\n  {\n    path: '/workouts',\n    component: lazy(() => import('../features/workout/pages/WorkoutPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Workouts - MyFitHero',\n    description: 'AI-powered workouts tailored for your sport and fitness goals.',\n  },\n  {\n    path: '/workouts/:id',\n    component: lazy(() => import('../features/workout/pages/WorkoutDetailPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Workout Details - MyFitHero',\n  },\n  {\n    path: '/nutrition',\n    component: lazy(() => import('../features/nutrition/pages/NutritionPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Nutrition - MyFitHero',\n    description: 'Track your nutrition with the most comprehensive US food database.',\n  },\n  {\n    path: '/sleep',\n    component: lazy(() => import('../features/sleep/pages/SleepPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Sleep Tracking - MyFitHero',\n    description: 'Optimize your recovery with advanced sleep analytics and recommendations.',\n  },\n  {\n    path: '/hydration',\n    component: lazy(() => import('../features/hydration/pages/HydrationPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Hydration - MyFitHero',\n    description: 'Stay hydrated with personalized goals and smart reminders in fl oz.',\n  },\n  {\n    path: '/wellness',\n    component: lazy(() => import('../features/recovery/pages/RecoveryPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Mental Wellness - MyFitHero',\n    description: 'Track your mental health, mood, and stress with AI-powered insights.',\n  },\n  {\n    path: '/social',\n    component: lazy(() => import('../features/social/pages/SocialPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Community - MyFitHero',\n    description: 'Connect with friends, join challenges, and share your fitness journey.',\n  },\n  {\n    path: '/social/challenges',\n    component: lazy(() => import('../features/social/pages/ChallengesPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Fitness Challenges - MyFitHero',\n    description: 'Join community challenges and compete with friends across America.',\n  },\n  {\n    path: '/analytics',\n    component: lazy(() => import('../features/analytics/pages/AnalyticsPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Progress Analytics - MyFitHero',\n    description: 'Detailed analytics and insights about your fitness progress and trends.',\n  },\n  {\n    path: '/profile',\n    component: lazy(() => import('../features/profile/pages/ProfilePage')),\n    requiresAuth: true,\n    title: 'Your Profile - MyFitHero',\n    description: 'Manage your profile, preferences, and fitness goals.',\n  },\n  {\n    path: '/settings',\n    component: lazy(() => import('../features/profile/pages/SettingsPage')),\n    requiresAuth: true,\n    title: 'Settings - MyFitHero',\n    description: 'Customize your MyFitHero experience, privacy, and notifications.',\n  },\n\n  // Routes spécialisées\n  {\n    path: '/ai-coach',\n    component: lazy(() => import('../features/ai-coach/pages/AICoachPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'AI Coach - MyFitHero',\n    description: 'Get personalized coaching and recommendations from your AI fitness assistant.',\n  },\n  {\n    path: '/exercises',\n    component: lazy(() => import('../features/workout/pages/ExercisesPage')),\n    requiresAuth: true,\n    title: 'Exercise Library - MyFitHero',\n    description: 'Comprehensive exercise library with 450+ video-guided workouts.',\n  },\n  {\n    path: '/exercises/:id',\n    component: lazy(() => import('../features/workout/pages/ExerciseDetailPage')),\n    requiresAuth: true,\n    title: 'Exercise Details - MyFitHero',\n  },\n  {\n    path: '/recovery',\n    component: lazy(() => import('../features/recovery/pages/RecoveryPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Recovery - MyFitHero',\n    description: 'Optimize your recovery with personalized insights and recommendations.',\n  },\n  {\n    path: '/wearables',\n    component: lazy(() => import('../features/wearables/pages/WearableHubPage')),\n    requiresAuth: true,\n    requiresOnboarding: true,\n    title: 'Wearable Hub - MyFitHero',\n    description: 'Connect and sync your fitness devices for comprehensive tracking.',\n  },\n  {\n    path: '/admin',\n    component: lazy(() => import('../features/admin/pages/AdminPage')),\n    requiresAuth: true,\n    title: 'Admin - MyFitHero',\n    description: 'Administrative interface for MyFitHero management.',\n  },\n\n  // Routes utilitaires\n  {\n    path: '/privacy',\n    component: lazy(() => import('./PrivacyPage')),\n    title: 'Privacy Policy - MyFitHero',\n    description: 'Your privacy matters. Learn how we protect your fitness data.',\n  },\n  {\n    path: '/terms',\n    component: lazy(() => import('./TermsPage')),\n    title: 'Terms of Service - MyFitHero',\n    description: 'Terms and conditions for using MyFitHero fitness application.',\n  },\n  {\n    path: '/support',\n    component: lazy(() => import('./SupportPage')),\n    title: 'Support - MyFitHero',\n    description: 'Get help and support for your MyFitHero experience.',\n  },\n];\n\n// ====================================================================\n// Composant d'Authentification Guards\n// ====================================================================\n\ninterface AuthGuardProps {\n  children: ReactNode;\n  requiresAuth?: boolean | undefined;\n  requiresOnboarding?: boolean | undefined;\n}\n\nconst AuthGuard: React.FC<AuthGuardProps> = ({\n  children,\n  requiresAuth = false,\n  requiresOnboarding = false,\n}) => {\n  const { user, isAuthenticated, onboarding } = appStore();\n  const [, setLocation] = useLocation();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const {\n          data: { session },\n          error,\n        } = await supabase.auth.getSession();\n\n        if (error) {\n        }\n\n        if (session && !user) {\n          // Charger les données utilisateur\n          const { data: userData, error: userError } = await supabase\n            .from('users')\n            .select('*')\n            .eq('id', session.user.id)\n            .single();\n\n          if (userData && !userError) {\n            appStore.getState().setUser(userData);\n          }\n        }\n      } catch {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, [user]);\n\n  // Écouter les changements d'authentification\n  useEffect(() => {\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      if (event === 'SIGNED_IN' && session) {\n        // Utilisateur connecté\n        const { data: userData } = await supabase\n          .from('users')\n          .select('*')\n          .eq('id', session.user.id)\n          .single();\n\n        if (userData) {\n          appStore.getState().setUser(userData);\n        }\n      } else if (event === 'SIGNED_OUT') {\n        // Utilisateur déconnecté\n        appStore.getState().setUser(null);\n        appStore.getState().clearCache();\n        setLocation('/');\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, [setLocation]);\n\n  if (isLoading) {\n    return <AppLoadingSpinner message=\"Checking authentication...\" />;\n  }\n\n  // Vérification d'authentification\n  if (requiresAuth && !isAuthenticated) {\n    setLocation('/login');\n    return null;\n  }\n\n  // Vérification d'onboarding\n  if (requiresOnboarding && isAuthenticated && !onboarding.isCompleted) {\n    setLocation('/onboarding');\n    return null;\n  }\n\n  return <>{children}</>;\n};\n\n// ====================================================================\n// Composant Principal MyFitHero Index\n// ====================================================================\n\nconst MyFitHeroIndex: React.FC = () => {\n  const { isLoading, preferences } = appStore();\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [appVersion] = useState('4.0.0');\n  const [buildNumber] = useState('20250801');\n\n  // Initialisation de l'application\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        // Vérifier le support PWA\n        if ('serviceWorker' in navigator && pwaConfig.enableOfflineMode) {\n          const registration = await navigator.serviceWorker.register('/sw.js');\n          console.log('ServiceWorker registered:', registration);\n        }\n\n        // Configurer les notifications push\n        if (pwaConfig.enablePushNotifications && 'Notification' in window) {\n          if (Notification.permission === 'default') {\n            await Notification.requestPermission();\n          }\n        }\n\n        // Détecter le statut de connectivité\n        const updateOnlineStatus = () => {\n          appStore.getState().ui.isOffline = !navigator.onLine;\n        };\n\n        window.addEventListener('online', updateOnlineStatus);\n        window.addEventListener('offline', updateOnlineStatus);\n\n        // Configurer les métriques de performance\n        if (process.env.NODE_ENV === 'production') {\n          // Web Vitals et autres métriques\n\n          onCLS(console.log);\n          onINP(console.log);\n          onFCP(console.log);\n          onLCP(console.log);\n          onTTFB(console.log);\n        }\n\n        setIsInitialized(true);\n      } catch {\n        setIsInitialized(true); // Continue même en cas d'erreur\n      }\n    };\n\n    initializeApp();\n  }, []);\n\n  // Gestion des métadonnées de page\n  useEffect(() => {\n    const updatePageMetadata = (route: RouteConfig) => {\n      if (route.title) {\n        document.title = route.title;\n      }\n\n      if (route.description) {\n        const metaDescription = document.querySelector('meta[name=\"description\"]');\n        if (metaDescription) {\n          metaDescription.setAttribute('content', route.description);\n        }\n      }\n    };\n\n    // Écouter les changements de route - simplified\n    const currentRouteInfo: RouteConfig = {\n      path: window.location.pathname,\n      component: () => null,\n      title: 'MyFitHero - US Fitness App',\n      description: 'AI-powered fitness coaching for the US market'\n    };\n    \n    updatePageMetadata(currentRouteInfo);\n  }, []);\n\n  // Affichage du chargement initial\n  if (!isInitialized || isLoading) {\n    return <AppLoadingSpinner message=\"Initializing MyFitHero...\" showProgress />;\n  }\n\n  return (\n    <AppErrorBoundary>\n      <div className=\"app-container min-h-screen bg-gray-50\" data-theme={preferences.theme}>\n        <Suspense fallback={<AppLoadingSpinner />}>\n          <Router>\n            {/* Routes principales */}\n            {appRoutes.map(({ path, component: Component, requiresAuth, requiresOnboarding }) => (\n              <Route key={path} path={path}>\n                <AuthGuard requiresAuth={requiresAuth} requiresOnboarding={requiresOnboarding}>\n                  <Component />\n                </AuthGuard>\n              </Route>\n            ))}\n\n            {/* Routes spéciales */}\n            <Route path=\"/debug\" nest>\n              {process.env.NODE_ENV === 'development' && (\n                <Route>\n                  <div />\n                </Route>\n              )}\n            </Route>\n\n            {/* Route catch-all pour 404 */}\n            <Route>\n              <NotFoundPage />\n            </Route>\n          </Router>\n        </Suspense>\n\n        {/* Composants Analytics et Monitoring */}\n\n        {/* Informations de version (visible en développement) */}\n        {process.env.NODE_ENV === 'development' && (\n          <div className=\"fixed bottom-4 left-4 bg-black/80 text-white text-xs p-2 rounded-lg font-mono\">\n            MyFitHero - v{appVersion} (build {buildNumber})\n          </div>\n        )}\n      </div>\n    </AppErrorBoundary>\n  );\n};\n\nexport default React.memo(MyFitHeroIndex);\n\n// ====================================================================\n// Exports Utilitaires pour l'Application\n// ====================================================================\n\n// REMARQUE: Les exports suivants sont nécessaires mais causent des warnings Fast Refresh\n// Ils seront déplacés dans des fichiers dédiés à terme\n\n// eslint-disable-next-line react-refresh/only-export-components\nexport { useUSLocation, useUSUnits, useConversationalAI, useOfflineSync, appStore };\n\n// Types exportés (peuvent rester car ne cassent pas Fast Refresh)\nexport type {\n  User,\n  FitnessProfile,\n  USMainSports,\n  FitnessGoal,\n  Equipment,\n  OnboardingState,\n  OnboardingModule,\n  ConversationMessage,\n  AIRecommendation,\n  Workout,\n  Exercise,\n  ExerciseSet,\n  NutritionEntry,\n  Meal,\n  FoodItem,\n  SleepEntry,\n  HydrationEntry,\n  MentalWellnessEntry,\n  SocialProfile,\n  Challenge,\n  UserAnalytics,\n};\n\n// Export des utilitaires\n// eslint-disable-next-line react-refresh/only-export-components\nexport { pwaConfig, AppErrorBoundary, AppLoadingSpinner, AuthGuard };\n"],"file":"assets/index-BTOkg6-I.js"}