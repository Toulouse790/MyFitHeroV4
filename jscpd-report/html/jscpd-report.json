{
  "statistics": {
    "detectionDate": "2025-09-02T13:32:32.511Z",
    "formats": {
      "javascript": {
        "sources": {
          "client/src/shared/components/Modal/Modal.tsx": {
            "lines": 112,
            "tokens": 753,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Loading/Loading.tsx": {
            "lines": 42,
            "tokens": 343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Layout/Layout.tsx": {
            "lines": 192,
            "tokens": 1593,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Input/Input.tsx": {
            "lines": 34,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Card/Card.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Button/Button.tsx": {
            "lines": 8,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/pages/WorkoutPage.tsx": {
            "lines": 507,
            "tokens": 3924,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 66,
            "duplicatedTokens": 428,
            "percentage": 13.02,
            "percentageTokens": 10.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/pages/ExercisesPage.tsx": {
            "lines": 349,
            "tokens": 2888,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutTipCard.tsx": {
            "lines": 25,
            "tokens": 243,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutTimer.tsx": {
            "lines": 107,
            "tokens": 966,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutStatsCard.tsx": {
            "lines": 49,
            "tokens": 463,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutStartScreen.tsx": {
            "lines": 97,
            "tokens": 813,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutSessionSummary.tsx": {
            "lines": 99,
            "tokens": 850,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutSessionHeader.tsx": {
            "lines": 14,
            "tokens": 111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutProgressCard.tsx": {
            "lines": 30,
            "tokens": 261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutDashboard.tsx": {
            "lines": 324,
            "tokens": 2832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutCard.tsx": {
            "lines": 192,
            "tokens": 1529,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/PreferencesSettings.tsx": {
            "lines": 141,
            "tokens": 1104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/PreWorkoutRecoveryCheck.tsx": {
            "lines": 7,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/PillarHeader.tsx": {
            "lines": 127,
            "tokens": 1087,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/MuscleRecoveryDashboard.tsx": {
            "lines": 246,
            "tokens": 2124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/ExerciseCard.tsx": {
            "lines": 94,
            "tokens": 717,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/BottomNav.tsx": {
            "lines": 12,
            "tokens": 92,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/BadgeSystem.tsx": {
            "lines": 93,
            "tokens": 899,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/BadgeDisplay.tsx": {
            "lines": 158,
            "tokens": 1350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/ActiveSessionIndicator.tsx": {
            "lines": 35,
            "tokens": 258,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/pages/WearableHubPage.tsx": {
            "lines": 202,
            "tokens": 1744,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/components/WearableNotificationCenter.tsx": {
            "lines": 232,
            "tokens": 2083,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/pages/ChallengesPage.tsx": {
            "lines": 130,
            "tokens": 992,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/SocialDashboard.tsx": {
            "lines": 353,
            "tokens": 3417,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 99,
            "percentage": 2.83,
            "percentageTokens": 2.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/SocialConnections.tsx": {
            "lines": 271,
            "tokens": 2352,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 99,
            "percentage": 3.69,
            "percentageTokens": 4.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/PrivacyManager.tsx": {
            "lines": 196,
            "tokens": 1751,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/FriendsComparison.tsx": {
            "lines": 245,
            "tokens": 2044,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/BadgeNotification.tsx": {
            "lines": 95,
            "tokens": 778,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/components/SleepQualityForm.tsx": {
            "lines": 176,
            "tokens": 1459,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/components/SleepGoals.tsx": {
            "lines": 174,
            "tokens": 1479,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/components/SleepChart.tsx": {
            "lines": 74,
            "tokens": 651,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/components/SleepAnalytics.tsx": {
            "lines": 161,
            "tokens": 1514,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/pages/ProfilePage.tsx": {
            "lines": 346,
            "tokens": 2787,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/components/UserProfileTabs.tsx": {
            "lines": 11,
            "tokens": 98,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/components/UniformHeader.tsx": {
            "lines": 89,
            "tokens": 632,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/components/AvatarUpload.tsx": {
            "lines": 54,
            "tokens": 361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/nutrition/components/PersonalInfoForm.tsx": {
            "lines": 450,
            "tokens": 3483,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/hydration/pages/HydrationPage.tsx": {
            "lines": 311,
            "tokens": 2709,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/pages/ProfileComplete.tsx": {
            "lines": 190,
            "tokens": 1518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/pages/AuthPage.tsx": {
            "lines": 397,
            "tokens": 3250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/components/USMarketOnboarding.tsx": {
            "lines": 179,
            "tokens": 1571,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/components/ProtectedRoute.tsx": {
            "lines": 72,
            "tokens": 617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/components/AuthPages.tsx": {
            "lines": 206,
            "tokens": 1422,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/pages/AnalyticsPage.tsx": {
            "lines": 457,
            "tokens": 3578,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/WearableStats.tsx": {
            "lines": 237,
            "tokens": 2089,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/USMarketDashboard.tsx": {
            "lines": 89,
            "tokens": 793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/StatsOverview.tsx": {
            "lines": 38,
            "tokens": 279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/SportSelector.tsx": {
            "lines": 378,
            "tokens": 2941,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/SmartHealthDashboard.tsx": {
            "lines": 203,
            "tokens": 1962,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/AnalyticsDashboard.tsx": {
            "lines": 305,
            "tokens": 2741,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/AdvancedCharts.tsx": {
            "lines": 166,
            "tokens": 1604,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 90,
            "duplicatedTokens": 842,
            "percentage": 54.22,
            "percentageTokens": 52.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/pages/AICoachPage.tsx": {
            "lines": 346,
            "tokens": 2610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/UnitPreferencesSelector.tsx": {
            "lines": 94,
            "tokens": 734,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/PositionSelector.tsx": {
            "lines": 147,
            "tokens": 1146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/PackSelector.tsx": {
            "lines": 91,
            "tokens": 668,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/PWAControls.tsx": {
            "lines": 46,
            "tokens": 322,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/OnboardingQuestionnaire.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/LanguageSelector.tsx": {
            "lines": 9,
            "tokens": 114,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/FloatingActionButton.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/DailyCheckIn.tsx": {
            "lines": 72,
            "tokens": 586,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/BalanceConnectButton.tsx": {
            "lines": 79,
            "tokens": 679,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/AnimatedToast.tsx": {
            "lines": 52,
            "tokens": 338,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/AIIntelligence.tsx": {
            "lines": 220,
            "tokens": 2018,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/UnitDisplay.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/UnifiedLoading.tsx": {
            "lines": 116,
            "tokens": 809,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/ThemeProvider.tsx": {
            "lines": 59,
            "tokens": 348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/ErrorBoundary.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/AppLoadingSpinner.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/AppErrorBoundary.tsx": {
            "lines": 10,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/toaster.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/toast.tsx": {
            "lines": 91,
            "tokens": 635,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/textarea.tsx": {
            "lines": 4,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/tabs.tsx": {
            "lines": 34,
            "tokens": 215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/switch.tsx": {
            "lines": 10,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/slider.tsx": {
            "lines": 1,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/skeleton.tsx": {
            "lines": 0,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/separator.tsx": {
            "lines": 7,
            "tokens": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/select.tsx": {
            "lines": 116,
            "tokens": 825,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/progress.tsx": {
            "lines": 1,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/label.tsx": {
            "lines": 4,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/input.tsx": {
            "lines": 5,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/dropdown-menu.tsx": {
            "lines": 45,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/dialog.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/card.tsx": {
            "lines": 43,
            "tokens": 444,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/button.tsx": {
            "lines": 5,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/badge.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/avatar.tsx": {
            "lines": 28,
            "tokens": 213,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/app/router/index.tsx": {
            "lines": 0,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/components/WorkoutCard.test.tsx": {
            "lines": 118,
            "tokens": 1190,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 180,
            "duplicatedTokens": 1840,
            "percentage": 152.54,
            "percentageTokens": 154.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/test-utils/test-utils.tsx": {
            "lines": 15,
            "tokens": 160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/supabaseService.examples.tsx": {
            "lines": 284,
            "tokens": 2389,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/NavigationMenu.tsx": {
            "lines": 75,
            "tokens": 643,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/router/AppRouter.tsx": {
            "lines": 60,
            "tokens": 405,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/lazyLoading.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/jest.setup.js": {
            "lines": 60,
            "tokens": 426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/App.tsx": {
            "lines": 0,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 11928,
          "tokens": 98903,
          "sources": 102,
          "clones": 5,
          "duplicatedLines": 178,
          "duplicatedTokens": 1654,
          "percentage": 1.49,
          "percentageTokens": 1.67,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "client/src/shared/components/Modal/Modal.tsx": {
            "lines": 217,
            "tokens": 1551,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Loading/Loading.tsx": {
            "lines": 88,
            "tokens": 687,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 30,
            "duplicatedTokens": 246,
            "percentage": 34.09,
            "percentageTokens": 35.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Layout/Layout.tsx": {
            "lines": 221,
            "tokens": 1810,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Input/Input.tsx": {
            "lines": 103,
            "tokens": 731,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Card/Card.tsx": {
            "lines": 72,
            "tokens": 545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/Button/Button.tsx": {
            "lines": 73,
            "tokens": 460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/pages/WorkoutPage.tsx": {
            "lines": 797,
            "tokens": 6532,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 152,
            "duplicatedTokens": 1140,
            "percentage": 19.07,
            "percentageTokens": 17.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/pages/WorkoutDetailPage.tsx": {
            "lines": 16,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/pages/ExercisesPage.tsx": {
            "lines": 565,
            "tokens": 4854,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 186,
            "percentage": 3.72,
            "percentageTokens": 3.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/pages/ExerciseDetailPage.tsx": {
            "lines": 11,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutTipCard.tsx": {
            "lines": 58,
            "tokens": 499,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutTimer.tsx": {
            "lines": 233,
            "tokens": 2131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutStatsCard.tsx": {
            "lines": 92,
            "tokens": 919,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutStartScreen.tsx": {
            "lines": 162,
            "tokens": 1295,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutSessionSummary.tsx": {
            "lines": 150,
            "tokens": 1283,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutSessionHeader.tsx": {
            "lines": 44,
            "tokens": 330,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutProgressCard.tsx": {
            "lines": 67,
            "tokens": 596,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 11.94,
            "percentageTokens": 14.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutDashboard.tsx": {
            "lines": 757,
            "tokens": 6348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/WorkoutCard.tsx": {
            "lines": 313,
            "tokens": 2540,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 94,
            "duplicatedTokens": 614,
            "percentage": 30.03,
            "percentageTokens": 24.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/PreferencesSettings.tsx": {
            "lines": 216,
            "tokens": 1908,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/PreWorkoutRecoveryCheck.tsx": {
            "lines": 24,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/PillarHeader.tsx": {
            "lines": 353,
            "tokens": 2954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/MuscleRecoveryDashboard.tsx": {
            "lines": 340,
            "tokens": 2881,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/LazyComponents.tsx": {
            "lines": 35,
            "tokens": 434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/ExerciseCard.tsx": {
            "lines": 138,
            "tokens": 1063,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 89,
            "percentage": 5.8,
            "percentageTokens": 8.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/BottomNav.tsx": {
            "lines": 127,
            "tokens": 861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/BadgeSystem.tsx": {
            "lines": 423,
            "tokens": 3546,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/BadgeDisplay.tsx": {
            "lines": 274,
            "tokens": 2436,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 91,
            "percentage": 3.65,
            "percentageTokens": 3.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/ActiveSessionIndicator.tsx": {
            "lines": 88,
            "tokens": 726,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/pages/WearableHubPage.tsx": {
            "lines": 515,
            "tokens": 4436,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/components/WearableNotificationCenter.tsx": {
            "lines": 445,
            "tokens": 3871,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/pages/ChallengesPage.tsx": {
            "lines": 360,
            "tokens": 3020,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 186,
            "percentage": 5.83,
            "percentageTokens": 6.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/SocialDashboard.tsx": {
            "lines": 521,
            "tokens": 4710,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 151,
            "percentage": 4.03,
            "percentageTokens": 3.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/SocialConnections.tsx": {
            "lines": 460,
            "tokens": 3975,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 151,
            "percentage": 4.57,
            "percentageTokens": 3.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/PrivacyManager.tsx": {
            "lines": 456,
            "tokens": 3762,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/FriendsComparison.tsx": {
            "lines": 318,
            "tokens": 2580,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/BadgeNotification.tsx": {
            "lines": 198,
            "tokens": 1542,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/components/SleepQualityForm.tsx": {
            "lines": 316,
            "tokens": 2664,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/components/SleepGoals.tsx": {
            "lines": 259,
            "tokens": 2266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/components/SleepChart.tsx": {
            "lines": 141,
            "tokens": 1214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/components/SleepAnalytics.tsx": {
            "lines": 238,
            "tokens": 2295,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/recovery/pages/RecoveryPage.tsx": {
            "lines": 22,
            "tokens": 136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/pages/ProfilePage.tsx": {
            "lines": 538,
            "tokens": 4502,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/components/UserProfileTabs.tsx": {
            "lines": 76,
            "tokens": 656,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/components/UniformHeader.tsx": {
            "lines": 209,
            "tokens": 1450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/components/AvatarUpload.tsx": {
            "lines": 256,
            "tokens": 1860,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/nutrition/components/PersonalInfoForm.tsx": {
            "lines": 566,
            "tokens": 4618,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 174,
            "duplicatedTokens": 1276,
            "percentage": 30.74,
            "percentageTokens": 27.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/landing/pages/LandingPage.tsx": {
            "lines": 10,
            "tokens": 62,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/hydration/pages/HydrationPage.tsx": {
            "lines": 850,
            "tokens": 7072,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/pages/ProfileComplete.tsx": {
            "lines": 440,
            "tokens": 3850,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/pages/AuthPage.tsx": {
            "lines": 598,
            "tokens": 4944,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/components/USMarketOnboarding.tsx": {
            "lines": 320,
            "tokens": 3050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/components/ProtectedRoute.tsx": {
            "lines": 169,
            "tokens": 1435,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/components/AuthPages.tsx": {
            "lines": 464,
            "tokens": 3302,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 90,
            "duplicatedTokens": 616,
            "percentage": 19.4,
            "percentageTokens": 18.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/pages/AnalyticsPage.tsx": {
            "lines": 699,
            "tokens": 5772,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/WearableStats.tsx": {
            "lines": 323,
            "tokens": 3044,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/USMarketDashboard.tsx": {
            "lines": 297,
            "tokens": 2589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/StatsOverview.tsx": {
            "lines": 279,
            "tokens": 2575,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 91,
            "percentage": 3.58,
            "percentageTokens": 3.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/SportSelector.tsx": {
            "lines": 691,
            "tokens": 5378,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/SmartHealthDashboard.tsx": {
            "lines": 300,
            "tokens": 2817,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/ProgressCharts.tsx": {
            "lines": 13,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/DashboardRecoveryWidget.tsx": {
            "lines": 13,
            "tokens": 132,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/AnalyticsDashboard.tsx": {
            "lines": 731,
            "tokens": 3884,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/AdvancedCharts.tsx": {
            "lines": 303,
            "tokens": 2315,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 36,
            "duplicatedTokens": 544,
            "percentage": 11.88,
            "percentageTokens": 23.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/pages/AICoachPage.tsx": {
            "lines": 508,
            "tokens": 3991,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/UnitPreferencesSelector.tsx": {
            "lines": 137,
            "tokens": 1113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/PositionSelector.tsx": {
            "lines": 364,
            "tokens": 2984,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/PackSelector.tsx": {
            "lines": 155,
            "tokens": 1280,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/PWAControls.tsx": {
            "lines": 74,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/OnboardingQuestionnaire.tsx": {
            "lines": 86,
            "tokens": 636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/LanguageSelector.tsx": {
            "lines": 63,
            "tokens": 606,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/FloatingActionButton.tsx": {
            "lines": 26,
            "tokens": 101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/DailyCheckIn.tsx": {
            "lines": 259,
            "tokens": 2031,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/BalanceConnectButton.tsx": {
            "lines": 193,
            "tokens": 1489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/AnimatedToast.tsx": {
            "lines": 106,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/AIIntelligence.tsx": {
            "lines": 485,
            "tokens": 3201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/admin/pages/AdminPage.tsx": {
            "lines": 119,
            "tokens": 898,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/admin/components/AdminDashboard.tsx": {
            "lines": 135,
            "tokens": 1312,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/UnitDisplay.tsx": {
            "lines": 129,
            "tokens": 1220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/UnifiedLoading.tsx": {
            "lines": 165,
            "tokens": 1135,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 30,
            "duplicatedTokens": 246,
            "percentage": 18.18,
            "percentageTokens": 21.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/ThemeProvider.tsx": {
            "lines": 164,
            "tokens": 1167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/ErrorBoundary.tsx": {
            "lines": 49,
            "tokens": 367,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 99,
            "percentage": 20.41,
            "percentageTokens": 26.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/DebugPage.tsx": {
            "lines": 13,
            "tokens": 125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/AppLoadingSpinner.tsx": {
            "lines": 29,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/AppErrorBoundary.tsx": {
            "lines": 66,
            "tokens": 479,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 99,
            "percentage": 15.15,
            "percentageTokens": 20.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/router/components/PublicRoute.tsx": {
            "lines": 18,
            "tokens": 148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/router/components/LoadingRoute.tsx": {
            "lines": 12,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/toaster.tsx": {
            "lines": 35,
            "tokens": 300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/toast.tsx": {
            "lines": 129,
            "tokens": 905,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/textarea.tsx": {
            "lines": 22,
            "tokens": 145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/tabs.tsx": {
            "lines": 51,
            "tokens": 368,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/switch.tsx": {
            "lines": 26,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/slider.tsx": {
            "lines": 22,
            "tokens": 192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/skeleton.tsx": {
            "lines": 7,
            "tokens": 76,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/separator.tsx": {
            "lines": 25,
            "tokens": 206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/select.tsx": {
            "lines": 151,
            "tokens": 1056,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/progress.tsx": {
            "lines": 23,
            "tokens": 184,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/label.tsx": {
            "lines": 18,
            "tokens": 129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/input.tsx": {
            "lines": 23,
            "tokens": 152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/dropdown-menu.tsx": {
            "lines": 70,
            "tokens": 512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/dialog.tsx": {
            "lines": 23,
            "tokens": 152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/collapsible.tsx": {
            "lines": 18,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/card.tsx": {
            "lines": 55,
            "tokens": 566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/button.tsx": {
            "lines": 125,
            "tokens": 828,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/badge.tsx": {
            "lines": 32,
            "tokens": 231,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/components/ui/avatar.tsx": {
            "lines": 45,
            "tokens": 354,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/app/router/index.tsx": {
            "lines": 183,
            "tokens": 1303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/pages/WorkoutPage.test.tsx": {
            "lines": 429,
            "tokens": 3689,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 148,
            "duplicatedTokens": 1036,
            "percentage": 34.5,
            "percentageTokens": 28.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/pages/NotFound.test.tsx": {
            "lines": 9,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/pages/LandingPage.test.tsx": {
            "lines": 9,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/pages/ExercisesPage.test.tsx": {
            "lines": 342,
            "tokens": 2844,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 35,
            "duplicatedTokens": 259,
            "percentage": 10.23,
            "percentageTokens": 9.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/pages/ChallengesPage.test.tsx": {
            "lines": 452,
            "tokens": 3743,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 55,
            "duplicatedTokens": 395,
            "percentage": 12.17,
            "percentageTokens": 10.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/pages/AdditionalPages.test.tsx": {
            "lines": 265,
            "tokens": 2355,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 180,
            "percentage": 7.55,
            "percentageTokens": 7.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/hooks/CustomHooks.test.tsx": {
            "lines": 9,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/components/WorkoutCard.test.tsx": {
            "lines": 182,
            "tokens": 1670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/components/BadgeDisplay.test.tsx": {
            "lines": 9,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/test-utils/test-utils.tsx": {
            "lines": 140,
            "tokens": 1112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/supabaseService.examples.tsx": {
            "lines": 349,
            "tokens": 2652,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/NavigationMenu.tsx": {
            "lines": 121,
            "tokens": 1005,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/router/AppRouter.tsx": {
            "lines": 97,
            "tokens": 636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/pages/TermsPage.tsx": {
            "lines": 11,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/pages/SupportPage.tsx": {
            "lines": 11,
            "tokens": 93,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/pages/PrivacyPage.tsx": {
            "lines": 73,
            "tokens": 792,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/pages/NotFound.tsx": {
            "lines": 23,
            "tokens": 204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/lazyLoading.tsx": {
            "lines": 149,
            "tokens": 1341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/__tests__/integration.test.tsx": {
            "lines": 183,
            "tokens": 1627,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/main.tsx": {
            "lines": 20,
            "tokens": 116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/App.tsx": {
            "lines": 17,
            "tokens": 145,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 25789,
          "tokens": 210337,
          "sources": 128,
          "clones": 36,
          "duplicatedLines": 502,
          "duplicatedTokens": 3892,
          "percentage": 1.95,
          "percentageTokens": 1.85,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "typescript": {
        "sources": {
          "client/src/features/workout/types/supabase.ts": {
            "lines": 612,
            "tokens": 5023,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/types/muscleRecovery.ts": {
            "lines": 84,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/types/index.ts": {
            "lines": 7,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/types/common.ts": {
            "lines": 365,
            "tokens": 2594,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/types/api.ts": {
            "lines": 114,
            "tokens": 759,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/types/WorkoutTypes.ts": {
            "lines": 234,
            "tokens": 1619,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/services/WorkoutService.ts": {
            "lines": 389,
            "tokens": 3187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useWorkoutTimer.ts": {
            "lines": 118,
            "tokens": 1103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useWorkoutSessionCore.ts": {
            "lines": 320,
            "tokens": 2865,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useWorkoutSession.ts": {
            "lines": 46,
            "tokens": 336,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useWorkoutPersistence.ts": {
            "lines": 73,
            "tokens": 650,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useWorkoutExercises.ts": {
            "lines": 156,
            "tokens": 1391,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useWorkout.ts": {
            "lines": 288,
            "tokens": 2588,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useRealtimeSync.ts": {
            "lines": 78,
            "tokens": 618,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useMuscleRecovery.ts": {
            "lines": 182,
            "tokens": 1599,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useIntelligentPreloading.ts": {
            "lines": 98,
            "tokens": 717,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/useExerciseHistory.ts": {
            "lines": 108,
            "tokens": 985,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/hooks/index.ts": {
            "lines": 11,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/components/index.ts": {
            "lines": 19,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/services/wearables.service.ts": {
            "lines": 44,
            "tokens": 403,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 108,
            "duplicatedTokens": 1374,
            "percentage": 245.45,
            "percentageTokens": 340.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/services/wearable.service.ts": {
            "lines": 40,
            "tokens": 174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/hooks/useWearables.ts": {
            "lines": 70,
            "tokens": 594,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 169,
            "duplicatedTokens": 1342,
            "percentage": 241.43,
            "percentageTokens": 225.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/hooks/useWearableSync.ts": {
            "lines": 311,
            "tokens": 2669,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/hooks/index.ts": {
            "lines": 3,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/services/social.service.ts": {
            "lines": 44,
            "tokens": 403,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 229,
            "percentage": 40.91,
            "percentageTokens": 56.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/hooks/useSocialStore.ts": {
            "lines": 336,
            "tokens": 2723,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/hooks/useSocial.ts": {
            "lines": 70,
            "tokens": 594,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 59,
            "duplicatedTokens": 469,
            "percentage": 84.29,
            "percentageTokens": 78.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/hooks/index.ts": {
            "lines": 3,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/components/index.ts": {
            "lines": 5,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/utils/sleepConfig.ts": {
            "lines": 520,
            "tokens": 3539,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/services/sleep.service.ts": {
            "lines": 44,
            "tokens": 403,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 229,
            "percentage": 40.91,
            "percentageTokens": 56.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/hooks/useSleepStore.ts": {
            "lines": 355,
            "tokens": 3302,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 93,
            "duplicatedTokens": 876,
            "percentage": 26.2,
            "percentageTokens": 26.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/hooks/useSleepAnalysis.ts": {
            "lines": 465,
            "tokens": 4283,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 110,
            "percentage": 3.23,
            "percentageTokens": 2.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/hooks/useSleep.ts": {
            "lines": 71,
            "tokens": 615,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 51,
            "duplicatedTokens": 404,
            "percentage": 71.83,
            "percentageTokens": 65.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/hooks/index.ts": {
            "lines": 4,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/components/index.ts": {
            "lines": 4,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/recovery/services/recovery.service.ts": {
            "lines": 228,
            "tokens": 1954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/recovery/hooks/useRecovery.ts": {
            "lines": 206,
            "tokens": 1794,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/types/userProfile.ts": {
            "lines": 97,
            "tokens": 876,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/services/profile.service.ts": {
            "lines": 44,
            "tokens": 403,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 229,
            "percentage": 40.91,
            "percentageTokens": 56.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/hooks/useProfile.ts": {
            "lines": 238,
            "tokens": 2082,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/components/index.ts": {
            "lines": 3,
            "tokens": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/nutrition/services/nutrition.service.ts": {
            "lines": 519,
            "tokens": 4549,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/nutrition/hooks/useNutritionTracking.ts": {
            "lines": 125,
            "tokens": 1147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/nutrition/hooks/useNutrition.ts": {
            "lines": 372,
            "tokens": 3235,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/nutrition/hooks/index.ts": {
            "lines": 3,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/landing/services/landing.service.ts": {
            "lines": 44,
            "tokens": 403,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 229,
            "percentage": 40.91,
            "percentageTokens": 56.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/landing/hooks/useLanding.ts": {
            "lines": 521,
            "tokens": 3533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/hydration/types/hydration-types.ts": {
            "lines": 18,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/hydration/services/hydration.service.ts": {
            "lines": 44,
            "tokens": 403,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 229,
            "percentage": 40.91,
            "percentageTokens": 56.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/hydration/hooks/useHydrationStore.ts": {
            "lines": 337,
            "tokens": 2997,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 77,
            "duplicatedTokens": 622,
            "percentage": 22.85,
            "percentageTokens": 20.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/hydration/hooks/useHydrationReminders.ts": {
            "lines": 370,
            "tokens": 3100,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 110,
            "percentage": 4.05,
            "percentageTokens": 3.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/hydration/hooks/useHydration.ts": {
            "lines": 70,
            "tokens": 594,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 59,
            "duplicatedTokens": 469,
            "percentage": 84.29,
            "percentageTokens": 78.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/hydration/hooks/index.ts": {
            "lines": 4,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/types/onboarding-types.ts": {
            "lines": 107,
            "tokens": 657,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/types/index.ts": {
            "lines": 3,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/types/conversationalOnboarding.ts": {
            "lines": 787,
            "tokens": 5770,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/services/auth.service.ts": {
            "lines": 595,
            "tokens": 4889,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 96,
            "duplicatedTokens": 930,
            "percentage": 16.13,
            "percentageTokens": 19.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/hooks/usePWA.ts": {
            "lines": 290,
            "tokens": 2366,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/hooks/useErrorHandler.ts": {
            "lines": 297,
            "tokens": 2546,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/hooks/useConversationalOnboarding.ts": {
            "lines": 535,
            "tokens": 4812,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 62,
            "duplicatedTokens": 456,
            "percentage": 11.59,
            "percentageTokens": 9.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/hooks/useAuthStatus.ts": {
            "lines": 68,
            "tokens": 564,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/hooks/useAuth.ts": {
            "lines": 95,
            "tokens": 812,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/hooks/index.ts": {
            "lines": 6,
            "tokens": 54,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/auth/components/index.ts": {
            "lines": 4,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/types/dashboard.ts": {
            "lines": 45,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/services/analytics.service.ts": {
            "lines": 32,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/hooks/useAnalytics.ts": {
            "lines": 46,
            "tokens": 422,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/components/index.ts": {
            "lines": 10,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/services/ai-coach.service.ts": {
            "lines": 32,
            "tokens": 143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/useUserPreferences.ts": {
            "lines": 173,
            "tokens": 1450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/useUnifiedLoading.ts": {
            "lines": 193,
            "tokens": 1590,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/usePositions.ts": {
            "lines": 73,
            "tokens": 665,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 86,
            "percentage": 13.7,
            "percentageTokens": 12.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/usePerformanceMonitoring.ts": {
            "lines": 211,
            "tokens": 1690,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/usePerformance.ts": {
            "lines": 169,
            "tokens": 1437,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/useLoadingState.ts": {
            "lines": 236,
            "tokens": 2093,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/useAICoach.ts": {
            "lines": 100,
            "tokens": 835,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/use-supabase-query.ts": {
            "lines": 250,
            "tokens": 2020,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/use-debounce.ts": {
            "lines": 157,
            "tokens": 1202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/hooks/index.ts": {
            "lines": 10,
            "tokens": 90,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/components/index.ts": {
            "lines": 11,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/admin/services/admin.service.ts": {
            "lines": 44,
            "tokens": 403,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 229,
            "percentage": 40.91,
            "percentageTokens": 56.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/admin/hooks/useAdmin.ts": {
            "lines": 375,
            "tokens": 3409,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 176,
            "percentage": 3.73,
            "percentageTokens": 5.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/admin/hooks/index.ts": {
            "lines": 3,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/test-utils/mocks/server.ts": {
            "lines": 295,
            "tokens": 2326,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/store/slices/workout.slice.ts": {
            "lines": 257,
            "tokens": 2251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/types/workout.types.ts": {
            "lines": 215,
            "tokens": 1399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/types/user.ts": {
            "lines": 106,
            "tokens": 812,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/types/social.types.ts": {
            "lines": 439,
            "tokens": 2812,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/types/sleep.types.ts": {
            "lines": 243,
            "tokens": 1533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/types/nutrition.types.ts": {
            "lines": 224,
            "tokens": 1495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/types/jest.d.ts": {
            "lines": 16,
            "tokens": 114,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/types/index.ts": {
            "lines": 188,
            "tokens": 1195,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/types/api.types.ts": {
            "lines": 87,
            "tokens": 523,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/usemobile.ts": {
            "lines": 14,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/useUnitPreferences.ts": {
            "lines": 51,
            "tokens": 421,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/useSupabase.ts": {
            "lines": 395,
            "tokens": 4448,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 110,
            "duplicatedTokens": 1174,
            "percentage": 27.85,
            "percentageTokens": 26.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/useNotifications.ts": {
            "lines": 111,
            "tokens": 1114,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/useLocalStorage.ts": {
            "lines": 30,
            "tokens": 292,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/useForm.ts": {
            "lines": 266,
            "tokens": 2236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/useDebounce.ts": {
            "lines": 24,
            "tokens": 201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/useAsync.ts": {
            "lines": 58,
            "tokens": 575,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/useAnimations.ts": {
            "lines": 127,
            "tokens": 1126,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/use-toast.ts": {
            "lines": 80,
            "tokens": 672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/hooks/index.ts": {
            "lines": 17,
            "tokens": 201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/shared/components/index.ts": {
            "lines": 19,
            "tokens": 276,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/integrations/supabase/types.ts": {
            "lines": 833,
            "tokens": 7844,
            "sources": 1,
            "clones": 20,
            "duplicatedLines": 238,
            "duplicatedTokens": 2654,
            "percentage": 28.57,
            "percentageTokens": 33.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/integrations/supabase/database.ts": {
            "lines": 559,
            "tokens": 4447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/workout/index.ts": {
            "lines": 11,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/wearables/index.ts": {
            "lines": 14,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/social/index.ts": {
            "lines": 14,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/sleep/index.ts": {
            "lines": 14,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/recovery/index.ts": {
            "lines": 4,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/profile/index.ts": {
            "lines": 14,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/landing/index.ts": {
            "lines": 14,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/hydration/index.ts": {
            "lines": 14,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/analytics/index.ts": {
            "lines": 14,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/ai-coach/index.ts": {
            "lines": 14,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/admin/index.ts": {
            "lines": 14,
            "tokens": 50,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/utils/unitConversion.ts": {
            "lines": 162,
            "tokens": 1817,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/utils/positionsService.ts": {
            "lines": 51,
            "tokens": 568,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 86,
            "percentage": 19.61,
            "percentageTokens": 15.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/utils/badgeConfig.ts": {
            "lines": 98,
            "tokens": 755,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/store/settingsStore.ts": {
            "lines": 372,
            "tokens": 2861,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 192,
            "percentage": 8.06,
            "percentageTokens": 6.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/store/scalesStore.ts": {
            "lines": 510,
            "tokens": 4597,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/store/profileStore.ts": {
            "lines": 266,
            "tokens": 2255,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 99,
            "percentage": 6.02,
            "percentageTokens": 4.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/store/index.ts": {
            "lines": 55,
            "tokens": 281,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 59,
            "duplicatedTokens": 288,
            "percentage": 107.27,
            "percentageTokens": 102.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/store/index-new.ts": {
            "lines": 60,
            "tokens": 290,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 59,
            "duplicatedTokens": 288,
            "percentage": 98.33,
            "percentageTokens": 99.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/store/authStore.ts": {
            "lines": 164,
            "tokens": 1295,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 93,
            "percentage": 8.54,
            "percentageTokens": 7.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/store/appStore.ts": {
            "lines": 964,
            "tokens": 8483,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 234,
            "percentage": 3.11,
            "percentageTokens": 2.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/userDataService.ts": {
            "lines": 346,
            "tokens": 2488,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/usePositions.ts": {
            "lines": 54,
            "tokens": 649,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/supabaseServiceUnified.ts": {
            "lines": 238,
            "tokens": 2124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/sportsService.ts": {
            "lines": 257,
            "tokens": 2052,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/socialService.ts": {
            "lines": 644,
            "tokens": 4440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/scaleService.ts": {
            "lines": 124,
            "tokens": 970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/muscleRecoveryService.ts": {
            "lines": 713,
            "tokens": 6305,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/badgeService.ts": {
            "lines": 439,
            "tokens": 3201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/api.service.ts": {
            "lines": 346,
            "tokens": 2865,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 188,
            "percentage": 8.09,
            "percentageTokens": 6.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/analyticsService.ts": {
            "lines": 504,
            "tokens": 4265,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/services/aiService.ts": {
            "lines": 330,
            "tokens": 2822,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/wellness.ts": {
            "lines": 66,
            "tokens": 460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/types.ts": {
            "lines": 29,
            "tokens": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/social.ts": {
            "lines": 52,
            "tokens": 334,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/index.ts": {
            "lines": 70,
            "tokens": 614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/hooks.ts": {
            "lines": 99,
            "tokens": 766,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/fitness.ts": {
            "lines": 91,
            "tokens": 650,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/dashboard.ts": {
            "lines": 66,
            "tokens": 458,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/auth.ts": {
            "lines": 60,
            "tokens": 403,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/routes/admin.ts": {
            "lines": 73,
            "tokens": 521,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/router/lazy-imports.ts": {
            "lines": 18,
            "tokens": 284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/router/config.ts": {
            "lines": 73,
            "tokens": 510,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/locales/admin.ts": {
            "lines": 112,
            "tokens": 726,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/wearableUtils.ts": {
            "lines": 281,
            "tokens": 2643,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/utils.ts": {
            "lines": 5,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/unitConversions.ts": {
            "lines": 181,
            "tokens": 1894,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/supabase.ts": {
            "lines": 28,
            "tokens": 222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/queryConfig.ts": {
            "lines": 188,
            "tokens": 1873,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/hooks.ts": {
            "lines": 38,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/components.ts": {
            "lines": 5,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/auth.ts": {
            "lines": 132,
            "tokens": 1005,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 248,
            "percentage": 25.76,
            "percentageTokens": 24.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/api.ts": {
            "lines": 199,
            "tokens": 2014,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/lib/analytics.ts": {
            "lines": 425,
            "tokens": 4023,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 168,
            "percentage": 4.71,
            "percentageTokens": 4.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/i18n/i18n.ts": {
            "lines": 67,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/features/index.ts": {
            "lines": 17,
            "tokens": 123,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/data/sportsWorkoutConfig.ts": {
            "lines": 418,
            "tokens": 3489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/data/smartPacks.ts": {
            "lines": 312,
            "tokens": 1963,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/data/packs.ts": {
            "lines": 42,
            "tokens": 302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/data/onboardingData.ts": {
            "lines": 783,
            "tokens": 4913,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/config/supabaseClient.ts": {
            "lines": 21,
            "tokens": 162,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/config/environment.ts": {
            "lines": 95,
            "tokens": 621,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/setupTests.ts": {
            "lines": 85,
            "tokens": 584,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/i18n.ts": {
            "lines": 92,
            "tokens": 514,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 29606,
          "tokens": 242504,
          "sources": 172,
          "clones": 60,
          "duplicatedLines": 792,
          "duplicatedTokens": 7255,
          "percentage": 2.68,
          "percentageTokens": 2.99,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "json": {
        "sources": {
          "client/src/locales/fr/onboarding.json": {
            "lines": 59,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/locales/fr/common.json": {
            "lines": 49,
            "tokens": 307,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/locales/en/onboarding.json": {
            "lines": 59,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/locales/en/common.json": {
            "lines": 49,
            "tokens": 307,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 216,
          "tokens": 1318,
          "sources": 4,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "client/src/styles/globals.css": {
            "lines": 51,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/styles/auth.css": {
            "lines": 120,
            "tokens": 654,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/index.css": {
            "lines": 325,
            "tokens": 1811,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/App.css": {
            "lines": 41,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 537,
          "tokens": 2926,
          "sources": 4,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markdown": {
        "sources": {
          "client/src/routes/README.md": {
            "lines": 215,
            "tokens": 1343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "client/src/ARCHITECTURE.md": {
            "lines": 301,
            "tokens": 1971,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 516,
          "tokens": 3314,
          "sources": 2,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 68592,
      "tokens": 559302,
      "sources": 412,
      "clones": 101,
      "duplicatedLines": 1472,
      "duplicatedTokens": 12801,
      "percentage": 2.15,
      "percentageTokens": 2.29,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ")\n                                            }\n                                            size=\"sm\"\n                                            variant=\"outline\"\n                                            className=\"h-8 w-8 p-0\"\n                                          >\n                                            <Minus size={14} />\n                                          </Button>\n                                          {editingSet?.exerciseId === exercise.id &&\n                                          editingSet?.setIndex === setIndex &&\n                                          editingSet?.field === 'duration' ? (\n                                            <div className=\"flex items-center space-x-1\">\n                                              <Input\n                                                value={editingSet.value}\n                                                onChange={e =>\n                                                  setEditingSet({\n                                                    ...editingSet,\n                                                    value: e.target.value,\n                                                  })\n                                                }\n                                                className=\"h-8 w-16 text-center text-sm\"\n                                              />\n                                              <Button\n                                                onClick={handleSetSave}\n                                                size=\"sm\"\n                                                className=\"h-8 w-8 p-0\"\n                                              >\n                                                <Save size={12} />\n                                              </Button>\n                                            </div>\n                                          ) : (\n                                            <button\n                                              onClick={() =>\n                                                handleSetEdit(exercise.id, setIndex, 'duration'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 600,
        "end": 633,
        "startLoc": {
          "line": 600,
          "column": 11,
          "position": 5042
        },
        "endLoc": {
          "line": 633,
          "column": 11,
          "position": 5256
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 536,
        "end": 569,
        "startLoc": {
          "line": 536,
          "column": 9,
          "position": 4619
        },
        "endLoc": {
          "line": 569,
          "column": 9,
          "position": 4833
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "= (\n    exerciseId: string,\n    setIndex: number,\n    field: 'reps' | 'weight' | 'duration'\n  ) => {\n    const exercise = currentSession?.exercises.find(e => e.id === exerciseId);\n    const set = exercise?.sets[setIndex];\n\n    if (set) {\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 201,
        "end": 210,
        "startLoc": {
          "line": 201,
          "column": 2,
          "position": 1784
        },
        "endLoc": {
          "line": 210,
          "column": 6,
          "position": 1878
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 150,
        "end": 159,
        "startLoc": {
          "line": 150,
          "column": 2,
          "position": 1326
        },
        "endLoc": {
          "line": 159,
          "column": 14,
          "position": 1420
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "= (\n    exerciseId: string,\n    setIndex: number,\n    field: 'reps' | 'weight' | 'duration'\n  ) => {\n    const exercise = currentSession?.exercises.find(e => e.id === exerciseId);\n    const set = exercise?.sets[setIndex];\n\n    if (set) {\n      const currentValue = set[field] || 0;\n      const decrement",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 218,
        "end": 228,
        "startLoc": {
          "line": 218,
          "column": 2,
          "position": 1958
        },
        "endLoc": {
          "line": 228,
          "column": 10,
          "position": 2071
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 150,
        "end": 211,
        "startLoc": {
          "line": 150,
          "column": 2,
          "position": 1326
        },
        "endLoc": {
          "line": 211,
          "column": 10,
          "position": 1897
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ":\n                                        </span>\n                                        <div className=\"flex items-center space-x-1\">\n                                          <Button\n                                            onClick={() =>\n                                              decrementSet(exercise.id, setIndex, 'duration')\n                                            }\n                                            size=\"sm\"\n                                            variant=\"outline\"\n                                            className=\"h-8 w-8 p-0\"\n                                          >\n                                            <Minus size={14} />\n                                          </Button>\n                                          {editingSet?.exerciseId === exercise.id &&\n                                          editingSet?.setIndex === setIndex &&\n                                          editingSet?.field === 'duration'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 595,
        "end": 610,
        "startLoc": {
          "line": 595,
          "column": 6,
          "position": 5002
        },
        "endLoc": {
          "line": 610,
          "column": 11,
          "position": 5118
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 531,
        "end": 546,
        "startLoc": {
          "line": 531,
          "column": 6,
          "position": 4579
        },
        "endLoc": {
          "line": 546,
          "column": 9,
          "position": 4695
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "? (\n                                            <div className=\"flex items-center space-x-1\">\n                                              <Input\n                                                value={editingSet.value}\n                                                onChange={e =>\n                                                  setEditingSet({\n                                                    ...editingSet,\n                                                    value: e.target.value,\n                                                  })\n                                                }\n                                                className=\"h-8 w-16 text-center text-sm\"\n                                              />\n                                              <Button\n                                                onClick={handleSetSave}\n                                                size=\"sm\"\n                                                className=\"h-8 w-8 p-0\"\n                                              >\n                                                <Save size={12} />\n                                              </Button>\n                                            </div>\n                                          ) : (\n                                            <button\n                                              onClick={() =>\n                                                handleSetEdit(exercise.id, setIndex, 'duration')\n                                              }\n                                              className=\"text-sm font-medium hover:text-blue-600 flex items-center space-x-1 min-w-[50px] justify-center h-8 px-2 border rounded",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 610,
        "end": 635,
        "startLoc": {
          "line": 610,
          "column": 2,
          "position": 5120
        },
        "endLoc": {
          "line": 635,
          "column": 120,
          "position": 5264
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 546,
        "end": 571,
        "startLoc": {
          "line": 546,
          "column": 2,
          "position": 4697
        },
        "endLoc": {
          "line": 571,
          "column": 120,
          "position": 4841
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "</span>\n                                              <Edit3 size={10} />\n                                            </button>\n                                          )}\n                                          <Button\n                                            onClick={() =>\n                                              incrementSet(exercise.id, setIndex, 'duration')\n                                            }\n                                            size=\"sm\"\n                                            variant=\"outline\"\n                                            className=\"h-8 w-8 p-0\"\n                                          >\n                                            <Plus size={14} />\n                                          </Button>\n                                        </div>\n                                      </div>\n                                    )}\n                                  </",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 637,
        "end": 654,
        "startLoc": {
          "line": 637,
          "column": 2,
          "position": 5279
        },
        "endLoc": {
          "line": 654,
          "column": 3,
          "position": 5382
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/pages/WorkoutPage.tsx",
        "start": 573,
        "end": 591,
        "startLoc": {
          "line": 573,
          "column": 3,
          "position": 4856
        },
        "endLoc": {
          "line": 591,
          "column": 2,
          "position": 4960
        }
      }
    },
    {
      "format": "tsx",
      "lines": 34,
      "fragment": "</label>\n                      <div className=\"flex items-center space-x-1\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          className=\"h-8 w-8 p-0\"\n                          onClick={() =>\n                            updateExerciseData(exercise, 'reps', exerciseData.reps - 1)\n                          }\n                        >\n                          <Minus size={14} />\n                        </Button>\n                        <Input\n                          type=\"number\"\n                          value={exerciseData.reps}\n                          onChange={e =>\n                            updateExerciseData(exercise, 'reps', parseInt(e.target.value) || 0)\n                          }\n                          className=\"h-8 w-12 text-center p-1\"\n                        />\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          className=\"h-8 w-8 p-0\"\n                          onClick={() =>\n                            updateExerciseData(exercise, 'reps', exerciseData.reps + 1)\n                          }\n                        >\n                          <Plus size={14} />\n                        </Button>\n                      </div>\n                    </div>\n\n                    {/* Weight */",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/workout/components/WorkoutCard.tsx",
        "start": 224,
        "end": 257,
        "startLoc": {
          "line": 224,
          "column": 5,
          "position": 1951
        },
        "endLoc": {
          "line": 257,
          "column": 13,
          "position": 2167
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/components/WorkoutCard.tsx",
        "start": 189,
        "end": 222,
        "startLoc": {
          "line": 189,
          "column": 6,
          "position": 1716
        },
        "endLoc": {
          "line": 222,
          "column": 11,
          "position": 1932
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "</label>\n                      <div className=\"flex items-center space-x-1\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          className=\"h-8 w-8 p-0\"\n                          onClick={() =>\n                            updateExerciseData(exercise, 'weight', exerciseData.weight - 2.5)\n                          }\n                        >\n                          <Minus size={14} />\n                        </Button>\n                        <Input\n                          type=\"number\"\n                          step",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/workout/components/WorkoutCard.tsx",
        "start": 259,
        "end": 273,
        "startLoc": {
          "line": 259,
          "column": 2,
          "position": 2190
        },
        "endLoc": {
          "line": 273,
          "column": 5,
          "position": 2281
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/components/WorkoutCard.tsx",
        "start": 189,
        "end": 203,
        "startLoc": {
          "line": 189,
          "column": 6,
          "position": 1716
        },
        "endLoc": {
          "line": 203,
          "column": 6,
          "position": 1807
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "const formatTime = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div\n      ",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/workout/components/ExerciseCard.tsx",
        "start": 30,
        "end": 38,
        "startLoc": {
          "line": 30,
          "column": 3,
          "position": 223
        },
        "endLoc": {
          "line": 38,
          "column": 7,
          "position": 312
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/components/WorkoutProgressCard.tsx",
        "start": 19,
        "end": 26,
        "startLoc": {
          "line": 19,
          "column": 3,
          "position": 130
        },
        "endLoc": {
          "line": 26,
          "column": 2,
          "position": 219
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(userId: string): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`);\n      if (!response.ok) throw new Error('Erreur lors de la récupération des données');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur API social:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/social/services/social.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 14,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 21,
          "position": 127
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 17,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 24,
          "position": 127
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(userId: string, data: any): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la mise à jour');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur mise à jour social:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/social/services/social.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 13,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 29,
          "position": 294
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 16,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 32,
          "position": 294
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ">\n        <button\n          onClick={() => setPage(p => Math.max(p - 1, 0))}\n          disabled={page === 0}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page précédente\"\n        >\n          Précédent\n        </button>\n        <span aria-live=\"polite\" aria-atomic=\"true\" className=\"text-lg\">\n          Page {page + 1} / {pageCount}\n        </span>\n        <button\n          onClick={() => setPage(p => (p + 1 < pageCount ? p + 1 : p))}\n          disabled={page + 1 >= pageCount}\n          className=\"px-4 py-2 rounded bg-blue-600 text-white disabled:opacity-50\"\n          aria-label=\"Page suivante\"\n        >\n          Suivant\n        </button>\n      </nav>\n    </",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/social/pages/ChallengesPage.tsx",
        "start": 336,
        "end": 357,
        "startLoc": {
          "line": 336,
          "column": 7,
          "position": 2817
        },
        "endLoc": {
          "line": 357,
          "column": 3,
          "position": 3003
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/pages/ExercisesPage.tsx",
        "start": 537,
        "end": 558,
        "startLoc": {
          "line": 537,
          "column": 2,
          "position": 4625
        },
        "endLoc": {
          "line": 558,
          "column": 2,
          "position": 4786
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "{\n  const [data, setData] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const currentUserId = userId || 'current-user';\n\n  const loadData = useCallback(async () => {\n    if (!currentUserId) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await SocialService",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/social/hooks/useSocial.ts",
        "start": 12,
        "end": 26,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 119
        },
        "endLoc": {
          "line": 26,
          "column": 14,
          "position": 260
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/hooks/useWearables.ts",
        "start": 12,
        "end": 26,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 119
        },
        "endLoc": {
          "line": 26,
          "column": 17,
          "position": 260
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(currentUserId);\n      setData(result);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Erreur lors du chargement';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentUserId]);\n\n  const update = useCallback(\n    async (newData: any) => {\n      if (!currentUserId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const result = await SocialService",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/social/hooks/useSocial.ts",
        "start": 26,
        "end": 44,
        "startLoc": {
          "line": 26,
          "column": 14,
          "position": 263
        },
        "endLoc": {
          "line": 44,
          "column": 14,
          "position": 410
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/hooks/useWearables.ts",
        "start": 26,
        "end": 44,
        "startLoc": {
          "line": 26,
          "column": 17,
          "position": 263
        },
        "endLoc": {
          "line": 44,
          "column": 17,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "(currentUserId, newData);\n        setData(result);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Erreur lors de la mise à jour';\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId]\n  );\n\n  const refresh = useCallback(async () => {\n    await loadData();\n  }, [loadData]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return {\n    data,\n    isLoading,\n    error,\n    refresh,\n    update,\n  };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/social/hooks/useSocial.ts",
        "start": 44,
        "end": 71,
        "startLoc": {
          "line": 44,
          "column": 13,
          "position": 413
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 594
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/hooks/useWearables.ts",
        "start": 44,
        "end": 71,
        "startLoc": {
          "line": 44,
          "column": 16,
          "position": 413
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 594
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": "={() => setActiveTab(tab as any)}\n      className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-colors ${\n        activeTab === tab ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n      }`}\n    >\n      <Icon size={16} />\n      <span>{label}</span>\n      {count !== undefined && count > 0 && (\n        <span\n          className={`px-2 py-1 rounded-full text-xs ${\n            activeTab === tab ? 'bg-blue-500' : 'bg-red-500 text-white'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/social/components/SocialConnections.tsx",
        "start": 176,
        "end": 186,
        "startLoc": {
          "line": 176,
          "column": 8,
          "position": 1515
        },
        "endLoc": {
          "line": 186,
          "column": 24,
          "position": 1614
        }
      },
      "secondFile": {
        "name": "client/src/features/social/components/SocialDashboard.tsx",
        "start": 158,
        "end": 168,
        "startLoc": {
          "line": 158,
          "column": 8,
          "position": 1208
        },
        "endLoc": {
          "line": 168,
          "column": 14,
          "position": 1299
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ";\n\n  const TabButton = ({\n    tab,\n    icon: Icon,\n    label,\n    count,\n  }: {\n    tab: string;\n    icon: any;\n    label: string;\n    count?: number;\n  }) => (\n    <button\n      onClick={() => setActiveTab(tab as any)}\n      className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-colors ${\n        activeTab === tab ? 'bg-blue-600 text-white' : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n      }`}\n    >\n      <Icon size={16} />\n      <span>{label}</span>\n      {count !== undefined && count",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/social/components/SocialConnections.tsx",
        "start": 162,
        "end": 183,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1435
        },
        "endLoc": {
          "line": 183,
          "column": 6,
          "position": 1586
        }
      },
      "secondFile": {
        "name": "client/src/features/social/components/SocialDashboard.tsx",
        "start": 144,
        "end": 165,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 1128
        },
        "endLoc": {
          "line": 165,
          "column": 2,
          "position": 1279
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(userId: string): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`);\n      if (!response.ok) throw new Error('Erreur lors de la récupération des données');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur API sleep:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/sleep/services/sleep.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 13,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 20,
          "position": 127
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 17,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 24,
          "position": 127
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(userId: string, data: any): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la mise à jour');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur mise à jour sleep:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/sleep/services/sleep.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 12,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 28,
          "position": 294
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 16,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 32,
          "position": 294
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": async (id, updates) => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const updatedData = {\n            ...updates,\n            updated_at: new Date().toISOString(),\n          };\n\n          const { data, error } = await supabase\n            .from('sleep_goals'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/sleep/hooks/useSleepStore.ts",
        "start": 192,
        "end": 202,
        "startLoc": {
          "line": 192,
          "column": 11,
          "position": 1676
        },
        "endLoc": {
          "line": 202,
          "column": 14,
          "position": 1773
        }
      },
      "secondFile": {
        "name": "client/src/features/sleep/hooks/useSleepStore.ts",
        "start": 59,
        "end": 69,
        "startLoc": {
          "line": 59,
          "column": 12,
          "position": 488
        },
        "endLoc": {
          "line": 69,
          "column": 16,
          "position": 585
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": async () => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const {\n            data: { user },\n          } = await supabase.auth.getUser();\n          if (!user) throw new Error('Utilisateur non authentifié');\n\n          const { data, error } = await supabase\n            .from('sleep_goals'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/sleep/hooks/useSleepStore.ts",
        "start": 224,
        "end": 234,
        "startLoc": {
          "line": 224,
          "column": 10,
          "position": 1978
        },
        "endLoc": {
          "line": 234,
          "column": 14,
          "position": 2088
        }
      },
      "secondFile": {
        "name": "client/src/features/sleep/hooks/useSleepStore.ts",
        "start": 120,
        "end": 130,
        "startLoc": {
          "line": 120,
          "column": 12,
          "position": 1030
        },
        "endLoc": {
          "line": 130,
          "column": 16,
          "position": 1140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ">(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const currentUserId = userId || 'current-user';\n\n  const loadData = useCallback(async () => {\n    if (!currentUserId) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await SleepService",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/sleep/hooks/useSleep.ts",
        "start": 14,
        "end": 27,
        "startLoc": {
          "line": 14,
          "column": 5,
          "position": 157
        },
        "endLoc": {
          "line": 27,
          "column": 13,
          "position": 281
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/hooks/useWearables.ts",
        "start": 13,
        "end": 26,
        "startLoc": {
          "line": 13,
          "column": 4,
          "position": 136
        },
        "endLoc": {
          "line": 26,
          "column": 17,
          "position": 260
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(currentUserId);\n      setData(result);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Erreur lors du chargement';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentUserId]);\n\n  const update = useCallback(\n    async (newData: SleepEntry",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/sleep/hooks/useSleep.ts",
        "start": 27,
        "end": 38,
        "startLoc": {
          "line": 27,
          "column": 13,
          "position": 284
        },
        "endLoc": {
          "line": 38,
          "column": 11,
          "position": 383
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/hooks/useWearables.ts",
        "start": 26,
        "end": 37,
        "startLoc": {
          "line": 26,
          "column": 17,
          "position": 263
        },
        "endLoc": {
          "line": 37,
          "column": 4,
          "position": 362
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "(currentUserId, newData);\n        setData(result);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Erreur lors de la mise à jour';\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId]\n  );\n\n  const refresh = useCallback(async () => {\n    await loadData();\n  }, [loadData]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return {\n    data,\n    isLoading,\n    error,\n    refresh,\n    update,\n  };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/sleep/hooks/useSleep.ts",
        "start": 45,
        "end": 72,
        "startLoc": {
          "line": 45,
          "column": 12,
          "position": 434
        },
        "endLoc": {
          "line": 72,
          "column": 2,
          "position": 615
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/hooks/useWearables.ts",
        "start": 44,
        "end": 71,
        "startLoc": {
          "line": 44,
          "column": 16,
          "position": 413
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 594
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(userId: string): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`);\n      if (!response.ok) throw new Error('Erreur lors de la récupération des données');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur API profile:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/profile/services/profile.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 15,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 22,
          "position": 127
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 17,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 24,
          "position": 127
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(userId: string, data: any): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la mise à jour');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur mise à jour profile:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/profile/services/profile.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 14,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 30,
          "position": 294
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 16,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 32,
          "position": 294
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "?</h3>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowTip(!showTip)}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <Star className=\"h-4 w-4\" />\n                </Button>\n              </div>\n              <p className=\"text-gray-600\">Pour",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 171,
        "end": 181,
        "startLoc": {
          "line": 171,
          "column": 2,
          "position": 1593
        },
        "endLoc": {
          "line": 181,
          "column": 5,
          "position": 1669
        }
      },
      "secondFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 105,
        "end": 115,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1061
        },
        "endLoc": {
          "line": 115,
          "column": 5,
          "position": 1137
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</p>\n              {showTip && (\n                <div className=\"mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded-md text-sm text-yellow-800 relative\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setShowTip(false)}\n                    className=\"absolute top-1 right-1 h-6 w-6 p-0\"\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                  {tips[1",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 181,
        "end": 192,
        "startLoc": {
          "line": 181,
          "column": 9,
          "position": 1678
        },
        "endLoc": {
          "line": 192,
          "column": 2,
          "position": 1760
        }
      },
      "secondFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 11,
          "position": 1150
        },
        "endLoc": {
          "line": 126,
          "column": 2,
          "position": 1232
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</h3>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowTip(!showTip)}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <Star className=\"h-4 w-4\" />\n                </Button>\n              </div>\n              <p className=\"text-gray-600\">\n                Nous",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 233,
        "end": 244,
        "startLoc": {
          "line": 233,
          "column": 12,
          "position": 2116
        },
        "endLoc": {
          "line": 244,
          "column": 5,
          "position": 2193
        }
      },
      "secondFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 105,
        "end": 115,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1062
        },
        "endLoc": {
          "line": 115,
          "column": 5,
          "position": 1137
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</p>\n              {showTip && (\n                <div className=\"mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded-md text-sm text-yellow-800 relative\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setShowTip(false)}\n                    className=\"absolute top-1 right-1 h-6 w-6 p-0\"\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                  {tips[2",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 245,
        "end": 256,
        "startLoc": {
          "line": 245,
          "column": 15,
          "position": 2214
        },
        "endLoc": {
          "line": 256,
          "column": 2,
          "position": 2296
        }
      },
      "secondFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 11,
          "position": 1150
        },
        "endLoc": {
          "line": 126,
          "column": 2,
          "position": 1232
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "?</h3>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowTip(!showTip)}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <Star className=\"h-4 w-4\" />\n                </Button>\n              </div>\n              <p className=\"text-gray-600\">\n                Cela influence",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 341,
        "end": 352,
        "startLoc": {
          "line": 341,
          "column": 2,
          "position": 3006
        },
        "endLoc": {
          "line": 352,
          "column": 10,
          "position": 3086
        }
      },
      "secondFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 105,
        "end": 115,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1061
        },
        "endLoc": {
          "line": 115,
          "column": 5,
          "position": 1139
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</p>\n              {showTip && (\n                <div className=\"mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded-md text-sm text-yellow-800 relative\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setShowTip(false)}\n                    className=\"absolute top-1 right-1 h-6 w-6 p-0\"\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                  {tips[3",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 353,
        "end": 364,
        "startLoc": {
          "line": 353,
          "column": 15,
          "position": 3099
        },
        "endLoc": {
          "line": 364,
          "column": 2,
          "position": 3181
        }
      },
      "secondFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 11,
          "position": 1150
        },
        "endLoc": {
          "line": 126,
          "column": 2,
          "position": 1232
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</h3>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowTip(!showTip)}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <Star className=\"h-4 w-4\" />\n                </Button>\n              </div>\n              <p className=\"text-gray-600\">\n                Combien",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 411,
        "end": 422,
        "startLoc": {
          "line": 411,
          "column": 5,
          "position": 3509
        },
        "endLoc": {
          "line": 422,
          "column": 8,
          "position": 3586
        }
      },
      "secondFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 105,
        "end": 115,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 1062
        },
        "endLoc": {
          "line": 115,
          "column": 5,
          "position": 1137
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</p>\n              {showTip && (\n                <div className=\"mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded-md text-sm text-yellow-800 relative\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setShowTip(false)}\n                    className=\"absolute top-1 right-1 h-6 w-6 p-0\"\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                  {tips[4",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 423,
        "end": 434,
        "startLoc": {
          "line": 423,
          "column": 15,
          "position": 3607
        },
        "endLoc": {
          "line": 434,
          "column": 2,
          "position": 3689
        }
      },
      "secondFile": {
        "name": "client/src/features/nutrition/components/PersonalInfoForm.tsx",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 11,
          "position": 1150
        },
        "endLoc": {
          "line": 126,
          "column": 2,
          "position": 1232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(userId: string): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`);\n      if (!response.ok) throw new Error('Erreur lors de la récupération des données');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur API landing:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/landing/services/landing.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 15,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 22,
          "position": 127
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 17,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 24,
          "position": 127
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(userId: string, data: any): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la mise à jour');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur mise à jour landing:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/landing/services/landing.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 14,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 30,
          "position": 294
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 16,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 32,
          "position": 294
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(userId: string): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`);\n      if (!response.ok) throw new Error('Erreur lors de la récupération des données');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur API hydration:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/services/hydration.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 17,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 24,
          "position": 127
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 17,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 24,
          "position": 127
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(userId: string, data: any): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la mise à jour');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur mise à jour hydration:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/services/hydration.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 16,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 32,
          "position": 294
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 16,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 32,
          "position": 294
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n      goals: [],\n      currentGoal: null,\n      stats: null,\n      isLoading: false,\n      error: null,\n\n      // Actions - Entries\n      addEntry: async entryData => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const {\n            data: { user },\n          } = await supabase.auth.getUser();\n          if (!user) throw new Error('Utilisateur non authentifié');\n\n          const newEntry: Omit<HydrationEntry",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/hooks/useHydrationStore.ts",
        "start": 10,
        "end": 27,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 106
        },
        "endLoc": {
          "line": 27,
          "column": 15,
          "position": 245
        }
      },
      "secondFile": {
        "name": "client/src/features/sleep/hooks/useSleepStore.ts",
        "start": 11,
        "end": 28,
        "startLoc": {
          "line": 11,
          "column": 5,
          "position": 116
        },
        "endLoc": {
          "line": 28,
          "column": 11,
          "position": 255
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", 'id'> = {\n            ...entryData,\n            userId: user.id,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          };\n\n          const { data, error } = await supabase\n            .from('hydration_entries'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/hooks/useHydrationStore.ts",
        "start": 27,
        "end": 35,
        "startLoc": {
          "line": 27,
          "column": 15,
          "position": 246
        },
        "endLoc": {
          "line": 35,
          "column": 20,
          "position": 326
        }
      },
      "secondFile": {
        "name": "client/src/features/sleep/hooks/useSleepStore.ts",
        "start": 28,
        "end": 36,
        "startLoc": {
          "line": 28,
          "column": 11,
          "position": 256
        },
        "endLoc": {
          "line": 36,
          "column": 16,
          "position": 336
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ")\n            .update({\n              ...updates,\n              updated_at: new Date().toISOString(),\n            })\n            .eq('id', id)\n            .select()\n            .single();\n\n          if (error) throw error;\n\n          set(state => ({\n            goals",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/hooks/useHydrationStore.ts",
        "start": 200,
        "end": 212,
        "startLoc": {
          "line": 200,
          "column": 18,
          "position": 1767
        },
        "endLoc": {
          "line": 212,
          "column": 6,
          "position": 1847
        }
      },
      "secondFile": {
        "name": "client/src/features/hydration/hooks/useHydrationStore.ts",
        "start": 62,
        "end": 74,
        "startLoc": {
          "line": 62,
          "column": 20,
          "position": 552
        },
        "endLoc": {
          "line": 74,
          "column": 8,
          "position": 632
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n        }\n      },\n\n      loadGoals: async () => {\n        set({ isLoading: true, error: null });\n\n        try {\n          const {\n            data: { user },\n          } = await supabase.auth.getUser();\n          if (!user) throw new Error('Utilisateur non authentifié');\n\n          const { data, error } = await supabase\n            .from('hydration_goals'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/hooks/useHydrationStore.ts",
        "start": 221,
        "end": 235,
        "startLoc": {
          "line": 221,
          "column": 6,
          "position": 1971
        },
        "endLoc": {
          "line": 235,
          "column": 18,
          "position": 2093
        }
      },
      "secondFile": {
        "name": "client/src/features/sleep/hooks/useSleepStore.ts",
        "start": 220,
        "end": 130,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 1966
        },
        "endLoc": {
          "line": 130,
          "column": 16,
          "position": 1140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ")\n            .select('*')\n            .eq('userId', user.id)\n            .order('created_at', { ascending: false });\n\n          if (error) throw error;\n\n          const activeGoal = data?.find(goal => goal.isActive) || null;\n\n          set({\n            goals: data || [],\n            currentGoal: activeGoal,\n            isLoading: false,\n          });\n        } catch {",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/hooks/useHydrationStore.ts",
        "start": 235,
        "end": 249,
        "startLoc": {
          "line": 235,
          "column": 18,
          "position": 2094
        },
        "endLoc": {
          "line": 249,
          "column": 2,
          "position": 2215
        }
      },
      "secondFile": {
        "name": "client/src/features/sleep/hooks/useSleepStore.ts",
        "start": 234,
        "end": 248,
        "startLoc": {
          "line": 234,
          "column": 14,
          "position": 2089
        },
        "endLoc": {
          "line": 248,
          "column": 2,
          "position": 2210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "(prev => prev.filter(entry => entry.id !== entryId));\n        showToast('Entrée supprimée', 'success');\n        return true;\n      } catch {\n      // Erreur silencieuse\n        console.error('Erreur lors de la suppression:', error);\n        showToast('Erreur lors de la suppression', 'error');\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [showToast]\n  );\n\n  // Mettre à jour les objectifs d'hydratation",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/hooks/useHydrationReminders.ts",
        "start": 204,
        "end": 219,
        "startLoc": {
          "line": 204,
          "column": 20,
          "position": 1838
        },
        "endLoc": {
          "line": 219,
          "column": 45,
          "position": 1948
        }
      },
      "secondFile": {
        "name": "client/src/features/sleep/hooks/useSleepAnalysis.ts",
        "start": 342,
        "end": 357,
        "startLoc": {
          "line": 342,
          "column": 16,
          "position": 3410
        },
        "endLoc": {
          "line": 357,
          "column": 42,
          "position": 3520
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "{\n  const [data, setData] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const currentUserId = userId || 'current-user';\n\n  const loadData = useCallback(async () => {\n    if (!currentUserId) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const result = await HydrationService",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/hooks/useHydration.ts",
        "start": 12,
        "end": 26,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 119
        },
        "endLoc": {
          "line": 26,
          "column": 17,
          "position": 260
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/hooks/useWearables.ts",
        "start": 12,
        "end": 26,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 119
        },
        "endLoc": {
          "line": 26,
          "column": 17,
          "position": 260
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(currentUserId);\n      setData(result);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Erreur lors du chargement';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentUserId]);\n\n  const update = useCallback(\n    async (newData: any) => {\n      if (!currentUserId) return;\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const result = await HydrationService",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/hooks/useHydration.ts",
        "start": 26,
        "end": 44,
        "startLoc": {
          "line": 26,
          "column": 17,
          "position": 263
        },
        "endLoc": {
          "line": 44,
          "column": 17,
          "position": 410
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/hooks/useWearables.ts",
        "start": 26,
        "end": 44,
        "startLoc": {
          "line": 26,
          "column": 17,
          "position": 263
        },
        "endLoc": {
          "line": 44,
          "column": 17,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "(currentUserId, newData);\n        setData(result);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Erreur lors de la mise à jour';\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [currentUserId]\n  );\n\n  const refresh = useCallback(async () => {\n    await loadData();\n  }, [loadData]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return {\n    data,\n    isLoading,\n    error,\n    refresh,\n    update,\n  };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/hydration/hooks/useHydration.ts",
        "start": 44,
        "end": 71,
        "startLoc": {
          "line": 44,
          "column": 16,
          "position": 413
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 594
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/hooks/useWearables.ts",
        "start": 44,
        "end": 71,
        "startLoc": {
          "line": 44,
          "column": 16,
          "position": 413
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 594
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(credentials),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Erreur de connexion OAuth'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 86,
        "end": 94,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 725
        },
        "endLoc": {
          "line": 94,
          "column": 28,
          "position": 809
        }
      },
      "secondFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 28,
        "end": 36,
        "startLoc": {
          "line": 28,
          "column": 8,
          "position": 180
        },
        "endLoc": {
          "line": 36,
          "column": 22,
          "position": 264
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Erreur lors de la demande de réinitialisation'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 173,
        "end": 181,
        "startLoc": {
          "line": 173,
          "column": 25,
          "position": 1438
        },
        "endLoc": {
          "line": 181,
          "column": 48,
          "position": 1522
        }
      },
      "secondFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 64,
        "end": 72,
        "startLoc": {
          "line": 64,
          "column": 11,
          "position": 533
        },
        "endLoc": {
          "line": 72,
          "column": 31,
          "position": 617
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n        headers: {\n          Authorization: `Bearer ${this.getAccessToken()}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Erreur lors de la mise à jour du profil'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 271,
        "end": 281,
        "startLoc": {
          "line": 271,
          "column": 6,
          "position": 2273
        },
        "endLoc": {
          "line": 281,
          "column": 42,
          "position": 2366
        }
      },
      "secondFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 214,
        "end": 224,
        "startLoc": {
          "line": 214,
          "column": 7,
          "position": 1806
        },
        "endLoc": {
          "line": 224,
          "column": 44,
          "position": 1899
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${this.getAccessToken()}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Erreur lors de la mise à jour des préférences'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 301,
        "end": 312,
        "startLoc": {
          "line": 301,
          "column": 14,
          "position": 2527
        },
        "endLoc": {
          "line": 312,
          "column": 48,
          "position": 2629
        }
      },
      "secondFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 270,
        "end": 224,
        "startLoc": {
          "line": 270,
          "column": 10,
          "position": 2264
        },
        "endLoc": {
          "line": 224,
          "column": 44,
          "position": 1899
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", {\n        method: 'PUT',\n        headers: {\n          Authorization: `Bearer ${this.getAccessToken()}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Erreur lors de la mise à jour du profil fitness'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 326,
        "end": 337,
        "startLoc": {
          "line": 326,
          "column": 18,
          "position": 2731
        },
        "endLoc": {
          "line": 337,
          "column": 50,
          "position": 2833
        }
      },
      "secondFile": {
        "name": "client/src/features/auth/services/auth.service.ts",
        "start": 270,
        "end": 224,
        "startLoc": {
          "line": 270,
          "column": 10,
          "position": 2264
        },
        "endLoc": {
          "line": 224,
          "column": 44,
          "position": 1899
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": ",\n      data: {\n        ...initialData,\n        progress: {\n          currentStep: CONVERSATIONAL_ONBOARDING_FLOW.initialStep,\n          completedSteps: [],\n          skippedSteps: [],\n          totalSteps: CONVERSATIONAL_ONBOARDING_FLOW.steps.length,\n          estimatedTimeLeft: 15,\n          timeSpent: 0,\n          startedAt: new Date(),\n          lastActivity: new Date(),\n          averageTimePerStep: 0,\n          skipCount: 0,\n          backCount: 0,\n          errorCount: 0,\n          helpViewCount: 0,\n          moduleSpecificSteps: {},\n          userPreferences: {\n            preferredInputTypes: [],\n            skipsTendency: 0,\n            detailLevel: 'standard',\n            pace: 'normal',\n          },\n          completionQuality: 0,\n          validationScore: 100,\n          consistencyScore: 100,\n        },\n        version: '1.0',\n        startedAt: new Date(),\n        lastUpdated: new Date(),\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/auth/hooks/useConversationalOnboarding.ts",
        "start": 474,
        "end": 505,
        "startLoc": {
          "line": 474,
          "column": 2,
          "position": 4354
        },
        "endLoc": {
          "line": 505,
          "column": 2,
          "position": 4582
        }
      },
      "secondFile": {
        "name": "client/src/features/auth/hooks/useConversationalOnboarding.ts",
        "start": 43,
        "end": 74,
        "startLoc": {
          "line": 43,
          "column": 12,
          "position": 320
        },
        "endLoc": {
          "line": 74,
          "column": 22,
          "position": 548
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "(\n            <form onSubmit={handleSignIn} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email *</label>\n                <div className=\"relative\">\n                  <Mail\n                    className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\"\n                    size={20}\n                  />\n                  <input\n                    type=\"email\"\n                    required\n                    value={signInForm.email}\n                    onChange={e => setSignInForm({ ...signInForm, email: e.target.value.trim() })}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                    placeholder=\"votre@email.com\"\n                    disabled={loading}\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Mot",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/auth/components/AuthPages.tsx",
        "start": 361,
        "end": 384,
        "startLoc": {
          "line": 361,
          "column": 2,
          "position": 2547
        },
        "endLoc": {
          "line": 384,
          "column": 4,
          "position": 2714
        }
      },
      "secondFile": {
        "name": "client/src/features/auth/components/AuthPages.tsx",
        "start": 247,
        "end": 270,
        "startLoc": {
          "line": 247,
          "column": 2,
          "position": 1765
        },
        "endLoc": {
          "line": 270,
          "column": 4,
          "position": 1932
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Mot de passe *\n                </label>\n                <div className=\"relative\">\n                  <Lock\n                    className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\"\n                    size={20}\n                  />\n                  <input\n                    type={showPassword ? 'text' : 'password'}\n                    required\n                    value={signInForm.password}\n                    onChange={e => setSignInForm({ ...signInForm, password: e.target.value })}\n                    className=\"w-full pl-10 pr-12 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n                    placeholder=\"••••••••\"\n                    disabled={loading}\n                  ",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/auth/components/AuthPages.tsx",
        "start": 377,
        "end": 399,
        "startLoc": {
          "line": 377,
          "column": 2,
          "position": 2683
        },
        "endLoc": {
          "line": 399,
          "column": 19,
          "position": 2824
        }
      },
      "secondFile": {
        "name": "client/src/features/auth/components/AuthPages.tsx",
        "start": 287,
        "end": 309,
        "startLoc": {
          "line": 287,
          "column": 2,
          "position": 2045
        },
        "endLoc": {
          "line": 309,
          "column": 21,
          "position": 2186
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ");\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const initialize = async () => {\n      const {\n        data: { user },\n      } = await supabase.auth.getUser();\n      if (!user) return;\n\n      setUserId",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/analytics/components/StatsOverview.tsx",
        "start": 35,
        "end": 45,
        "startLoc": {
          "line": 35,
          "column": 5,
          "position": 320
        },
        "endLoc": {
          "line": 45,
          "column": 10,
          "position": 411
        }
      },
      "secondFile": {
        "name": "client/src/features/workout/components/BadgeDisplay.tsx",
        "start": 26,
        "end": 36,
        "startLoc": {
          "line": 26,
          "column": 11,
          "position": 322
        },
        "endLoc": {
          "line": 36,
          "column": 6,
          "position": 413
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "}\n              />\n            ))}\n          </LineChart>\n        );\n\n      case 'area':\n        return (\n          <AreaChart data={rechartsData}>\n            {showGrid && (\n              <CartesianGrid strokeDasharray=\"3 3\" stroke={adaptiveColors.border} opacity={0.3} />\n            )}\n            <XAxis dataKey=\"name\" stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <YAxis stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <Tooltip content={<CustomTooltip />} />\n            {showLegend && <Legend />}\n            {data.datasets?.map(dataset => (\n              <Area\n                key={dataset.label}\n                type=\"monotone\"\n                dataKey={dataset.label}\n                stackId=\"1\"\n                stroke={dataset.color}\n                fill={dataset",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/analytics/components/AdvancedCharts.tsx",
        "start": 128,
        "end": 151,
        "startLoc": {
          "line": 128,
          "column": 2,
          "position": 1114
        },
        "endLoc": {
          "line": 151,
          "column": 8,
          "position": 1324
        }
      },
      "secondFile": {
        "name": "client/src/features/analytics/components/AdvancedCharts.tsx",
        "start": 90,
        "end": 125,
        "startLoc": {
          "line": 90,
          "column": 2,
          "position": 704
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 1065
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "}\n                animationDuration={animate ? 1000 : 0}\n              />\n            ))}\n          </AreaChart>\n        );\n\n      case 'bar':\n        return (\n          <BarChart data={rechartsData}>\n            {showGrid && (\n              <CartesianGrid strokeDasharray=\"3 3\" stroke={adaptiveColors.border} opacity={0.3} />\n            )}\n            <XAxis dataKey=\"name\" stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <YAxis stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <Tooltip content={<CustomTooltip />} />\n            {showLegend && <Legend />}\n            {data.datasets?.map(dataset => (\n              <Bar\n                key={dataset.label}\n                dataKey={dataset.label}\n                fill={dataset.color}\n                radius={[",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/analytics/components/AdvancedCharts.tsx",
        "start": 152,
        "end": 174,
        "startLoc": {
          "line": 152,
          "column": 4,
          "position": 1333
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 1544
        }
      },
      "secondFile": {
        "name": "client/src/features/analytics/components/AdvancedCharts.tsx",
        "start": 127,
        "end": 125,
        "startLoc": {
          "line": 127,
          "column": 2,
          "position": 1101
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 1065
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": " data={rechartsData}>\n            {showGrid && (\n              <CartesianGrid strokeDasharray=\"3 3\" stroke={adaptiveColors.border} opacity={0.3} />\n            )}\n            <XAxis dataKey=\"name\" stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <YAxis stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <Tooltip content={<CustomTooltip />} />\n            {showLegend && <Legend />}\n            {data.datasets?.map(dataset => (\n              <Area",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/analytics/components/AdvancedCharts.tsx",
        "start": 136,
        "end": 145,
        "startLoc": {
          "line": 136,
          "column": 10,
          "position": 1147
        },
        "endLoc": {
          "line": 145,
          "column": 5,
          "position": 1283
        }
      },
      "secondFile": {
        "name": "client/src/features/analytics/components/AdvancedCharts.tsx",
        "start": 111,
        "end": 120,
        "startLoc": {
          "line": 111,
          "column": 10,
          "position": 894
        },
        "endLoc": {
          "line": 120,
          "column": 5,
          "position": 1030
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": " data={rechartsData}>\n            {showGrid && (\n              <CartesianGrid strokeDasharray=\"3 3\" stroke={adaptiveColors.border} opacity={0.3} />\n            )}\n            <XAxis dataKey=\"name\" stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <YAxis stroke={adaptiveColors.textSecondary} fontSize={12} />\n            <Tooltip content={<CustomTooltip />} />\n            {showLegend && <Legend />}\n            {data.datasets?.map(dataset => (\n              <Bar",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/analytics/components/AdvancedCharts.tsx",
        "start": 161,
        "end": 170,
        "startLoc": {
          "line": 161,
          "column": 9,
          "position": 1379
        },
        "endLoc": {
          "line": 170,
          "column": 4,
          "position": 1515
        }
      },
      "secondFile": {
        "name": "client/src/features/analytics/components/AdvancedCharts.tsx",
        "start": 111,
        "end": 120,
        "startLoc": {
          "line": 111,
          "column": 10,
          "position": 894
        },
        "endLoc": {
          "line": 120,
          "column": 5,
          "position": 1030
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(userId: string): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`);\n      if (!response.ok) throw new Error('Erreur lors de la récupération des données');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur API admin:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/admin/services/admin.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 13,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 20,
          "position": 127
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 17,
          "position": 35
        },
        "endLoc": {
          "line": 14,
          "column": 24,
          "position": 127
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(userId: string, data: any): Promise<any> {\n    try {\n      const response = await fetch(`${this.BASE_URL}/${userId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data),\n      });\n      if (!response.ok) throw new Error('Erreur lors de la mise à jour');\n      return await response.json();\n    } catch {\n      // Erreur silencieuse\n      console.error('Erreur mise à jour admin:'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/admin/services/admin.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 12,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 28,
          "position": 294
        }
      },
      "secondFile": {
        "name": "client/src/features/wearables/services/wearables.service.ts",
        "start": 19,
        "end": 30,
        "startLoc": {
          "line": 19,
          "column": 16,
          "position": 157
        },
        "endLoc": {
          "line": 30,
          "column": 32,
          "position": 294
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "): Promise<boolean> => {\n      try {\n        // Mock API call\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        setUsers(prev => ({\n          ...prev,\n          users: prev.users.map(user => (user.id === userId ? { ...user, role",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/features/admin/hooks/useAdmin.ts",
        "start": 198,
        "end": 205,
        "startLoc": {
          "line": 198,
          "column": 12,
          "position": 1953
        },
        "endLoc": {
          "line": 205,
          "column": 5,
          "position": 2041
        }
      },
      "secondFile": {
        "name": "client/src/features/admin/hooks/useAdmin.ts",
        "start": 176,
        "end": 183,
        "startLoc": {
          "line": 176,
          "column": 12,
          "position": 1762
        },
        "endLoc": {
          "line": 183,
          "column": 7,
          "position": 1850
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "({ email, password });\n        if (error) {\n          return { success: false, error: error.message };\n        }\n        return { success: true, data };\n      } catch (err) {\n        return {\n          success: false,\n          error: err instanceof Error ? err.message : 'Sign up failed'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 197,
        "end": 205,
        "startLoc": {
          "line": 197,
          "column": 7,
          "position": 2543
        },
        "endLoc": {
          "line": 205,
          "column": 17,
          "position": 2645
        }
      },
      "secondFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 179,
        "end": 187,
        "startLoc": {
          "line": 179,
          "column": 7,
          "position": 2361
        },
        "endLoc": {
          "line": 187,
          "column": 17,
          "position": 2463
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n        if (error) {\n          return { success: false, error: error.message };\n        }\n        return { success: true, data };\n      } catch (err) {\n        return {\n          success: false,\n          error: err instanceof Error ? err.message : 'Query failed'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 254,
        "end": 262,
        "startLoc": {
          "line": 254,
          "column": 7,
          "position": 3148
        },
        "endLoc": {
          "line": 262,
          "column": 15,
          "position": 3241
        }
      },
      "secondFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 179,
        "end": 187,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 2370
        },
        "endLoc": {
          "line": 187,
          "column": 17,
          "position": 2463
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "();\n        if (error) {\n          return { success: false, error: error.message };\n        }\n        return { success: true };\n      } catch (err) {\n        return {\n          success: false,\n          error: err instanceof Error ? err.message : 'Delete failed'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 308,
        "end": 316,
        "startLoc": {
          "line": 308,
          "column": 7,
          "position": 3711
        },
        "endLoc": {
          "line": 316,
          "column": 16,
          "position": 3802
        }
      },
      "secondFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 214,
        "end": 222,
        "startLoc": {
          "line": 214,
          "column": 8,
          "position": 2710
        },
        "endLoc": {
          "line": 222,
          "column": 18,
          "position": 2801
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n        if (error) {\n          return { success: false, error: error.message };\n        }\n        return { success: true, data };\n      } catch (err) {\n        return {\n          success: false,\n          error: err instanceof Error ? err.message : 'Upload failed'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 327,
        "end": 335,
        "startLoc": {
          "line": 327,
          "column": 5,
          "position": 3901
        },
        "endLoc": {
          "line": 335,
          "column": 16,
          "position": 3994
        }
      },
      "secondFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 179,
        "end": 187,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 2370
        },
        "endLoc": {
          "line": 187,
          "column": 17,
          "position": 2463
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n        if (error) {\n          return { success: false, error: error.message };\n        }\n        return { success: true, data };\n      } catch (err) {\n        return {\n          success: false,\n          error: err instanceof Error ? err.message : 'Download failed'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 345,
        "end": 353,
        "startLoc": {
          "line": 345,
          "column": 5,
          "position": 4081
        },
        "endLoc": {
          "line": 353,
          "column": 18,
          "position": 4174
        }
      },
      "secondFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 179,
        "end": 187,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 2370
        },
        "endLoc": {
          "line": 187,
          "column": 17,
          "position": 2463
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n        if (error) {\n          return { success: false, error: error.message };\n        }\n        return { success: true };\n      } catch (err) {\n        return {\n          success: false,\n          error: err instanceof Error ? err.message : 'Delete failed',\n        };\n      }\n    },\n    [client]\n  );\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 363,
        "end": 378,
        "startLoc": {
          "line": 363,
          "column": 6,
          "position": 4260
        },
        "endLoc": {
          "line": 378,
          "column": 7,
          "position": 4375
        }
      },
      "secondFile": {
        "name": "client/src/shared/hooks/useSupabase.ts",
        "start": 214,
        "end": 323,
        "startLoc": {
          "line": 214,
          "column": 2,
          "position": 2711
        },
        "endLoc": {
          "line": 323,
          "column": 19,
          "position": 3827
        }
      }
    },
    {
      "format": "tsx",
      "lines": 31,
      "fragment": "= () => {\n    switch (variant) {\n      case 'spinner':\n        return <Loader2 className={cn('animate-spin text-blue-600', loadingSizes[size])} />;\n\n      case 'dots':\n        return (\n          <div className=\"flex space-x-1\">\n            {[0, 1, 2].map(i => (\n              <div\n                key={i}\n                className={cn(\n                  'bg-blue-600 rounded-full animate-pulse',\n                  size === 'sm' && 'h-2 w-2',\n                  size === 'md' && 'h-3 w-3',\n                  size === 'lg' && 'h-4 w-4',\n                  size === 'xl' && 'h-5 w-5'\n                )}\n                style={{\n                  animationDelay: `${i * 0.1}s`,\n                  animationDuration: '1.4s',\n                }}\n              />\n            ))}\n          </div>\n        );\n\n      case 'pulse':\n        return <div className={cn('bg-blue-600 rounded-full animate-pulse', loadingSizes[size])} />;\n\n      case 'progress'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/shared/components/UnifiedLoading.tsx",
        "start": 47,
        "end": 77,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 292
        },
        "endLoc": {
          "line": 77,
          "column": 11,
          "position": 538
        }
      },
      "secondFile": {
        "name": "client/src/shared/components/Loading/Loading.tsx",
        "start": 27,
        "end": 57,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 212
        },
        "endLoc": {
          "line": 57,
          "column": 11,
          "position": 458
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/shared/components/AppErrorBoundary.tsx",
        "start": 12,
        "end": 22,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 67
        },
        "endLoc": {
          "line": 22,
          "column": 10,
          "position": 166
        }
      },
      "secondFile": {
        "name": "client/src/shared/components/ErrorBoundary.tsx",
        "start": 12,
        "end": 22,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 64
        },
        "endLoc": {
          "line": 22,
          "column": 4,
          "position": 163
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": string;\n          total_calories?: number | null;\n          total_carbs?: number | null;\n          total_fat?: number | null;\n          total_protein?: number | null;\n          total_workout_minutes?: number | null;\n          updated_at?: string | null;\n          user_id?: string | null;\n          water_intake_ml?: number | null;\n          workouts_completed?: number | null;\n        };\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 142,
        "end": 153,
        "startLoc": {
          "line": 142,
          "column": 2,
          "position": 1309
        },
        "endLoc": {
          "line": 153,
          "column": 14,
          "position": 1427
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 124,
        "end": 135,
        "startLoc": {
          "line": 124,
          "column": 10,
          "position": 1115
        },
        "endLoc": {
          "line": 135,
          "column": 7,
          "position": 1233
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": {\n          category?: string | null;\n          created_at?: string | null;\n          description?: string | null;\n          difficulty?: string | null;\n          equipment?: string | null;\n          id?: string;\n          image_url?: string | null;\n          instructions?: string | null;\n          muscle_groups?: string[] | null;\n          name?",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 192,
        "end": 202,
        "startLoc": {
          "line": 192,
          "column": 7,
          "position": 1777
        },
        "endLoc": {
          "line": 202,
          "column": 2,
          "position": 1889
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 178,
        "end": 188,
        "startLoc": {
          "line": 178,
          "column": 7,
          "position": 1630
        },
        "endLoc": {
          "line": 188,
          "column": 2,
          "position": 1742
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": {\n          brand?: string | null;\n          calories_per_100g?: number | null;\n          carbs_per_100g?: number | null;\n          category?: string | null;\n          common_units?: Json | null;\n          created_at?: string | null;\n          fat_per_100g?: number | null;\n          fiber_per_100g?: number | null;\n          id?: string;\n          name?",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 237,
        "end": 247,
        "startLoc": {
          "line": 237,
          "column": 7,
          "position": 2222
        },
        "endLoc": {
          "line": 247,
          "column": 2,
          "position": 2332
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 223,
        "end": 233,
        "startLoc": {
          "line": 223,
          "column": 7,
          "position": 2077
        },
        "endLoc": {
          "line": 233,
          "column": 2,
          "position": 2187
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": string;\n          meal_type?: string | null;\n          notes?: string | null;\n          total_calories?: number | null;\n          total_carbs?: number | null;\n          total_fat?: number | null;\n          total_protein?: number | null;\n          user_id?: string | null;\n        };\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 322,
        "end": 331,
        "startLoc": {
          "line": 322,
          "column": 2,
          "position": 2984
        },
        "endLoc": {
          "line": 331,
          "column": 14,
          "position": 3078
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 309,
        "end": 318,
        "startLoc": {
          "line": 309,
          "column": 10,
          "position": 2850
        },
        "endLoc": {
          "line": 318,
          "column": 7,
          "position": 2944
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": {\n          bedtime?: string | null;\n          created_at?: string | null;\n          duration_minutes?: number | null;\n          energy_level?: number | null;\n          factors?: Json | null;\n          id?: string;\n          mood_rating?: number | null;\n          notes?: string | null;\n          quality_rating?: number | null;\n          sleep_date?",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 405,
        "end": 415,
        "startLoc": {
          "line": 405,
          "column": 7,
          "position": 3705
        },
        "endLoc": {
          "line": 415,
          "column": 2,
          "position": 3815
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 391,
        "end": 401,
        "startLoc": {
          "line": 391,
          "column": 7,
          "position": 3560
        },
        "endLoc": {
          "line": 401,
          "column": 2,
          "position": 3670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ": {\n          achieved_at?: string | null;\n          category?: string | null;\n          created_at?: string | null;\n          current_value?: number | null;\n          goal_type?: string | null;\n          id?: string;\n          is_active?: boolean | null;\n          start_date?: string | null;\n          target_date?: string | null;\n          target_value?: number | null;\n          unit?: string | null;\n          user_id?: string | null;\n        };\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 458,
        "end": 472,
        "startLoc": {
          "line": 458,
          "column": 7,
          "position": 4205
        },
        "endLoc": {
          "line": 472,
          "column": 14,
          "position": 4354
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 444,
        "end": 458,
        "startLoc": {
          "line": 444,
          "column": 7,
          "position": 4055
        },
        "endLoc": {
          "line": 458,
          "column": 7,
          "position": 4204
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ": {\n          activity_level?: string | null;\n          age?: number | null;\n          available_time_per_day?: number | null;\n          avatar_url?: string | null;\n          created_at?: string | null;\n          fitness_experience?: string | null;\n          fitness_goal?: string | null;\n          full_name?: string | null;\n          gender?: string | null;\n          height_cm?: number | null;\n          id?",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 553,
        "end": 564,
        "startLoc": {
          "line": 553,
          "column": 7,
          "position": 5219
        },
        "endLoc": {
          "line": 564,
          "column": 2,
          "position": 5345
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 518,
        "end": 529,
        "startLoc": {
          "line": 518,
          "column": 7,
          "position": 4804
        },
        "endLoc": {
          "line": 529,
          "column": 2,
          "position": 4930
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ": string;\n          injuries?: string[] | null;\n          lifestyle?: string | null;\n          motivation?: string | null;\n          notifications_enabled?: boolean | null;\n          primary_goals?: string[] | null;\n          season_period?: string | null;\n          sport?: string | null;\n          sport_level?: string | null;\n          sport_position?: string | null;\n          timezone?: string | null;\n          training_frequency?: number | null;\n          updated_at?: string | null;\n          username?: string | null;\n          weight_kg?: number | null;\n          profile_type?: string | null;\n          modules?: string[] | null;\n          active_modules?: string[] | null;\n          dietary_preference?: string | null;\n          dietary_restrictions?: string[] | null;\n          food_allergies?: string[] | null;\n          food_dislikes?: string[] | null;\n          country_code?: string | null;\n        };\n        Relationships",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 564,
        "end": 588,
        "startLoc": {
          "line": 564,
          "column": 2,
          "position": 5346
        },
        "endLoc": {
          "line": 588,
          "column": 14,
          "position": 5634
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 529,
        "end": 553,
        "startLoc": {
          "line": 529,
          "column": 3,
          "position": 4930
        },
        "endLoc": {
          "line": 553,
          "column": 7,
          "position": 5218
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": {\n          calories_burned?: number | null;\n          completed_at?: string | null;\n          created_at?: string | null;\n          description?: string | null;\n          difficulty?: string | null;\n          duration_minutes?: number | null;\n          exercises?: Json | null;\n          id?: string;\n          name?",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 621,
        "end": 630,
        "startLoc": {
          "line": 621,
          "column": 7,
          "position": 5955
        },
        "endLoc": {
          "line": 630,
          "column": 2,
          "position": 6053
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 606,
        "end": 615,
        "startLoc": {
          "line": 606,
          "column": 7,
          "position": 5798
        },
        "endLoc": {
          "line": 615,
          "column": 2,
          "position": 5896
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "<\n  DefaultSchemaTableNameOrOptions extends\n    | keyof DefaultSchema['Tables']\n    | { schema: keyof Database },\n  TableName extends DefaultSchemaTableNameOrOptions extends {\n    schema: keyof Database;\n  }\n    ? keyof Database[DefaultSchemaTableNameOrOptions['schema']]['Tables']\n    : never = never,\n> = DefaultSchemaTableNameOrOptions extends { schema: keyof Database }\n  ? Database[DefaultSchemaTableNameOrOptions['schema']]['Tables'][TableName] extends {\n      Update",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 771,
        "end": 782,
        "startLoc": {
          "line": 771,
          "column": 13,
          "position": 7219
        },
        "endLoc": {
          "line": 782,
          "column": 7,
          "position": 7341
        }
      },
      "secondFile": {
        "name": "client/src/integrations/supabase/types.ts",
        "start": 748,
        "end": 759,
        "startLoc": {
          "line": 748,
          "column": 13,
          "position": 7013
        },
        "endLoc": {
          "line": 759,
          "column": 7,
          "position": 7135
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ",\n      });\n\n      server.use(\n        http.get('*/rest/v1/workouts*', () => {\n          return HttpResponse.json([mockWorkout]);\n        })\n      );\n\n      render(<WorkoutPage />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Push-ups'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 89,
        "end": 101,
        "startLoc": {
          "line": 89,
          "column": 14,
          "position": 737
        },
        "endLoc": {
          "line": 101,
          "column": 11,
          "position": 818
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 38,
        "end": 50,
        "startLoc": {
          "line": 38,
          "column": 15,
          "position": 289
        },
        "endLoc": {
          "line": 50,
          "column": 22,
          "position": 370
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ",\n      });\n\n      server.use(\n        http.get('*/rest/v1/workouts*', () => {\n          return HttpResponse.json([mockWorkout]);\n        })\n      );\n\n      render(<WorkoutPage />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Push-ups')).toBeInTheDocument();\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 110,
        "end": 123,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 927
        },
        "endLoc": {
          "line": 123,
          "column": 2,
          "position": 1018
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 38,
        "end": 102,
        "startLoc": {
          "line": 38,
          "column": 15,
          "position": 289
        },
        "endLoc": {
          "line": 102,
          "column": 7,
          "position": 828
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "}),\n        ],\n      });\n\n      server.use(\n        http.get('*/rest/v1/workouts*', () => {\n          return HttpResponse.json([mockWorkout]);\n        })\n      );\n\n      render(<WorkoutPage />);\n\n      await waitFor(() => {\n        expect",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 315,
        "end": 328,
        "startLoc": {
          "line": 315,
          "column": 11,
          "position": 2715
        },
        "endLoc": {
          "line": 328,
          "column": 7,
          "position": 2796
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 233,
        "end": 246,
        "startLoc": {
          "line": 233,
          "column": 2,
          "position": 2065
        },
        "endLoc": {
          "line": 246,
          "column": 36,
          "position": 2146
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "],\n      });\n\n      server.use(\n        http.get('*/rest/v1/workouts*', () => {\n          return HttpResponse.json([mockWorkout]);\n        })\n      );\n\n      render(<WorkoutPage />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Push-ups')).toBeInTheDocument();\n      });\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 316,
        "end": 331,
        "startLoc": {
          "line": 316,
          "column": 9,
          "position": 2720
        },
        "endLoc": {
          "line": 331,
          "column": 6,
          "position": 2818
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 110,
        "end": 125,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 926
        },
        "endLoc": {
          "line": 125,
          "column": 41,
          "position": 1024
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "}, { status: 500 });\n        })\n      );\n\n      render(<WorkoutPage />);\n\n      await waitFor(() => screen.findByRole('checkbox'));\n\n      const checkbox = screen.getByRole('checkbox');\n      await user.click(checkbox);\n\n      // Vérifier que l'état local est conservé malgré l'erreur",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 386,
        "end": 397,
        "startLoc": {
          "line": 386,
          "column": 2,
          "position": 3327
        },
        "endLoc": {
          "line": 397,
          "column": 58,
          "position": 3409
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 363,
        "end": 374,
        "startLoc": {
          "line": 363,
          "column": 2,
          "position": 3142
        },
        "endLoc": {
          "line": 374,
          "column": 45,
          "position": 3224
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ", async () => {\n      const user = userEvent.setup();\n\n      render(<WorkoutPage />);\n\n      await waitFor(() => screen.findByRole('checkbox'));\n\n      const checkbox = screen.getByRole('checkbox');\n      await user.click(checkbox);\n\n      // Vérifier la présence d'un live region pour les annonces",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 416,
        "end": 426,
        "startLoc": {
          "line": 416,
          "column": 52,
          "position": 3573
        },
        "endLoc": {
          "line": 426,
          "column": 59,
          "position": 3658
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/WorkoutPage.test.tsx",
        "start": 252,
        "end": 262,
        "startLoc": {
          "line": 252,
          "column": 58,
          "position": 2195
        },
        "endLoc": {
          "line": 262,
          "column": 49,
          "position": 2280
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "});\n\n      server.use(\n        http.get('*/rest/v1/exercises', () => {\n          return HttpResponse.json([mockExercise]);\n        })\n      );\n\n      render(<ExercisesPage />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Test Exercise')).toBeInTheDocument();\n      });\n\n      // Cliquer sur la carte d'exercice",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/ExercisesPage.test.tsx",
        "start": 222,
        "end": 236,
        "startLoc": {
          "line": 222,
          "column": 7,
          "position": 1919
        },
        "endLoc": {
          "line": 236,
          "column": 35,
          "position": 2013
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/ExercisesPage.test.tsx",
        "start": 193,
        "end": 207,
        "startLoc": {
          "line": 193,
          "column": 2,
          "position": 1699
        },
        "endLoc": {
          "line": 207,
          "column": 32,
          "position": 1793
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ",\n      });\n\n      server.use(\n        http.get('*/rest/v1/challenges*', () => {\n          return HttpResponse.json([mockChallenge]);\n        })\n      );\n\n      render(<ChallengesPage />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Completed Challenge'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/ChallengesPage.test.tsx",
        "start": 196,
        "end": 208,
        "startLoc": {
          "line": 196,
          "column": 4,
          "position": 1590
        },
        "endLoc": {
          "line": 208,
          "column": 22,
          "position": 1671
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/ChallengesPage.test.tsx",
        "start": 171,
        "end": 183,
        "startLoc": {
          "line": 171,
          "column": 3,
          "position": 1394
        },
        "endLoc": {
          "line": 183,
          "column": 19,
          "position": 1475
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ",\n      });\n\n      server.use(\n        http.get('*/rest/v1/challenges*', () => {\n          return HttpResponse.json([mockChallenge]);\n        })\n      );\n\n      render(<ChallengesPage />);\n\n      await waitFor(() => {\n        expect(screen.getByText('Detailed Challenge'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/ChallengesPage.test.tsx",
        "start": 221,
        "end": 233,
        "startLoc": {
          "line": 221,
          "column": 50,
          "position": 1794
        },
        "endLoc": {
          "line": 233,
          "column": 21,
          "position": 1875
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/ChallengesPage.test.tsx",
        "start": 171,
        "end": 183,
        "startLoc": {
          "line": 171,
          "column": 3,
          "position": 1394
        },
        "endLoc": {
          "line": 183,
          "column": 19,
          "position": 1475
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "expect(screen.getByLabelText(/rechercher/i)).toBeInTheDocument();\n      expect(screen.getByLabelText(/catégorie/i)).toBeInTheDocument();\n    });\n\n    it('supporte la navigation au clavier', async () => {\n      const user = userEvent.setup();\n\n      render(<ChallengesPage",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/ChallengesPage.test.tsx",
        "start": 423,
        "end": 430,
        "startLoc": {
          "line": 423,
          "column": 7,
          "position": 3466
        },
        "endLoc": {
          "line": 430,
          "column": 15,
          "position": 3537
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/ExercisesPage.test.tsx",
        "start": 303,
        "end": 310,
        "startLoc": {
          "line": 303,
          "column": 7,
          "position": 2545
        },
        "endLoc": {
          "line": 310,
          "column": 14,
          "position": 2616
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "});\n        })\n      );\n\n      render(<MockAuthPage />);\n\n      const emailInput = screen.getByPlaceholderText('Email');\n      const passwordInput = screen.getByPlaceholderText('Mot de passe');\n      const submitButton = screen.getByRole('button', { name: /se connecter/i });\n\n      await user.type(emailInput, 'wrong@example.com'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/pages/AdditionalPages.test.tsx",
        "start": 165,
        "end": 175,
        "startLoc": {
          "line": 165,
          "column": 2,
          "position": 1519
        },
        "endLoc": {
          "line": 175,
          "column": 20,
          "position": 1609
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/pages/AdditionalPages.test.tsx",
        "start": 140,
        "end": 150,
        "startLoc": {
          "line": 140,
          "column": 11,
          "position": 1286
        },
        "endLoc": {
          "line": 150,
          "column": 19,
          "position": 1376
        }
      }
    },
    {
      "format": "javascript",
      "lines": 91,
      "fragment": "={mockWorkout} onStartWorkout={mockOnStartWorkout} />);\n\n      expect(screen.getByText('intermediate')).toBeInTheDocument();\n      expect(screen.getByText('chest')).toBeInTheDocument();\n      expect(screen.getByText('arms')).toBeInTheDocument();\n    });\n\n    it('ne montre pas les exercices par défaut', () => {\n      render(<WorkoutCard workout={mockWorkout} onStartWorkout={mockOnStartWorkout} />);\n\n      expect(screen.queryByText('Push-ups')).not.toBeInTheDocument();\n      expect(screen.queryByText('Pull-ups')).not.toBeInTheDocument();\n      expect(screen.queryByText('Dips')).not.toBeInTheDocument();\n    });\n  });\n\n  describe(\"Interaction d'expansion\", () => {\n    it(\"s'étend quand on clique sur l'en-tête\", async () => {\n      const user = userEvent.setup();\n      render(<WorkoutCard workout={mockWorkout} onStartWorkout={mockOnStartWorkout} />);\n\n      // La liste d'exercices ne devrait pas être visible initialement\n      expect(screen.queryByText('Push-ups')).not.toBeInTheDocument();\n\n      // Cliquer sur l'en-tête pour étendre - utiliser un élément plus spécifique\n      const cardHeader = screen.getByText('Upper Body Strength');\n      await user.click(cardHeader);\n\n      // Vérifier que la liste d'exercices est maintenant visible\n      expect(screen.getByText('Push-ups')).toBeInTheDocument();\n      expect(screen.getByText('Pull-ups')).toBeInTheDocument();\n      expect(screen.getByText('Dips')).toBeInTheDocument();\n    });\n  });\n\n  describe(\"Démarrage d'entraînement\", () => {\n    it(\"affiche les boutons d'action quand étendu\", async () => {\n      const user = userEvent.setup();\n      render(<WorkoutCard workout={mockWorkout} onStartWorkout={mockOnStartWorkout} />);\n\n      // Étendre la carte\n      const cardHeader = screen.getByText('Upper Body Strength');\n      await user.click(cardHeader);\n\n      // Vérifier que les boutons sont visibles\n      expect(screen.getByRole('button', { name: /démarrer l'entraînement/i })).toBeInTheDocument();\n      expect(screen.getByRole('button', { name: /aperçu rapide/i })).toBeInTheDocument();\n    });\n\n    it('démarre un entraînement personnalisé', async () => {\n      const user = userEvent.setup();\n      render(<WorkoutCard workout={mockWorkout} onStartWorkout={mockOnStartWorkout} />);\n\n      // Étendre la carte\n      const cardHeader = screen.getByText('Upper Body Strength');\n      await user.click(cardHeader);\n\n      // Cliquer sur démarrer l'entraînement\n      const startButton = screen.getByRole('button', { name: /démarrer l'entraînement/i });\n      await user.click(startButton);\n\n      expect(mockStartSession).toHaveBeenCalledWith('Upper Body Strength', 45);\n      expect(mockToast).toHaveBeenCalled();\n    });\n  });\n\n  describe('Gestion des exercices', () => {\n    it('affiche les contrôles pour chaque exercice quand étendu', async () => {\n      const user = userEvent.setup();\n      render(<WorkoutCard workout={mockWorkout} onStartWorkout={mockOnStartWorkout} />);\n\n      // Étendre la carte\n      const cardHeader = screen.getByText('Upper Body Strength');\n      await user.click(cardHeader);\n\n      // Vérifier que chaque exercice a ses contrôles\n      mockWorkout.exerciseList.forEach(exercise => {\n        expect(screen.getByText(exercise)).toBeInTheDocument();\n      });\n\n      // Vérifier qu'il y a des contrôles pour sets, reps, weight\n      expect(screen.getAllByText('Séries')).toHaveLength(3);\n      expect(screen.getAllByText('Reps')).toHaveLength(3);\n      expect(screen.getAllByText('Poids (kg)')).toHaveLength(3);\n    });\n  });\n\n  describe('Cas limites', () => {\n    it('gère les workouts sans exercices', () => {\n      const emptyWorkout = { ...mockWorkout, exerciseList: [] };\n      render(<WorkoutCard workout={emptyWorkout",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/__tests__/components/WorkoutCard.test.tsx",
        "start": 73,
        "end": 163,
        "startLoc": {
          "line": 73,
          "column": 8,
          "position": 587
        },
        "endLoc": {
          "line": 163,
          "column": 13,
          "position": 1507
        }
      },
      "secondFile": {
        "name": "client/src/__tests__/components/WorkoutCard.test.tsx",
        "start": 59,
        "end": 142,
        "startLoc": {
          "line": 59,
          "column": 8,
          "position": 429
        },
        "endLoc": {
          "line": 142,
          "column": 12,
          "position": 1303
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const { data, error } = await supabase\n      .from('sports_library')\n      .select('positions')\n      .eq('id', sportId)\n      .single();\n\n    if (error || !data) {\n      console.error('getPositionsFromLibrary:', error);\n      return [];\n    }\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/utils/positionsService.ts",
        "start": 14,
        "end": 24,
        "startLoc": {
          "line": 14,
          "column": 5,
          "position": 157
        },
        "endLoc": {
          "line": 24,
          "column": 6,
          "position": 243
        }
      },
      "secondFile": {
        "name": "client/src/features/ai-coach/hooks/usePositions.ts",
        "start": 9,
        "end": 19,
        "startLoc": {
          "line": 9,
          "column": 3,
          "position": 85
        },
        "endLoc": {
          "line": 19,
          "column": 7,
          "position": 171
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n        }\n      },\n\n      setLoading: isLoading => {\n        set({ isLoading });\n      },\n\n      setError: error => {\n        set({ error, isLoading: false });\n      },\n\n      clearError: () => {\n        set({ error: null });\n      },\n\n      // Utilitaires de calcul",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/store/profileStore.ts",
        "start": 153,
        "end": 169,
        "startLoc": {
          "line": 153,
          "column": 2,
          "position": 1263
        },
        "endLoc": {
          "line": 169,
          "column": 25,
          "position": 1362
        }
      },
      "secondFile": {
        "name": "client/src/store/settingsStore.ts",
        "start": 286,
        "end": 301,
        "startLoc": {
          "line": 286,
          "column": 6,
          "position": 2180
        },
        "endLoc": {
          "line": 301,
          "column": 2,
          "position": 2278
        }
      }
    },
    {
      "format": "typescript",
      "lines": 60,
      "fragment": "// Architecture modulaire avec stores séparés\n\n// Imports des stores modulaires\nexport {\n  useAuthStore,\n  useAuthState,\n  useAuthActions,\n  useUser,\n  useIsAuthenticated,\n} from './authStore';\n\nexport {\n  useProfileStore,\n  useProfileState,\n  useProfileActions,\n  useProfileMetrics,\n  useUserSettings,\n} from './profileStore';\n\nexport { \n  useScalesStore, \n  useScalesState, \n  useWeightHistory, \n  useScaleActions \n} from './scalesStore';\n\nexport {\n  useSettingsStore,\n  useAppSettings,\n  useThemeSettings,\n  useLanguageSettings,\n  useUnitsSettings,\n  useNotificationSettings,\n  usePrivacySettings,\n  useWorkoutSettings,\n  useDisplaySettings,\n  useSettingsActions,\n} from './settingsStore';\n\n// Store principal pour les données applicatives\nexport { appStore } from './appStore';\n\n// Types\nexport type { AuthState } from './authStore';\nexport type { ProfileState } from './profileStore';\nexport type { ScalesState } from './scalesStore';\nexport type { SettingsState } from './settingsStore';\n\n// Utilitaires pour la migration\nexport const StoreUtils = {\n  // Reset tous les stores\n  resetAllStores: () => {\n    // À implémenter si nécessaire\n  },\n\n  // Vérifier l'état de synchronisation\n  getSyncStatus: () => {\n    // À implémenter si nécessaire\n  },\n};",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/store/index-new.ts",
        "start": 2,
        "end": 61,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 61,
          "column": 2,
          "position": 290
        }
      },
      "secondFile": {
        "name": "client/src/store/index.ts",
        "start": 2,
        "end": 56,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 281
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "},\n\n      setLoading: isLoading => {\n        set({ isLoading });\n      },\n\n      setError: error => {\n        set({ error, isLoading: false });\n      },\n\n      clearError: () => {\n        set({ error: null });\n      },\n\n      updateUserData",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/store/authStore.ts",
        "start": 71,
        "end": 85,
        "startLoc": {
          "line": 71,
          "column": 7,
          "position": 555
        },
        "endLoc": {
          "line": 85,
          "column": 15,
          "position": 648
        }
      },
      "secondFile": {
        "name": "client/src/store/settingsStore.ts",
        "start": 288,
        "end": 301,
        "startLoc": {
          "line": 288,
          "column": 7,
          "position": 2186
        },
        "endLoc": {
          "line": 301,
          "column": 2,
          "position": 2278
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n\n          const { error } = await supabase\n            .from('user_profiles')\n            .update({\n              active_modules: newActiveModules,\n              updated_at: new Date().toISOString(),\n            })\n            .eq('id', appStoreUser.id);\n\n          if (error) {\n            return false;\n          }\n\n          get().updateAppStoreUserProfile({ active_modules: newActiveModules });\n          console.log(`✅ Module ${moduleId} désactivé avec succès`",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/store/appStore.ts",
        "start": 681,
        "end": 696,
        "startLoc": {
          "line": 681,
          "column": 2,
          "position": 5833
        },
        "endLoc": {
          "line": 696,
          "column": 24,
          "position": 5950
        }
      },
      "secondFile": {
        "name": "client/src/store/appStore.ts",
        "start": 648,
        "end": 663,
        "startLoc": {
          "line": 648,
          "column": 2,
          "position": 5556
        },
        "endLoc": {
          "line": 663,
          "column": 21,
          "position": 5673
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n\n      if (response.success && response.data?.tokens) {\n        // Set auth token for subsequent requests\n        api.setAuthToken(response.data.tokens.accessToken);\n\n        return {\n          success: true,\n          data: response.data,\n        };\n      }\n\n      return {\n        success: false,\n        error: response.error || 'Registration failed'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/services/api.service.ts",
        "start": 50,
        "end": 64,
        "startLoc": {
          "line": 50,
          "column": 9,
          "position": 368
        },
        "endLoc": {
          "line": 64,
          "column": 22,
          "position": 462
        }
      },
      "secondFile": {
        "name": "client/src/services/api.service.ts",
        "start": 18,
        "end": 32,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 121
        },
        "endLoc": {
          "line": 32,
          "column": 15,
          "position": 215
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n      });\n\n      if (error) {\n        return { user: null, error: error.message };\n      }\n\n      if (data.user) {\n        return {\n          user: {\n            id: data.user.id,\n            email: data.user.email!,\n            user_metadata: data.user.user_metadata,\n          },\n        };\n      }\n\n      return { user: null, error: 'Login failed'",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/lib/auth.ts",
        "start": 54,
        "end": 71,
        "startLoc": {
          "line": 54,
          "column": 9,
          "position": 423
        },
        "endLoc": {
          "line": 71,
          "column": 15,
          "position": 547
        }
      },
      "secondFile": {
        "name": "client/src/lib/auth.ts",
        "start": 26,
        "end": 43,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 198
        },
        "endLoc": {
          "line": 43,
          "column": 22,
          "position": 322
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ")\n      .select('*')\n      .eq('user_id', userId)\n      .gte('start_time', startDate.toISOString())\n      .lte('end_time', endDate.toISOString())\n      .order('start_time', { ascending: true });\n\n    return { data, error };\n  }\n\n  // 📈 Statistiques wearables",
      "tokens": 0,
      "firstFile": {
        "name": "client/src/lib/analytics.ts",
        "start": 335,
        "end": 345,
        "startLoc": {
          "line": 335,
          "column": 20,
          "position": 3180
        },
        "endLoc": {
          "line": 345,
          "column": 29,
          "position": 3264
        }
      },
      "secondFile": {
        "name": "client/src/lib/analytics.ts",
        "start": 323,
        "end": 333,
        "startLoc": {
          "line": 323,
          "column": 17,
          "position": 3047
        },
        "endLoc": {
          "line": 333,
          "column": 7,
          "position": 3131
        }
      }
    }
  ],
  "filename": "/workspaces/MyFitHeroV4/node_modules/@jscpd/html-reporter/dist/templates/main.pug"
}